

================================================================
== Vivado HLS Report for 'operator_mul_assign_float'
================================================================
* Date:           Sat Aug  1 17:20:04 2020

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        deblur_IP
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     7.256|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    9|    9|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|DSP              |        -|      -|       -|      -|
|Expression       |        -|      -|       0|      8|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|     16|     982|   2064|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|     18|
|Register         |        -|      -|     266|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|     16|    1248|   2090|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      7|       1|      3|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    +---------------------------+----------------------+---------+-------+-----+-----+
    |          Instance         |        Module        | BRAM_18K| DSP48E|  FF | LUT |
    +---------------------------+----------------------+---------+-------+-----+-----+
    |WienerDeblur_faddibs_U121  |WienerDeblur_faddibs  |        0|      2|  205|  390|
    |WienerDeblur_fmuljbC_U122  |WienerDeblur_fmuljbC  |        0|      3|  143|  321|
    |WienerDeblur_fmuljbC_U123  |WienerDeblur_fmuljbC  |        0|      3|  143|  321|
    |WienerDeblur_fmuljbC_U124  |WienerDeblur_fmuljbC  |        0|      3|  143|  321|
    |WienerDeblur_fmuljbC_U125  |WienerDeblur_fmuljbC  |        0|      3|  143|  321|
    |WienerDeblur_fsubbkb_U120  |WienerDeblur_fsubbkb  |        0|      2|  205|  390|
    +---------------------------+----------------------+---------+-------+-----+-----+
    |Total                      |                      |        0|     16|  982| 2064|
    +---------------------------+----------------------+---------+-------+-----+-----+

    * DSP48: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +----------------------------------+----------+-------+---+----+------------+------------+
    |           Variable Name          | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +----------------------------------+----------+-------+---+----+------------+------------+
    |ap_block_pp0_stage0_11001         |    and   |      0|  0|   2|           1|           1|
    |ap_block_pp0_stage0_subdone       |    or    |      0|  0|   2|           1|           1|
    |ap_block_state1_pp0_stage0_iter0  |    or    |      0|  0|   2|           1|           1|
    |ap_enable_pp0                     |    xor   |      0|  0|   2|           1|           2|
    +----------------------------------+----------+-------+---+----+------------+------------+
    |Total                             |          |      0|  0|   8|           4|           5|
    +----------------------------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    +------------------+----+-----------+-----+-----------+
    |       Name       | LUT| Input Size| Bits| Total Bits|
    +------------------+----+-----------+-----+-----------+
    |p_z_M_imag_blk_n  |   9|          2|    1|          2|
    |p_z_M_real_blk_n  |   9|          2|    1|          2|
    +------------------+----+-----------+-----+-----------+
    |Total             |  18|          4|    2|          4|
    +------------------+----+-----------+-----+-----------+

    * Register: 
    +----------------------------+----+----+-----+-----------+
    |            Name            | FF | LUT| Bits| Const Bits|
    +----------------------------+----+----+-----+-----------+
    |ap_CS_fsm                   |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter1     |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter2     |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter3     |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter4     |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter5     |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter6     |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter7     |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter8     |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter9     |   1|   0|    1|          0|
    |complex_M_imag_read_reg_84  |  32|   0|   32|          0|
    |complex_M_real_read_reg_90  |  32|   0|   32|          0|
    |p_t_imag_reg_102            |  32|   0|   32|          0|
    |p_t_real_reg_96             |  32|   0|   32|          0|
    |tmp_2_reg_118               |  32|   0|   32|          0|
    |tmp_3_reg_123               |  32|   0|   32|          0|
    |tmp_reg_108                 |  32|   0|   32|          0|
    |tmp_s_reg_113               |  32|   0|   32|          0|
    +----------------------------+----+----+-----+-----------+
    |Total                       | 266|   0|  266|          0|
    +----------------------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+---------------------------+-----+-----+------------+---------------------------+--------------+
|         RTL Ports         | Dir | Bits|  Protocol  |       Source Object       |    C Type    |
+---------------------------+-----+-----+------------+---------------------------+--------------+
|ap_clk                     |  in |    1| ap_ctrl_hs |     operator*=<float>     | return value |
|ap_rst                     |  in |    1| ap_ctrl_hs |     operator*=<float>     | return value |
|ap_start                   |  in |    1| ap_ctrl_hs |     operator*=<float>     | return value |
|ap_done                    | out |    1| ap_ctrl_hs |     operator*=<float>     | return value |
|ap_idle                    | out |    1| ap_ctrl_hs |     operator*=<float>     | return value |
|ap_ready                   | out |    1| ap_ctrl_hs |     operator*=<float>     | return value |
|ap_ce                      |  in |    1| ap_ctrl_hs |     operator*=<float>     | return value |
|ap_return_0                | out |   32| ap_ctrl_hs |     operator*=<float>     | return value |
|ap_return_1                | out |   32| ap_ctrl_hs |     operator*=<float>     | return value |
|p_z_M_real_blk_n           | out |    1| ap_ctrl_hs |     operator*=<float>     | return value |
|p_z_M_imag_blk_n           | out |    1| ap_ctrl_hs |     operator*=<float>     | return value |
|p_z_M_real_dout            |  in |   32|   ap_fifo  |         p_z_M_real        |    pointer   |
|p_z_M_real_empty_n         |  in |    1|   ap_fifo  |         p_z_M_real        |    pointer   |
|p_z_M_real_read            | out |    1|   ap_fifo  |         p_z_M_real        |    pointer   |
|p_z_M_imag_dout            |  in |   32|   ap_fifo  |         p_z_M_imag        |    pointer   |
|p_z_M_imag_empty_n         |  in |    1|   ap_fifo  |         p_z_M_imag        |    pointer   |
|p_z_M_imag_read            | out |    1|   ap_fifo  |         p_z_M_imag        |    pointer   |
|complex_float_M_real_read  |  in |   32|   ap_none  | complex_float_M_real_read |    scalar    |
|complex_float_M_imag_read  |  in |   32|   ap_none  | complex_float_M_imag_read |    scalar    |
+---------------------------+-----+-----+------------+---------------------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 10


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 10
* Pipeline : 1
  Pipeline-0 : II = 1, D = 10, States = { 1 2 3 4 5 6 7 8 9 10 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.63>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%complex_M_imag_read = call float @_ssdm_op_Read.ap_auto.float(float %complex_float_M_imag_read)"   --->   Operation 11 'read' 'complex_M_imag_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%complex_M_real_read = call float @_ssdm_op_Read.ap_auto.float(float %complex_float_M_real_read)"   --->   Operation 12 'read' 'complex_M_real_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (3.63ns)   --->   "%p_t_real = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %p_z_M_real)"   --->   Operation 13 'read' 'p_t_real' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.61> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 64> <Depth = 256> <FIFO>
ST_1 : Operation 14 [1/1] (3.63ns)   --->   "%p_t_imag = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %p_z_M_imag)"   --->   Operation 14 'read' 'p_t_imag' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.61> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 64> <Depth = 256> <FIFO>

State 2 <SV = 1> <Delay = 5.70>
ST_2 : Operation 15 [4/4] (5.70ns)   --->   "%tmp = fmul float %p_t_real, %complex_M_real_read"   --->   Operation 15 'fmul' 'tmp' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [4/4] (5.70ns)   --->   "%tmp_s = fmul float %p_t_imag, %complex_M_imag_read"   --->   Operation 16 'fmul' 'tmp_s' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [4/4] (5.70ns)   --->   "%tmp_2 = fmul float %p_t_real, %complex_M_imag_read"   --->   Operation 17 'fmul' 'tmp_2' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [4/4] (5.70ns)   --->   "%tmp_3 = fmul float %p_t_imag, %complex_M_real_read"   --->   Operation 18 'fmul' 'tmp_3' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 5.70>
ST_3 : Operation 19 [3/4] (5.70ns)   --->   "%tmp = fmul float %p_t_real, %complex_M_real_read"   --->   Operation 19 'fmul' 'tmp' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 20 [3/4] (5.70ns)   --->   "%tmp_s = fmul float %p_t_imag, %complex_M_imag_read"   --->   Operation 20 'fmul' 'tmp_s' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 21 [3/4] (5.70ns)   --->   "%tmp_2 = fmul float %p_t_real, %complex_M_imag_read"   --->   Operation 21 'fmul' 'tmp_2' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 22 [3/4] (5.70ns)   --->   "%tmp_3 = fmul float %p_t_imag, %complex_M_real_read"   --->   Operation 22 'fmul' 'tmp_3' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 5.70>
ST_4 : Operation 23 [2/4] (5.70ns)   --->   "%tmp = fmul float %p_t_real, %complex_M_real_read"   --->   Operation 23 'fmul' 'tmp' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 24 [2/4] (5.70ns)   --->   "%tmp_s = fmul float %p_t_imag, %complex_M_imag_read"   --->   Operation 24 'fmul' 'tmp_s' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 25 [2/4] (5.70ns)   --->   "%tmp_2 = fmul float %p_t_real, %complex_M_imag_read"   --->   Operation 25 'fmul' 'tmp_2' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 26 [2/4] (5.70ns)   --->   "%tmp_3 = fmul float %p_t_imag, %complex_M_real_read"   --->   Operation 26 'fmul' 'tmp_3' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 5.70>
ST_5 : Operation 27 [1/4] (5.70ns)   --->   "%tmp = fmul float %p_t_real, %complex_M_real_read"   --->   Operation 27 'fmul' 'tmp' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 28 [1/4] (5.70ns)   --->   "%tmp_s = fmul float %p_t_imag, %complex_M_imag_read"   --->   Operation 28 'fmul' 'tmp_s' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 29 [1/4] (5.70ns)   --->   "%tmp_2 = fmul float %p_t_real, %complex_M_imag_read"   --->   Operation 29 'fmul' 'tmp_2' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 30 [1/4] (5.70ns)   --->   "%tmp_3 = fmul float %p_t_imag, %complex_M_real_read"   --->   Operation 30 'fmul' 'tmp_3' <Predicate = true> <Delay = 5.70> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 7.25>
ST_6 : Operation 31 [5/5] (7.25ns)   --->   "%complex_M_real_writ = fsub float %tmp, %tmp_s"   --->   Operation 31 'fsub' 'complex_M_real_writ' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 32 [5/5] (7.25ns)   --->   "%complex_M_imag_writ = fadd float %tmp_2, %tmp_3"   --->   Operation 32 'fadd' 'complex_M_imag_writ' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 7.25>
ST_7 : Operation 33 [4/5] (7.25ns)   --->   "%complex_M_real_writ = fsub float %tmp, %tmp_s"   --->   Operation 33 'fsub' 'complex_M_real_writ' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 34 [4/5] (7.25ns)   --->   "%complex_M_imag_writ = fadd float %tmp_2, %tmp_3"   --->   Operation 34 'fadd' 'complex_M_imag_writ' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 7.25>
ST_8 : Operation 35 [3/5] (7.25ns)   --->   "%complex_M_real_writ = fsub float %tmp, %tmp_s"   --->   Operation 35 'fsub' 'complex_M_real_writ' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 36 [3/5] (7.25ns)   --->   "%complex_M_imag_writ = fadd float %tmp_2, %tmp_3"   --->   Operation 36 'fadd' 'complex_M_imag_writ' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 7.25>
ST_9 : Operation 37 [2/5] (7.25ns)   --->   "%complex_M_real_writ = fsub float %tmp, %tmp_s"   --->   Operation 37 'fsub' 'complex_M_real_writ' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 38 [2/5] (7.25ns)   --->   "%complex_M_imag_writ = fadd float %tmp_2, %tmp_3"   --->   Operation 38 'fadd' 'complex_M_imag_writ' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 7.25>
ST_10 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %p_z_M_real, float* %p_z_M_imag, [8 x i8]* @p_str11, i32 0, i32 0, [1 x i8]* @p_str3, i32 0, i32 1024, [1 x i8]* @p_str3, [1 x i8]* @p_str3, [1 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str3, [1 x i8]* @p_str3)"   --->   Operation 39 'specinterface' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 40 [1/5] (7.25ns)   --->   "%complex_M_real_writ = fsub float %tmp, %tmp_s"   --->   Operation 40 'fsub' 'complex_M_real_writ' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 41 [1/5] (7.25ns)   --->   "%complex_M_imag_writ = fadd float %tmp_2, %tmp_3"   --->   Operation 41 'fadd' 'complex_M_imag_writ' <Predicate = true> <Delay = 7.25> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 4> <II = 1> <Delay = 7.25> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 42 [1/1] (0.00ns)   --->   "%mrv = insertvalue { float, float } undef, float %complex_M_real_writ, 0"   --->   Operation 42 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 43 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue { float, float } %mrv, float %complex_M_imag_writ, 1"   --->   Operation 43 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 44 [1/1] (0.00ns)   --->   "ret { float, float } %mrv_1"   --->   Operation 44 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 1
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ complex_float_M_real_read]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ complex_float_M_imag_read]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ p_z_M_real]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=3; pingpong=0; private_global=0; IO mode=ap_fifo:ce=0
Port [ p_z_M_imag]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=3; pingpong=0; private_global=0; IO mode=ap_fifo:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
complex_M_imag_read (read         ) [ 01111100000]
complex_M_real_read (read         ) [ 01111100000]
p_t_real            (read         ) [ 01111100000]
p_t_imag            (read         ) [ 01111100000]
tmp                 (fmul         ) [ 01000011111]
tmp_s               (fmul         ) [ 01000011111]
tmp_2               (fmul         ) [ 01000011111]
tmp_3               (fmul         ) [ 01000011111]
StgValue_39         (specinterface) [ 00000000000]
complex_M_real_writ (fsub         ) [ 00000000000]
complex_M_imag_writ (fadd         ) [ 00000000000]
mrv                 (insertvalue  ) [ 00000000000]
mrv_1               (insertvalue  ) [ 00000000000]
StgValue_44         (ret          ) [ 00000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="complex_float_M_real_read">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="complex_float_M_real_read"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="complex_float_M_imag_read">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="complex_float_M_imag_read"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="p_z_M_real">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_z_M_real"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="p_z_M_imag">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_z_M_imag"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.float"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_fifo.volatile.floatP"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str11"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str3"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="24" class="1004" name="complex_M_imag_read_read_fu_24">
<pin_list>
<pin id="25" dir="0" index="0" bw="32" slack="0"/>
<pin id="26" dir="0" index="1" bw="32" slack="0"/>
<pin id="27" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="complex_M_imag_read/1 "/>
</bind>
</comp>

<comp id="30" class="1004" name="complex_M_real_read_read_fu_30">
<pin_list>
<pin id="31" dir="0" index="0" bw="32" slack="0"/>
<pin id="32" dir="0" index="1" bw="32" slack="0"/>
<pin id="33" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="complex_M_real_read/1 "/>
</bind>
</comp>

<comp id="36" class="1004" name="p_t_real_read_fu_36">
<pin_list>
<pin id="37" dir="0" index="0" bw="32" slack="0"/>
<pin id="38" dir="0" index="1" bw="32" slack="0"/>
<pin id="39" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="p_t_real/1 "/>
</bind>
</comp>

<comp id="42" class="1004" name="p_t_imag_read_fu_42">
<pin_list>
<pin id="43" dir="0" index="0" bw="32" slack="0"/>
<pin id="44" dir="0" index="1" bw="32" slack="0"/>
<pin id="45" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="p_t_imag/1 "/>
</bind>
</comp>

<comp id="48" class="1004" name="grp_fu_48">
<pin_list>
<pin id="49" dir="0" index="0" bw="32" slack="1"/>
<pin id="50" dir="0" index="1" bw="32" slack="1"/>
<pin id="51" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="fsub(11) " fcode="fadd"/>
<opset="complex_M_real_writ/6 "/>
</bind>
</comp>

<comp id="52" class="1004" name="grp_fu_52">
<pin_list>
<pin id="53" dir="0" index="0" bw="32" slack="1"/>
<pin id="54" dir="0" index="1" bw="32" slack="1"/>
<pin id="55" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="fadd(9) " fcode="fadd"/>
<opset="complex_M_imag_writ/6 "/>
</bind>
</comp>

<comp id="56" class="1004" name="grp_fu_56">
<pin_list>
<pin id="57" dir="0" index="0" bw="32" slack="1"/>
<pin id="58" dir="0" index="1" bw="32" slack="1"/>
<pin id="59" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="fmul(13) " fcode="fmul"/>
<opset="tmp/2 "/>
</bind>
</comp>

<comp id="60" class="1004" name="grp_fu_60">
<pin_list>
<pin id="61" dir="0" index="0" bw="32" slack="1"/>
<pin id="62" dir="0" index="1" bw="32" slack="1"/>
<pin id="63" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="fmul(13) " fcode="fmul"/>
<opset="tmp_s/2 "/>
</bind>
</comp>

<comp id="64" class="1004" name="grp_fu_64">
<pin_list>
<pin id="65" dir="0" index="0" bw="32" slack="1"/>
<pin id="66" dir="0" index="1" bw="32" slack="1"/>
<pin id="67" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="fmul(13) " fcode="fmul"/>
<opset="tmp_2/2 "/>
</bind>
</comp>

<comp id="68" class="1004" name="grp_fu_68">
<pin_list>
<pin id="69" dir="0" index="0" bw="32" slack="1"/>
<pin id="70" dir="0" index="1" bw="32" slack="1"/>
<pin id="71" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="fmul(13) " fcode="fmul"/>
<opset="tmp_3/2 "/>
</bind>
</comp>

<comp id="72" class="1004" name="mrv_fu_72">
<pin_list>
<pin id="73" dir="0" index="0" bw="64" slack="0"/>
<pin id="74" dir="0" index="1" bw="32" slack="0"/>
<pin id="75" dir="1" index="2" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="insertvalue(57) " fcode="insertvalue"/>
<opset="mrv/10 "/>
</bind>
</comp>

<comp id="78" class="1004" name="mrv_1_fu_78">
<pin_list>
<pin id="79" dir="0" index="0" bw="64" slack="0"/>
<pin id="80" dir="0" index="1" bw="32" slack="0"/>
<pin id="81" dir="1" index="2" bw="64" slack="2147483647"/>
</pin_list>
<bind>
<opcode="insertvalue(57) " fcode="insertvalue"/>
<opset="mrv_1/10 "/>
</bind>
</comp>

<comp id="84" class="1005" name="complex_M_imag_read_reg_84">
<pin_list>
<pin id="85" dir="0" index="0" bw="32" slack="1"/>
<pin id="86" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="complex_M_imag_read "/>
</bind>
</comp>

<comp id="90" class="1005" name="complex_M_real_read_reg_90">
<pin_list>
<pin id="91" dir="0" index="0" bw="32" slack="1"/>
<pin id="92" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="complex_M_real_read "/>
</bind>
</comp>

<comp id="96" class="1005" name="p_t_real_reg_96">
<pin_list>
<pin id="97" dir="0" index="0" bw="32" slack="1"/>
<pin id="98" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="p_t_real "/>
</bind>
</comp>

<comp id="102" class="1005" name="p_t_imag_reg_102">
<pin_list>
<pin id="103" dir="0" index="0" bw="32" slack="1"/>
<pin id="104" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="p_t_imag "/>
</bind>
</comp>

<comp id="108" class="1005" name="tmp_reg_108">
<pin_list>
<pin id="109" dir="0" index="0" bw="32" slack="1"/>
<pin id="110" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp "/>
</bind>
</comp>

<comp id="113" class="1005" name="tmp_s_reg_113">
<pin_list>
<pin id="114" dir="0" index="0" bw="32" slack="1"/>
<pin id="115" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_s "/>
</bind>
</comp>

<comp id="118" class="1005" name="tmp_2_reg_118">
<pin_list>
<pin id="119" dir="0" index="0" bw="32" slack="1"/>
<pin id="120" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_2 "/>
</bind>
</comp>

<comp id="123" class="1005" name="tmp_3_reg_123">
<pin_list>
<pin id="124" dir="0" index="0" bw="32" slack="1"/>
<pin id="125" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_3 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="28"><net_src comp="8" pin="0"/><net_sink comp="24" pin=0"/></net>

<net id="29"><net_src comp="2" pin="0"/><net_sink comp="24" pin=1"/></net>

<net id="34"><net_src comp="8" pin="0"/><net_sink comp="30" pin=0"/></net>

<net id="35"><net_src comp="0" pin="0"/><net_sink comp="30" pin=1"/></net>

<net id="40"><net_src comp="10" pin="0"/><net_sink comp="36" pin=0"/></net>

<net id="41"><net_src comp="4" pin="0"/><net_sink comp="36" pin=1"/></net>

<net id="46"><net_src comp="10" pin="0"/><net_sink comp="42" pin=0"/></net>

<net id="47"><net_src comp="6" pin="0"/><net_sink comp="42" pin=1"/></net>

<net id="76"><net_src comp="22" pin="0"/><net_sink comp="72" pin=0"/></net>

<net id="77"><net_src comp="48" pin="2"/><net_sink comp="72" pin=1"/></net>

<net id="82"><net_src comp="72" pin="2"/><net_sink comp="78" pin=0"/></net>

<net id="83"><net_src comp="52" pin="2"/><net_sink comp="78" pin=1"/></net>

<net id="87"><net_src comp="24" pin="2"/><net_sink comp="84" pin=0"/></net>

<net id="88"><net_src comp="84" pin="1"/><net_sink comp="60" pin=1"/></net>

<net id="89"><net_src comp="84" pin="1"/><net_sink comp="64" pin=1"/></net>

<net id="93"><net_src comp="30" pin="2"/><net_sink comp="90" pin=0"/></net>

<net id="94"><net_src comp="90" pin="1"/><net_sink comp="56" pin=1"/></net>

<net id="95"><net_src comp="90" pin="1"/><net_sink comp="68" pin=1"/></net>

<net id="99"><net_src comp="36" pin="2"/><net_sink comp="96" pin=0"/></net>

<net id="100"><net_src comp="96" pin="1"/><net_sink comp="56" pin=0"/></net>

<net id="101"><net_src comp="96" pin="1"/><net_sink comp="64" pin=0"/></net>

<net id="105"><net_src comp="42" pin="2"/><net_sink comp="102" pin=0"/></net>

<net id="106"><net_src comp="102" pin="1"/><net_sink comp="60" pin=0"/></net>

<net id="107"><net_src comp="102" pin="1"/><net_sink comp="68" pin=0"/></net>

<net id="111"><net_src comp="56" pin="2"/><net_sink comp="108" pin=0"/></net>

<net id="112"><net_src comp="108" pin="1"/><net_sink comp="48" pin=0"/></net>

<net id="116"><net_src comp="60" pin="2"/><net_sink comp="113" pin=0"/></net>

<net id="117"><net_src comp="113" pin="1"/><net_sink comp="48" pin=1"/></net>

<net id="121"><net_src comp="64" pin="2"/><net_sink comp="118" pin=0"/></net>

<net id="122"><net_src comp="118" pin="1"/><net_sink comp="52" pin=0"/></net>

<net id="126"><net_src comp="68" pin="2"/><net_sink comp="123" pin=0"/></net>

<net id="127"><net_src comp="123" pin="1"/><net_sink comp="52" pin=1"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: complex_float_M_real_read | {}
	Port: complex_float_M_imag_read | {}
	Port: p_z_M_real | {}
	Port: p_z_M_imag | {}
 - Input state : 
	Port: operator*=<float> : complex_float_M_real_read | {1 }
	Port: operator*=<float> : complex_float_M_imag_read | {1 }
	Port: operator*=<float> : p_z_M_real | {1 }
	Port: operator*=<float> : p_z_M_imag | {1 }
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
		mrv : 1
		mrv_1 : 2
		StgValue_44 : 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|--------------------------------|---------|---------|---------|
| Operation|         Functional Unit        |  DSP48E |    FF   |   LUT   |
|----------|--------------------------------|---------|---------|---------|
|          |            grp_fu_56           |    3    |   143   |   321   |
|   fmul   |            grp_fu_60           |    3    |   143   |   321   |
|          |            grp_fu_64           |    3    |   143   |   321   |
|          |            grp_fu_68           |    3    |   143   |   321   |
|----------|--------------------------------|---------|---------|---------|
|   fadd   |            grp_fu_48           |    2    |   205   |   390   |
|          |            grp_fu_52           |    2    |   205   |   390   |
|----------|--------------------------------|---------|---------|---------|
|          | complex_M_imag_read_read_fu_24 |    0    |    0    |    0    |
|   read   | complex_M_real_read_read_fu_30 |    0    |    0    |    0    |
|          |       p_t_real_read_fu_36      |    0    |    0    |    0    |
|          |       p_t_imag_read_fu_42      |    0    |    0    |    0    |
|----------|--------------------------------|---------|---------|---------|
|insertvalue|            mrv_fu_72           |    0    |    0    |    0    |
|          |           mrv_1_fu_78          |    0    |    0    |    0    |
|----------|--------------------------------|---------|---------|---------|
|   Total  |                                |    16   |   982   |   2064  |
|----------|--------------------------------|---------|---------|---------|

Memories:
N/A

* Register list:
+--------------------------+--------+
|                          |   FF   |
+--------------------------+--------+
|complex_M_imag_read_reg_84|   32   |
|complex_M_real_read_reg_90|   32   |
|     p_t_imag_reg_102     |   32   |
|      p_t_real_reg_96     |   32   |
|       tmp_2_reg_118      |   32   |
|       tmp_3_reg_123      |   32   |
|        tmp_reg_108       |   32   |
|       tmp_s_reg_113      |   32   |
+--------------------------+--------+
|           Total          |   256  |
+--------------------------+--------+

* Multiplexer (MUX) list: 
|--------|------|------|------|--------|
|  Comp  |  Pin | Size |  BW  | S x BW |
|--------|------|------|------|--------|
|  Total |      |      |      |    0   |
|--------|------|------|------|--------|



* Summary:
+-----------+--------+--------+--------+
|           | DSP48E |   FF   |   LUT  |
+-----------+--------+--------+--------+
|  Function |   16   |   982  |  2064  |
|   Memory  |    -   |    -   |    -   |
|Multiplexer|    -   |    -   |    -   |
|  Register |    -   |   256  |    -   |
+-----------+--------+--------+--------+
|   Total   |   16   |  1238  |  2064  |
+-----------+--------+--------+--------+
