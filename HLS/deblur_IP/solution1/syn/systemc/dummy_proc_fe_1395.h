// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dummy_proc_fe_1395_HH_
#define _dummy_proc_fe_1395_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct dummy_proc_fe_1395 : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<1> > direction;
    sc_in< sc_lv<64> > in_r_dout;
    sc_in< sc_logic > in_r_empty_n;
    sc_out< sc_logic > in_r_read;
    sc_out< sc_lv<64> > xn1_din;
    sc_in< sc_logic > xn1_full_n;
    sc_out< sc_logic > xn1_write;
    sc_out< sc_lv<16> > ap_return;


    // Module declarations
    dummy_proc_fe_1395(sc_module_name name);
    SC_HAS_PROCESS(dummy_proc_fe_1395);

    ~dummy_proc_fe_1395();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > in_r_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond_fu_93_p2;
    sc_signal< sc_logic > xn1_blk_n;
    sc_signal< sc_lv<16> > p_Result_s_fu_81_p5;
    sc_signal< sc_lv<16> > p_Result_s_reg_105;
    sc_signal< sc_lv<9> > i_2_fu_99_p2;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<9> > i_reg_62;
    sc_signal< sc_lv<9> > tmp_s_fu_73_p3;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<8> ap_const_lv8_AB;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<9> ap_const_lv9_100;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_block_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_exitcond_fu_93_p2();
    void thread_i_2_fu_99_p2();
    void thread_in_r_blk_n();
    void thread_in_r_read();
    void thread_p_Result_s_fu_81_p5();
    void thread_tmp_s_fu_73_p3();
    void thread_xn1_blk_n();
    void thread_xn1_din();
    void thread_xn1_write();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
