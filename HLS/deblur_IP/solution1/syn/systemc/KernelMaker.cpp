// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "KernelMaker.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic KernelMaker::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic KernelMaker::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<29> KernelMaker::ap_ST_fsm_state1 = "1";
const sc_lv<29> KernelMaker::ap_ST_fsm_state2 = "10";
const sc_lv<29> KernelMaker::ap_ST_fsm_state3 = "100";
const sc_lv<29> KernelMaker::ap_ST_fsm_state4 = "1000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state5 = "10000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state6 = "100000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state7 = "1000000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state8 = "10000000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state9 = "100000000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state10 = "1000000000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state11 = "10000000000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state12 = "100000000000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<29> KernelMaker::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<32> KernelMaker::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> KernelMaker::ap_const_lv32_1C = "11100";
const sc_lv<32> KernelMaker::ap_const_lv32_1 = "1";
const sc_lv<1> KernelMaker::ap_const_lv1_0 = "0";
const sc_lv<32> KernelMaker::ap_const_lv32_2 = "10";
const sc_lv<32> KernelMaker::ap_const_lv32_3 = "11";
const sc_lv<32> KernelMaker::ap_const_lv32_4 = "100";
const sc_lv<32> KernelMaker::ap_const_lv32_9 = "1001";
const sc_lv<32> KernelMaker::ap_const_lv32_1B = "11011";
const sc_lv<9> KernelMaker::ap_const_lv9_0 = "000000000";
const sc_lv<1> KernelMaker::ap_const_lv1_1 = "1";
const sc_lv<32> KernelMaker::ap_const_lv32_A = "1010";
const sc_lv<9> KernelMaker::ap_const_lv9_100 = "100000000";
const sc_lv<9> KernelMaker::ap_const_lv9_1 = "1";
const sc_lv<9> KernelMaker::ap_const_lv9_180 = "110000000";
const sc_lv<32> KernelMaker::ap_const_lv32_10 = "10000";
const sc_lv<32> KernelMaker::ap_const_lv32_F = "1111";
const sc_lv<17> KernelMaker::ap_const_lv17_0 = "00000000000000000";
const sc_lv<4> KernelMaker::ap_const_lv4_0 = "0000";
const sc_lv<64> KernelMaker::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const bool KernelMaker::ap_const_boolean_1 = true;

KernelMaker::KernelMaker(sc_module_name name) : sc_module(name), mVcdFile(0) {
    StgValue_88_real379_fu_68 = new real379("StgValue_88_real379_fu_68");
    StgValue_88_real379_fu_68->ap_clk(ap_clk);
    StgValue_88_real379_fu_68->ap_rst(ap_rst);
    StgValue_88_real379_fu_68->ap_start(StgValue_88_real379_fu_68_ap_start);
    StgValue_88_real379_fu_68->ap_done(StgValue_88_real379_fu_68_ap_done);
    StgValue_88_real379_fu_68->ap_idle(StgValue_88_real379_fu_68_ap_idle);
    StgValue_88_real379_fu_68->ap_ready(StgValue_88_real379_fu_68_ap_ready);
    StgValue_88_real379_fu_68->complex_float_M_real_din(StgValue_88_real379_fu_68_complex_float_M_real_din);
    StgValue_88_real379_fu_68->complex_float_M_real_full_n(kernel_M_real_full_n);
    StgValue_88_real379_fu_68->complex_float_M_real_write(StgValue_88_real379_fu_68_complex_float_M_real_write);
    StgValue_88_real379_fu_68->p_val(tmp_102_fu_83_p1);
    StgValue_88_real379_fu_68->complex_float_M_real_blk_n(StgValue_88_real379_fu_68_complex_float_M_real_blk_n);
    StgValue_89_imag380_fu_75 = new imag380("StgValue_89_imag380_fu_75");
    StgValue_89_imag380_fu_75->ap_clk(ap_clk);
    StgValue_89_imag380_fu_75->ap_rst(ap_rst);
    StgValue_89_imag380_fu_75->ap_start(StgValue_89_imag380_fu_75_ap_start);
    StgValue_89_imag380_fu_75->ap_done(StgValue_89_imag380_fu_75_ap_done);
    StgValue_89_imag380_fu_75->ap_idle(StgValue_89_imag380_fu_75_ap_idle);
    StgValue_89_imag380_fu_75->ap_ready(StgValue_89_imag380_fu_75_ap_ready);
    StgValue_89_imag380_fu_75->complex_float_M_imag_din(StgValue_89_imag380_fu_75_complex_float_M_imag_din);
    StgValue_89_imag380_fu_75->complex_float_M_imag_full_n(kernel_M_imag_full_n);
    StgValue_89_imag380_fu_75->complex_float_M_imag_write(StgValue_89_imag380_fu_75_complex_float_M_imag_write);
    StgValue_89_imag380_fu_75->p_val(ap_var_for_const0);
    StgValue_89_imag380_fu_75->complex_float_M_imag_blk_n(StgValue_89_imag380_fu_75_complex_float_M_imag_blk_n);
    WienerDeblur_fptreOg_U32 = new WienerDeblur_fptreOg<1,1,64,32>("WienerDeblur_fptreOg_U32");
    WienerDeblur_fptreOg_U32->din0(tmp_101_reg_268);
    WienerDeblur_fptreOg_U32->dout(tmp_102_fu_83_p1);
    WienerDeblur_sitofYi_U33 = new WienerDeblur_sitofYi<1,6,32,64>("WienerDeblur_sitofYi_U33");
    WienerDeblur_sitofYi_U33->clk(ap_clk);
    WienerDeblur_sitofYi_U33->reset(ap_rst);
    WienerDeblur_sitofYi_U33->din0(grp_fu_87_p0);
    WienerDeblur_sitofYi_U33->ce(ap_var_for_const1);
    WienerDeblur_sitofYi_U33->dout(grp_fu_87_p1);
    WienerDeblur_dexpg8j_U34 = new WienerDeblur_dexpg8j<1,18,64,64,64>("WienerDeblur_dexpg8j_U34");
    WienerDeblur_dexpg8j_U34->clk(ap_clk);
    WienerDeblur_dexpg8j_U34->reset(ap_rst);
    WienerDeblur_dexpg8j_U34->din0(ap_var_for_const2);
    WienerDeblur_dexpg8j_U34->din1(tmp_100_reg_263);
    WienerDeblur_dexpg8j_U34->ce(ap_var_for_const1);
    WienerDeblur_dexpg8j_U34->dout(grp_fu_90_p2);
    WienerDeblur_mac_hbi_U35 = new WienerDeblur_mac_hbi<1,1,9,9,17,17>("WienerDeblur_mac_hbi_U35");
    WienerDeblur_mac_hbi_U35->din0(grp_fu_208_p0);
    WienerDeblur_mac_hbi_U35->din1(grp_fu_208_p1);
    WienerDeblur_mac_hbi_U35->din2(tmp_138_cast_reg_225);
    WienerDeblur_mac_hbi_U35->dout(grp_fu_208_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_StgValue_88_real379_fu_68_ap_start);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( StgValue_89_imag380_fu_75_complex_float_M_imag_blk_n );

    SC_METHOD(thread_StgValue_89_imag380_fu_75_ap_start);
    sensitive << ( StgValue_88_real379_fu_68_complex_float_M_real_blk_n );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state29);
    sensitive << ( StgValue_88_real379_fu_68_complex_float_M_real_blk_n );
    sensitive << ( StgValue_89_imag380_fu_75_complex_float_M_imag_blk_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_95_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_95_p2 );

    SC_METHOD(thread_exitcond1_fu_123_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_57 );

    SC_METHOD(thread_exitcond_fu_95_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_46 );

    SC_METHOD(thread_grp_fu_208_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond1_fu_123_p2 );
    sensitive << ( tmp_91_fu_141_p1 );

    SC_METHOD(thread_grp_fu_208_p1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond1_fu_123_p2 );
    sensitive << ( tmp_91_fu_141_p1 );

    SC_METHOD(thread_grp_fu_87_p0);
    sensitive << ( tmp_99_reg_253 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_i_3_fu_101_p2);
    sensitive << ( i_reg_46 );

    SC_METHOD(thread_j_1_fu_129_p2);
    sensitive << ( j_reg_57 );

    SC_METHOD(thread_kernel_M_imag_blk_n);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( StgValue_89_imag380_fu_75_complex_float_M_imag_blk_n );

    SC_METHOD(thread_kernel_M_imag_din);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( StgValue_89_imag380_fu_75_complex_float_M_imag_din );

    SC_METHOD(thread_kernel_M_imag_write);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( StgValue_89_imag380_fu_75_complex_float_M_imag_write );

    SC_METHOD(thread_kernel_M_real_blk_n);
    sensitive << ( StgValue_88_real379_fu_68_complex_float_M_real_blk_n );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_kernel_M_real_din);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( StgValue_88_real379_fu_68_complex_float_M_real_din );

    SC_METHOD(thread_kernel_M_real_write);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( StgValue_88_real379_fu_68_complex_float_M_real_write );

    SC_METHOD(thread_p_lshr_cast_fu_180_p1);
    sensitive << ( tmp_96_fu_176_p1 );

    SC_METHOD(thread_p_lshr_f_cast_fu_187_p1);
    sensitive << ( tmp_98_fu_184_p1 );

    SC_METHOD(thread_p_neg_f_fu_191_p2);
    sensitive << ( p_lshr_f_cast_fu_187_p1 );

    SC_METHOD(thread_p_neg_fu_161_p2);
    sensitive << ( tmp_93_reg_238 );

    SC_METHOD(thread_tmp_138_cast_fu_117_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_113_p1 );

    SC_METHOD(thread_tmp_138_cast_fu_117_p1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_113_p1 );

    SC_METHOD(thread_tmp_138_cast_fu_117_p2);
    sensitive << ( tmp_138_cast_fu_117_p0 );
    sensitive << ( tmp_138_cast_fu_117_p1 );

    SC_METHOD(thread_tmp_91_fu_141_p1);
    sensitive << ( tmp_92_fu_135_p2 );

    SC_METHOD(thread_tmp_92_fu_135_p2);
    sensitive << ( j_reg_57 );

    SC_METHOD(thread_tmp_95_fu_166_p4);
    sensitive << ( p_neg_fu_161_p2 );

    SC_METHOD(thread_tmp_96_fu_176_p1);
    sensitive << ( tmp_95_fu_166_p4 );

    SC_METHOD(thread_tmp_98_fu_184_p1);
    sensitive << ( tmp_97_reg_248 );

    SC_METHOD(thread_tmp_99_fu_197_p3);
    sensitive << ( tmp_113_reg_243 );
    sensitive << ( p_lshr_cast_fu_180_p1 );
    sensitive << ( p_neg_f_fu_191_p2 );

    SC_METHOD(thread_tmp_fu_113_p1);
    sensitive << ( tmp_s_fu_107_p2 );

    SC_METHOD(thread_tmp_s_fu_107_p2);
    sensitive << ( i_reg_46 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( StgValue_88_real379_fu_68_complex_float_M_real_blk_n );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( StgValue_89_imag380_fu_75_complex_float_M_imag_blk_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_95_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond1_fu_123_p2 );

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "00000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "KernelMaker_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, kernel_M_real_din, "(port)kernel_M_real_din");
    sc_trace(mVcdFile, kernel_M_real_full_n, "(port)kernel_M_real_full_n");
    sc_trace(mVcdFile, kernel_M_real_write, "(port)kernel_M_real_write");
    sc_trace(mVcdFile, kernel_M_imag_din, "(port)kernel_M_imag_din");
    sc_trace(mVcdFile, kernel_M_imag_full_n, "(port)kernel_M_imag_full_n");
    sc_trace(mVcdFile, kernel_M_imag_write, "(port)kernel_M_imag_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, StgValue_88_real379_fu_68_complex_float_M_real_blk_n, "StgValue_88_real379_fu_68_complex_float_M_real_blk_n");
    sc_trace(mVcdFile, kernel_M_real_blk_n, "kernel_M_real_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, StgValue_89_imag380_fu_75_complex_float_M_imag_blk_n, "StgValue_89_imag380_fu_75_complex_float_M_imag_blk_n");
    sc_trace(mVcdFile, kernel_M_imag_blk_n, "kernel_M_imag_blk_n");
    sc_trace(mVcdFile, i_3_fu_101_p2, "i_3_fu_101_p2");
    sc_trace(mVcdFile, i_3_reg_220, "i_3_reg_220");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_138_cast_fu_117_p2, "tmp_138_cast_fu_117_p2");
    sc_trace(mVcdFile, tmp_138_cast_reg_225, "tmp_138_cast_reg_225");
    sc_trace(mVcdFile, exitcond_fu_95_p2, "exitcond_fu_95_p2");
    sc_trace(mVcdFile, j_1_fu_129_p2, "j_1_fu_129_p2");
    sc_trace(mVcdFile, j_1_reg_233, "j_1_reg_233");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_fu_208_p3, "grp_fu_208_p3");
    sc_trace(mVcdFile, tmp_93_reg_238, "tmp_93_reg_238");
    sc_trace(mVcdFile, exitcond1_fu_123_p2, "exitcond1_fu_123_p2");
    sc_trace(mVcdFile, tmp_113_reg_243, "tmp_113_reg_243");
    sc_trace(mVcdFile, tmp_97_reg_248, "tmp_97_reg_248");
    sc_trace(mVcdFile, tmp_99_fu_197_p3, "tmp_99_fu_197_p3");
    sc_trace(mVcdFile, tmp_99_reg_253, "tmp_99_reg_253");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_fu_87_p1, "grp_fu_87_p1");
    sc_trace(mVcdFile, tmp_100_reg_263, "tmp_100_reg_263");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, grp_fu_90_p2, "grp_fu_90_p2");
    sc_trace(mVcdFile, tmp_101_reg_268, "tmp_101_reg_268");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, StgValue_88_real379_fu_68_ap_start, "StgValue_88_real379_fu_68_ap_start");
    sc_trace(mVcdFile, StgValue_88_real379_fu_68_ap_done, "StgValue_88_real379_fu_68_ap_done");
    sc_trace(mVcdFile, StgValue_88_real379_fu_68_ap_idle, "StgValue_88_real379_fu_68_ap_idle");
    sc_trace(mVcdFile, StgValue_88_real379_fu_68_ap_ready, "StgValue_88_real379_fu_68_ap_ready");
    sc_trace(mVcdFile, StgValue_88_real379_fu_68_complex_float_M_real_din, "StgValue_88_real379_fu_68_complex_float_M_real_din");
    sc_trace(mVcdFile, StgValue_88_real379_fu_68_complex_float_M_real_write, "StgValue_88_real379_fu_68_complex_float_M_real_write");
    sc_trace(mVcdFile, StgValue_89_imag380_fu_75_ap_start, "StgValue_89_imag380_fu_75_ap_start");
    sc_trace(mVcdFile, StgValue_89_imag380_fu_75_ap_done, "StgValue_89_imag380_fu_75_ap_done");
    sc_trace(mVcdFile, StgValue_89_imag380_fu_75_ap_idle, "StgValue_89_imag380_fu_75_ap_idle");
    sc_trace(mVcdFile, StgValue_89_imag380_fu_75_ap_ready, "StgValue_89_imag380_fu_75_ap_ready");
    sc_trace(mVcdFile, StgValue_89_imag380_fu_75_complex_float_M_imag_din, "StgValue_89_imag380_fu_75_complex_float_M_imag_din");
    sc_trace(mVcdFile, StgValue_89_imag380_fu_75_complex_float_M_imag_write, "StgValue_89_imag380_fu_75_complex_float_M_imag_write");
    sc_trace(mVcdFile, i_reg_46, "i_reg_46");
    sc_trace(mVcdFile, j_reg_57, "j_reg_57");
    sc_trace(mVcdFile, ap_block_state29, "ap_block_state29");
    sc_trace(mVcdFile, tmp_102_fu_83_p1, "tmp_102_fu_83_p1");
    sc_trace(mVcdFile, grp_fu_87_p0, "grp_fu_87_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_s_fu_107_p2, "tmp_s_fu_107_p2");
    sc_trace(mVcdFile, tmp_138_cast_fu_117_p0, "tmp_138_cast_fu_117_p0");
    sc_trace(mVcdFile, tmp_fu_113_p1, "tmp_fu_113_p1");
    sc_trace(mVcdFile, tmp_138_cast_fu_117_p1, "tmp_138_cast_fu_117_p1");
    sc_trace(mVcdFile, tmp_92_fu_135_p2, "tmp_92_fu_135_p2");
    sc_trace(mVcdFile, p_neg_fu_161_p2, "p_neg_fu_161_p2");
    sc_trace(mVcdFile, tmp_95_fu_166_p4, "tmp_95_fu_166_p4");
    sc_trace(mVcdFile, tmp_96_fu_176_p1, "tmp_96_fu_176_p1");
    sc_trace(mVcdFile, tmp_98_fu_184_p1, "tmp_98_fu_184_p1");
    sc_trace(mVcdFile, p_lshr_f_cast_fu_187_p1, "p_lshr_f_cast_fu_187_p1");
    sc_trace(mVcdFile, p_lshr_cast_fu_180_p1, "p_lshr_cast_fu_180_p1");
    sc_trace(mVcdFile, p_neg_f_fu_191_p2, "p_neg_f_fu_191_p2");
    sc_trace(mVcdFile, grp_fu_208_p0, "grp_fu_208_p0");
    sc_trace(mVcdFile, tmp_91_fu_141_p1, "tmp_91_fu_141_p1");
    sc_trace(mVcdFile, grp_fu_208_p1, "grp_fu_208_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

KernelMaker::~KernelMaker() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete StgValue_88_real379_fu_68;
    delete StgValue_89_imag380_fu_75;
    delete WienerDeblur_fptreOg_U32;
    delete WienerDeblur_sitofYi_U33;
    delete WienerDeblur_dexpg8j_U34;
    delete WienerDeblur_mac_hbi_U35;
}

void KernelMaker::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_1;
}

void KernelMaker::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv32_0;
}

void KernelMaker::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv64_0;
}

void KernelMaker::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_123_p2.read(), ap_const_lv1_1))) {
        i_reg_46 = i_3_reg_220.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_46 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_95_p2.read(), ap_const_lv1_0))) {
        j_reg_57 = ap_const_lv9_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, StgValue_88_real379_fu_68_complex_float_M_real_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, StgValue_89_imag380_fu_75_complex_float_M_imag_blk_n.read())))) {
        j_reg_57 = j_1_reg_233.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_3_reg_220 = i_3_fu_101_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_1_reg_233 = j_1_fu_129_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_100_reg_263 = grp_fu_87_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        tmp_101_reg_268 = grp_fu_90_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_123_p2.read()))) {
        tmp_113_reg_243 = grp_fu_208_p3.read().range(16, 16);
        tmp_93_reg_238 = grp_fu_208_p3.read();
        tmp_97_reg_248 = grp_fu_208_p3.read().range(16, 15);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_fu_95_p2.read(), ap_const_lv1_0))) {
        tmp_138_cast_reg_225 = tmp_138_cast_fu_117_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_99_reg_253 = tmp_99_fu_197_p3.read();
    }
}

void KernelMaker::thread_StgValue_88_real379_fu_68_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
         esl_seteq<1,1,1>(StgValue_89_imag380_fu_75_complex_float_M_imag_blk_n.read(), ap_const_logic_1))) {
        StgValue_88_real379_fu_68_ap_start = ap_const_logic_1;
    } else {
        StgValue_88_real379_fu_68_ap_start = ap_const_logic_0;
    }
}

void KernelMaker::thread_StgValue_89_imag380_fu_75_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
         esl_seteq<1,1,1>(StgValue_88_real379_fu_68_complex_float_M_real_blk_n.read(), ap_const_logic_1))) {
        StgValue_89_imag380_fu_75_ap_start = ap_const_logic_1;
    } else {
        StgValue_89_imag380_fu_75_ap_start = ap_const_logic_0;
    }
}

void KernelMaker::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void KernelMaker::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void KernelMaker::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void KernelMaker::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void KernelMaker::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void KernelMaker::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void KernelMaker::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void KernelMaker::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void KernelMaker::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void KernelMaker::thread_ap_block_state29() {
    ap_block_state29 = (esl_seteq<1,1,1>(ap_const_logic_0, StgValue_88_real379_fu_68_complex_float_M_real_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, StgValue_89_imag380_fu_75_complex_float_M_imag_blk_n.read()));
}

void KernelMaker::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_95_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void KernelMaker::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void KernelMaker::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_95_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void KernelMaker::thread_exitcond1_fu_123_p2() {
    exitcond1_fu_123_p2 = (!j_reg_57.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_57.read() == ap_const_lv9_100);
}

void KernelMaker::thread_exitcond_fu_95_p2() {
    exitcond_fu_95_p2 = (!i_reg_46.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_46.read() == ap_const_lv9_100);
}

void KernelMaker::thread_grp_fu_208_p0() {
    grp_fu_208_p0 =  (sc_lv<9>) (tmp_91_fu_141_p1.read());
}

void KernelMaker::thread_grp_fu_208_p1() {
    grp_fu_208_p1 =  (sc_lv<9>) (tmp_91_fu_141_p1.read());
}

void KernelMaker::thread_grp_fu_87_p0() {
    grp_fu_87_p0 = esl_sext<32,4>(tmp_99_reg_253.read());
}

void KernelMaker::thread_i_3_fu_101_p2() {
    i_3_fu_101_p2 = (!i_reg_46.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i_reg_46.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void KernelMaker::thread_j_1_fu_129_p2() {
    j_1_fu_129_p2 = (!j_reg_57.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(j_reg_57.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void KernelMaker::thread_kernel_M_imag_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        kernel_M_imag_blk_n = StgValue_89_imag380_fu_75_complex_float_M_imag_blk_n.read();
    } else {
        kernel_M_imag_blk_n = ap_const_logic_1;
    }
}

void KernelMaker::thread_kernel_M_imag_din() {
    kernel_M_imag_din = StgValue_89_imag380_fu_75_complex_float_M_imag_din.read();
}

void KernelMaker::thread_kernel_M_imag_write() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        kernel_M_imag_write = StgValue_89_imag380_fu_75_complex_float_M_imag_write.read();
    } else {
        kernel_M_imag_write = ap_const_logic_0;
    }
}

void KernelMaker::thread_kernel_M_real_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        kernel_M_real_blk_n = StgValue_88_real379_fu_68_complex_float_M_real_blk_n.read();
    } else {
        kernel_M_real_blk_n = ap_const_logic_1;
    }
}

void KernelMaker::thread_kernel_M_real_din() {
    kernel_M_real_din = StgValue_88_real379_fu_68_complex_float_M_real_din.read();
}

void KernelMaker::thread_kernel_M_real_write() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        kernel_M_real_write = StgValue_88_real379_fu_68_complex_float_M_real_write.read();
    } else {
        kernel_M_real_write = ap_const_logic_0;
    }
}

void KernelMaker::thread_p_lshr_cast_fu_180_p1() {
    p_lshr_cast_fu_180_p1 = esl_zext<4,3>(tmp_96_fu_176_p1.read());
}

void KernelMaker::thread_p_lshr_f_cast_fu_187_p1() {
    p_lshr_f_cast_fu_187_p1 = esl_zext<4,3>(tmp_98_fu_184_p1.read());
}

void KernelMaker::thread_p_neg_f_fu_191_p2() {
    p_neg_f_fu_191_p2 = (!ap_const_lv4_0.is_01() || !p_lshr_f_cast_fu_187_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_0) - sc_biguint<4>(p_lshr_f_cast_fu_187_p1.read()));
}

void KernelMaker::thread_p_neg_fu_161_p2() {
    p_neg_fu_161_p2 = (!ap_const_lv17_0.is_01() || !tmp_93_reg_238.read().is_01())? sc_lv<17>(): (sc_biguint<17>(ap_const_lv17_0) - sc_bigint<17>(tmp_93_reg_238.read()));
}

void KernelMaker::thread_tmp_138_cast_fu_117_p0() {
    tmp_138_cast_fu_117_p0 =  (sc_lv<9>) (tmp_fu_113_p1.read());
}

void KernelMaker::thread_tmp_138_cast_fu_117_p1() {
    tmp_138_cast_fu_117_p1 =  (sc_lv<9>) (tmp_fu_113_p1.read());
}

void KernelMaker::thread_tmp_138_cast_fu_117_p2() {
    tmp_138_cast_fu_117_p2 = (!tmp_138_cast_fu_117_p0.read().is_01() || !tmp_138_cast_fu_117_p1.read().is_01())? sc_lv<17>(): sc_bigint<9>(tmp_138_cast_fu_117_p0.read()) * sc_bigint<9>(tmp_138_cast_fu_117_p1.read());
}

void KernelMaker::thread_tmp_91_fu_141_p1() {
    tmp_91_fu_141_p1 = esl_sext<17,9>(tmp_92_fu_135_p2.read());
}

void KernelMaker::thread_tmp_92_fu_135_p2() {
    tmp_92_fu_135_p2 = (!j_reg_57.read().is_01() || !ap_const_lv9_180.is_01())? sc_lv<9>(): (sc_biguint<9>(j_reg_57.read()) + sc_bigint<9>(ap_const_lv9_180));
}

void KernelMaker::thread_tmp_95_fu_166_p4() {
    tmp_95_fu_166_p4 = p_neg_fu_161_p2.read().range(16, 15);
}

void KernelMaker::thread_tmp_96_fu_176_p1() {
    tmp_96_fu_176_p1 = esl_sext<3,2>(tmp_95_fu_166_p4.read());
}

void KernelMaker::thread_tmp_98_fu_184_p1() {
    tmp_98_fu_184_p1 = esl_sext<3,2>(tmp_97_reg_248.read());
}

void KernelMaker::thread_tmp_99_fu_197_p3() {
    tmp_99_fu_197_p3 = (!tmp_113_reg_243.read()[0].is_01())? sc_lv<4>(): ((tmp_113_reg_243.read()[0].to_bool())? p_lshr_cast_fu_180_p1.read(): p_neg_f_fu_191_p2.read());
}

void KernelMaker::thread_tmp_fu_113_p1() {
    tmp_fu_113_p1 = esl_sext<17,9>(tmp_s_fu_107_p2.read());
}

void KernelMaker::thread_tmp_s_fu_107_p2() {
    tmp_s_fu_107_p2 = (!i_reg_46.read().is_01() || !ap_const_lv9_180.is_01())? sc_lv<9>(): (sc_biguint<9>(i_reg_46.read()) + sc_bigint<9>(ap_const_lv9_180));
}

void KernelMaker::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_fu_95_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond1_fu_123_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, StgValue_88_real379_fu_68_complex_float_M_real_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, StgValue_89_imag380_fu_75_complex_float_M_imag_blk_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state29;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            break;
    }
}

}

