// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "fft_top.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic fft_top::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic fft_top::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> fft_top::ap_ST_fsm_state1 = "1";
const sc_lv<6> fft_top::ap_ST_fsm_state2 = "10";
const sc_lv<6> fft_top::ap_ST_fsm_state3 = "100";
const sc_lv<6> fft_top::ap_ST_fsm_state4 = "1000";
const sc_lv<6> fft_top::ap_ST_fsm_state5 = "10000";
const sc_lv<6> fft_top::ap_ST_fsm_state6 = "100000";
const sc_lv<32> fft_top::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> fft_top::ap_const_lv32_4 = "100";
const sc_lv<32> fft_top::ap_const_lv32_2 = "10";
const sc_lv<32> fft_top::ap_const_lv32_3 = "11";
const sc_lv<32> fft_top::ap_const_lv32_5 = "101";
const sc_lv<32> fft_top::ap_const_lv32_1 = "1";
const sc_lv<8> fft_top::ap_const_lv8_0 = "00000000";
const sc_lv<16> fft_top::ap_const_lv16_0 = "0000000000000000";
const bool fft_top::ap_const_boolean_1 = true;

fft_top::fft_top(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_dummy_proc_middle_1394_fu_75 = new dummy_proc_middle_1394("grp_dummy_proc_middle_1394_fu_75");
    grp_dummy_proc_middle_1394_fu_75->ap_clk(ap_clk);
    grp_dummy_proc_middle_1394_fu_75->ap_rst(ap_rst);
    grp_dummy_proc_middle_1394_fu_75->ap_start(grp_dummy_proc_middle_1394_fu_75_ap_start);
    grp_dummy_proc_middle_1394_fu_75->ap_done(grp_dummy_proc_middle_1394_fu_75_ap_done);
    grp_dummy_proc_middle_1394_fu_75->ap_idle(grp_dummy_proc_middle_1394_fu_75_ap_idle);
    grp_dummy_proc_middle_1394_fu_75->ap_ready(grp_dummy_proc_middle_1394_fu_75_ap_ready);
    grp_dummy_proc_middle_1394_fu_75->st_in_data_V_read(fft_status1_data_V_r_reg_123);
    grp_dummy_proc_middle_1394_fu_75->out_r_din(grp_dummy_proc_middle_1394_fu_75_out_r_din);
    grp_dummy_proc_middle_1394_fu_75->out_r_full_n(out_r_full_n);
    grp_dummy_proc_middle_1394_fu_75->out_r_write(grp_dummy_proc_middle_1394_fu_75_out_r_write);
    grp_dummy_proc_middle_1394_fu_75->xk1_dout(xk1_dout);
    grp_dummy_proc_middle_1394_fu_75->xk1_empty_n(xk1_empty_n);
    grp_dummy_proc_middle_1394_fu_75->xk1_read(grp_dummy_proc_middle_1394_fu_75_xk1_read);
    grp_dummy_proc_fe_1395_fu_85 = new dummy_proc_fe_1395("grp_dummy_proc_fe_1395_fu_85");
    grp_dummy_proc_fe_1395_fu_85->ap_clk(ap_clk);
    grp_dummy_proc_fe_1395_fu_85->ap_rst(ap_rst);
    grp_dummy_proc_fe_1395_fu_85->ap_start(grp_dummy_proc_fe_1395_fu_85_ap_start);
    grp_dummy_proc_fe_1395_fu_85->ap_done(grp_dummy_proc_fe_1395_fu_85_ap_done);
    grp_dummy_proc_fe_1395_fu_85->ap_idle(grp_dummy_proc_fe_1395_fu_85_ap_idle);
    grp_dummy_proc_fe_1395_fu_85->ap_ready(grp_dummy_proc_fe_1395_fu_85_ap_ready);
    grp_dummy_proc_fe_1395_fu_85->direction(direction_read_reg_106);
    grp_dummy_proc_fe_1395_fu_85->in_r_dout(in_r_dout);
    grp_dummy_proc_fe_1395_fu_85->in_r_empty_n(in_r_empty_n);
    grp_dummy_proc_fe_1395_fu_85->in_r_read(grp_dummy_proc_fe_1395_fu_85_in_r_read);
    grp_dummy_proc_fe_1395_fu_85->xn1_din(grp_dummy_proc_fe_1395_fu_85_xn1_din);
    grp_dummy_proc_fe_1395_fu_85->xn1_full_n(xn1_full_n);
    grp_dummy_proc_fe_1395_fu_85->xn1_write(grp_dummy_proc_fe_1395_fu_85_xn1_write);
    grp_dummy_proc_fe_1395_fu_85->ap_return(grp_dummy_proc_fe_1395_fu_85_ap_return);
    grp_fft_config1_s_fu_96 = new fft_config1_s("grp_fft_config1_s_fu_96");
    grp_fft_config1_s_fu_96->ap_clk(ap_clk);
    grp_fft_config1_s_fu_96->ap_rst(ap_rst);
    grp_fft_config1_s_fu_96->ap_start(grp_fft_config1_s_fu_96_ap_start);
    grp_fft_config1_s_fu_96->ap_ce(grp_fft_config1_s_fu_96_ap_ce);
    grp_fft_config1_s_fu_96->ap_done(grp_fft_config1_s_fu_96_ap_done);
    grp_fft_config1_s_fu_96->ap_idle(grp_fft_config1_s_fu_96_ap_idle);
    grp_fft_config1_s_fu_96->ap_ready(grp_fft_config1_s_fu_96_ap_ready);
    grp_fft_config1_s_fu_96->xn_dout(xn1_dout);
    grp_fft_config1_s_fu_96->xn_empty_n(xn1_empty_n);
    grp_fft_config1_s_fu_96->xn_read(grp_fft_config1_s_fu_96_xn_read);
    grp_fft_config1_s_fu_96->xk_din(grp_fft_config1_s_fu_96_xk_din);
    grp_fft_config1_s_fu_96->xk_full_n(xk1_full_n);
    grp_fft_config1_s_fu_96->xk_write(grp_fft_config1_s_fu_96_xk_write);
    grp_fft_config1_s_fu_96->status_data_V_din(grp_fft_config1_s_fu_96_status_data_V_din);
    grp_fft_config1_s_fu_96->status_data_V_full_n(ap_var_for_const0);
    grp_fft_config1_s_fu_96->status_data_V_write(grp_fft_config1_s_fu_96_status_data_V_write);
    grp_fft_config1_s_fu_96->config_ch_data_V_dout(ap_var_for_const1);
    grp_fft_config1_s_fu_96->config_ch_data_V_empty_n(ap_var_for_const0);
    grp_fft_config1_s_fu_96->config_ch_data_V_read(grp_fft_config1_s_fu_96_config_ch_data_V_read);
    xk1_fifo_U = new fifo_w64_d256_A("xk1_fifo_U");
    xk1_fifo_U->clk(ap_clk);
    xk1_fifo_U->reset(ap_rst);
    xk1_fifo_U->if_read_ce(ap_var_for_const0);
    xk1_fifo_U->if_write_ce(ap_var_for_const0);
    xk1_fifo_U->if_din(grp_fft_config1_s_fu_96_xk_din);
    xk1_fifo_U->if_full_n(xk1_full_n);
    xk1_fifo_U->if_write(xk1_write);
    xk1_fifo_U->if_dout(xk1_dout);
    xk1_fifo_U->if_empty_n(xk1_empty_n);
    xk1_fifo_U->if_read(xk1_read);
    xn1_fifo_U = new fifo_w64_d256_A("xn1_fifo_U");
    xn1_fifo_U->clk(ap_clk);
    xn1_fifo_U->reset(ap_rst);
    xn1_fifo_U->if_read_ce(ap_var_for_const0);
    xn1_fifo_U->if_write_ce(ap_var_for_const0);
    xn1_fifo_U->if_din(grp_dummy_proc_fe_1395_fu_85_xn1_din);
    xn1_fifo_U->if_full_n(xn1_full_n);
    xn1_fifo_U->if_write(xn1_write);
    xn1_fifo_U->if_dout(xn1_dout);
    xn1_fifo_U->if_empty_n(xn1_empty_n);
    xn1_fifo_U->if_read(xn1_read);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( direction_ap_vld );

    SC_METHOD(thread_ap_block_state1_ignore_call10);
    sensitive << ( ap_start );
    sensitive << ( direction_ap_vld );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_dummy_proc_middle_1394_fu_75_ap_done );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_dummy_proc_middle_1394_fu_75_ap_done );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_direction_ap_ack);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( direction_ap_vld );

    SC_METHOD(thread_direction_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( direction_ap_vld );

    SC_METHOD(thread_fft_config1_data_V_full_n);

    SC_METHOD(thread_fft_status1_data_V_dout);

    SC_METHOD(thread_fft_status1_data_V_empty_n);

    SC_METHOD(thread_grp_dummy_proc_fe_1395_fu_85_ap_start);
    sensitive << ( grp_dummy_proc_fe_1395_fu_85_ap_start_reg );

    SC_METHOD(thread_grp_dummy_proc_middle_1394_fu_75_ap_start);
    sensitive << ( grp_dummy_proc_middle_1394_fu_75_ap_start_reg );

    SC_METHOD(thread_grp_fft_config1_s_fu_96_ap_ce);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fft_config1_s_fu_96_ap_start);
    sensitive << ( grp_fft_config1_s_fu_96_ap_start_reg );

    SC_METHOD(thread_in_r_read);
    sensitive << ( grp_dummy_proc_fe_1395_fu_85_in_r_read );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_out_r_din);
    sensitive << ( grp_dummy_proc_middle_1394_fu_75_out_r_din );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_out_r_write);
    sensitive << ( grp_dummy_proc_middle_1394_fu_75_out_r_write );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_xk1_read);
    sensitive << ( grp_dummy_proc_middle_1394_fu_75_xk1_read );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_xk1_write);
    sensitive << ( grp_fft_config1_s_fu_96_xk_write );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_xn1_read);
    sensitive << ( grp_fft_config1_s_fu_96_xn_read );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_xn1_write);
    sensitive << ( grp_dummy_proc_fe_1395_fu_85_xn1_write );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( direction_ap_vld );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( fft_status1_data_V_empty_n );
    sensitive << ( grp_dummy_proc_middle_1394_fu_75_ap_done );
    sensitive << ( grp_dummy_proc_fe_1395_fu_85_ap_done );
    sensitive << ( grp_fft_config1_s_fu_96_ap_done );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( fft_config1_data_V_full_n );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "000001";
    grp_dummy_proc_middle_1394_fu_75_ap_start_reg = SC_LOGIC_0;
    grp_dummy_proc_fe_1395_fu_85_ap_start_reg = SC_LOGIC_0;
    grp_fft_config1_s_fu_96_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "fft_top_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, direction, "(port)direction");
    sc_trace(mVcdFile, direction_ap_vld, "(port)direction_ap_vld");
    sc_trace(mVcdFile, direction_ap_ack, "(port)direction_ap_ack");
    sc_trace(mVcdFile, in_r_dout, "(port)in_r_dout");
    sc_trace(mVcdFile, in_r_empty_n, "(port)in_r_empty_n");
    sc_trace(mVcdFile, in_r_read, "(port)in_r_read");
    sc_trace(mVcdFile, out_r_din, "(port)out_r_din");
    sc_trace(mVcdFile, out_r_full_n, "(port)out_r_full_n");
    sc_trace(mVcdFile, out_r_write, "(port)out_r_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, direction_blk_n, "direction_blk_n");
    sc_trace(mVcdFile, direction_read_reg_106, "direction_read_reg_106");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, fft_status1_data_V_r_reg_123, "fft_status1_data_V_r_reg_123");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, fft_status1_data_V_dout, "fft_status1_data_V_dout");
    sc_trace(mVcdFile, fft_status1_data_V_empty_n, "fft_status1_data_V_empty_n");
    sc_trace(mVcdFile, grp_dummy_proc_middle_1394_fu_75_ap_start, "grp_dummy_proc_middle_1394_fu_75_ap_start");
    sc_trace(mVcdFile, grp_dummy_proc_middle_1394_fu_75_ap_done, "grp_dummy_proc_middle_1394_fu_75_ap_done");
    sc_trace(mVcdFile, grp_dummy_proc_middle_1394_fu_75_ap_idle, "grp_dummy_proc_middle_1394_fu_75_ap_idle");
    sc_trace(mVcdFile, grp_dummy_proc_middle_1394_fu_75_ap_ready, "grp_dummy_proc_middle_1394_fu_75_ap_ready");
    sc_trace(mVcdFile, grp_dummy_proc_middle_1394_fu_75_out_r_din, "grp_dummy_proc_middle_1394_fu_75_out_r_din");
    sc_trace(mVcdFile, grp_dummy_proc_middle_1394_fu_75_out_r_write, "grp_dummy_proc_middle_1394_fu_75_out_r_write");
    sc_trace(mVcdFile, grp_dummy_proc_middle_1394_fu_75_xk1_read, "grp_dummy_proc_middle_1394_fu_75_xk1_read");
    sc_trace(mVcdFile, grp_dummy_proc_fe_1395_fu_85_ap_start, "grp_dummy_proc_fe_1395_fu_85_ap_start");
    sc_trace(mVcdFile, grp_dummy_proc_fe_1395_fu_85_ap_done, "grp_dummy_proc_fe_1395_fu_85_ap_done");
    sc_trace(mVcdFile, grp_dummy_proc_fe_1395_fu_85_ap_idle, "grp_dummy_proc_fe_1395_fu_85_ap_idle");
    sc_trace(mVcdFile, grp_dummy_proc_fe_1395_fu_85_ap_ready, "grp_dummy_proc_fe_1395_fu_85_ap_ready");
    sc_trace(mVcdFile, grp_dummy_proc_fe_1395_fu_85_in_r_read, "grp_dummy_proc_fe_1395_fu_85_in_r_read");
    sc_trace(mVcdFile, grp_dummy_proc_fe_1395_fu_85_xn1_din, "grp_dummy_proc_fe_1395_fu_85_xn1_din");
    sc_trace(mVcdFile, grp_dummy_proc_fe_1395_fu_85_xn1_write, "grp_dummy_proc_fe_1395_fu_85_xn1_write");
    sc_trace(mVcdFile, grp_dummy_proc_fe_1395_fu_85_ap_return, "grp_dummy_proc_fe_1395_fu_85_ap_return");
    sc_trace(mVcdFile, grp_fft_config1_s_fu_96_ap_start, "grp_fft_config1_s_fu_96_ap_start");
    sc_trace(mVcdFile, grp_fft_config1_s_fu_96_ap_ce, "grp_fft_config1_s_fu_96_ap_ce");
    sc_trace(mVcdFile, grp_fft_config1_s_fu_96_ap_done, "grp_fft_config1_s_fu_96_ap_done");
    sc_trace(mVcdFile, grp_fft_config1_s_fu_96_ap_idle, "grp_fft_config1_s_fu_96_ap_idle");
    sc_trace(mVcdFile, grp_fft_config1_s_fu_96_ap_ready, "grp_fft_config1_s_fu_96_ap_ready");
    sc_trace(mVcdFile, grp_fft_config1_s_fu_96_xn_read, "grp_fft_config1_s_fu_96_xn_read");
    sc_trace(mVcdFile, grp_fft_config1_s_fu_96_xk_din, "grp_fft_config1_s_fu_96_xk_din");
    sc_trace(mVcdFile, grp_fft_config1_s_fu_96_xk_write, "grp_fft_config1_s_fu_96_xk_write");
    sc_trace(mVcdFile, grp_fft_config1_s_fu_96_status_data_V_din, "grp_fft_config1_s_fu_96_status_data_V_din");
    sc_trace(mVcdFile, grp_fft_config1_s_fu_96_status_data_V_write, "grp_fft_config1_s_fu_96_status_data_V_write");
    sc_trace(mVcdFile, grp_fft_config1_s_fu_96_config_ch_data_V_read, "grp_fft_config1_s_fu_96_config_ch_data_V_read");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_dummy_proc_middle_1394_fu_75_ap_start_reg, "grp_dummy_proc_middle_1394_fu_75_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, xk1_dout, "xk1_dout");
    sc_trace(mVcdFile, xk1_empty_n, "xk1_empty_n");
    sc_trace(mVcdFile, xk1_read, "xk1_read");
    sc_trace(mVcdFile, grp_dummy_proc_fe_1395_fu_85_ap_start_reg, "grp_dummy_proc_fe_1395_fu_85_ap_start_reg");
    sc_trace(mVcdFile, ap_block_state1_ignore_call10, "ap_block_state1_ignore_call10");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, xn1_full_n, "xn1_full_n");
    sc_trace(mVcdFile, xn1_write, "xn1_write");
    sc_trace(mVcdFile, grp_fft_config1_s_fu_96_ap_start_reg, "grp_fft_config1_s_fu_96_ap_start_reg");
    sc_trace(mVcdFile, xn1_dout, "xn1_dout");
    sc_trace(mVcdFile, xn1_empty_n, "xn1_empty_n");
    sc_trace(mVcdFile, xn1_read, "xn1_read");
    sc_trace(mVcdFile, xk1_full_n, "xk1_full_n");
    sc_trace(mVcdFile, xk1_write, "xk1_write");
    sc_trace(mVcdFile, fft_config1_data_V_full_n, "fft_config1_data_V_full_n");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

fft_top::~fft_top() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_dummy_proc_middle_1394_fu_75;
    delete grp_dummy_proc_fe_1395_fu_85;
    delete grp_fft_config1_s_fu_96;
    delete xk1_fifo_U;
    delete xn1_fifo_U;
}

void fft_top::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void fft_top::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv16_0;
}

void fft_top::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_dummy_proc_fe_1395_fu_85_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, direction_ap_vld.read())))) {
            grp_dummy_proc_fe_1395_fu_85_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_dummy_proc_fe_1395_fu_85_ap_ready.read())) {
            grp_dummy_proc_fe_1395_fu_85_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_dummy_proc_middle_1394_fu_75_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
             esl_seteq<1,1,1>(fft_status1_data_V_empty_n.read(), ap_const_logic_1))) {
            grp_dummy_proc_middle_1394_fu_75_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_dummy_proc_middle_1394_fu_75_ap_ready.read())) {
            grp_dummy_proc_middle_1394_fu_75_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_fft_config1_s_fu_96_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            grp_fft_config1_s_fu_96_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_fft_config1_s_fu_96_ap_ready.read())) {
            grp_fft_config1_s_fu_96_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, direction_ap_vld.read())))) {
        direction_read_reg_106 =  (sc_lv<1>) (direction.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(fft_status1_data_V_empty_n.read(), ap_const_logic_1))) {
        fft_status1_data_V_r_reg_123 = fft_status1_data_V_dout.read();
    }
}

void fft_top::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void fft_top::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void fft_top::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void fft_top::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void fft_top::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void fft_top::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void fft_top::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, direction_ap_vld.read()));
}

void fft_top::thread_ap_block_state1_ignore_call10() {
    ap_block_state1_ignore_call10 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, direction_ap_vld.read()));
}

void fft_top::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(grp_dummy_proc_middle_1394_fu_75_ap_done.read(), ap_const_logic_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void fft_top::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void fft_top::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(grp_dummy_proc_middle_1394_fu_75_ap_done.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void fft_top::thread_direction_ap_ack() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, direction_ap_vld.read())))) {
        direction_ap_ack = ap_const_logic_1;
    } else {
        direction_ap_ack = ap_const_logic_0;
    }
}

void fft_top::thread_direction_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        direction_blk_n = direction_ap_vld.read();
    } else {
        direction_blk_n = ap_const_logic_1;
    }
}

void fft_top::thread_fft_config1_data_V_full_n() {
    fft_config1_data_V_full_n = ap_const_logic_1;
}

void fft_top::thread_fft_status1_data_V_dout() {
    fft_status1_data_V_dout = ap_const_lv8_0;
}

void fft_top::thread_fft_status1_data_V_empty_n() {
    fft_status1_data_V_empty_n = ap_const_logic_1;
}

void fft_top::thread_grp_dummy_proc_fe_1395_fu_85_ap_start() {
    grp_dummy_proc_fe_1395_fu_85_ap_start = grp_dummy_proc_fe_1395_fu_85_ap_start_reg.read();
}

void fft_top::thread_grp_dummy_proc_middle_1394_fu_75_ap_start() {
    grp_dummy_proc_middle_1394_fu_75_ap_start = grp_dummy_proc_middle_1394_fu_75_ap_start_reg.read();
}

void fft_top::thread_grp_fft_config1_s_fu_96_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        grp_fft_config1_s_fu_96_ap_ce = ap_const_logic_1;
    } else {
        grp_fft_config1_s_fu_96_ap_ce = ap_const_logic_0;
    }
}

void fft_top::thread_grp_fft_config1_s_fu_96_ap_start() {
    grp_fft_config1_s_fu_96_ap_start = grp_fft_config1_s_fu_96_ap_start_reg.read();
}

void fft_top::thread_in_r_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        in_r_read = grp_dummy_proc_fe_1395_fu_85_in_r_read.read();
    } else {
        in_r_read = ap_const_logic_0;
    }
}

void fft_top::thread_out_r_din() {
    out_r_din = grp_dummy_proc_middle_1394_fu_75_out_r_din.read();
}

void fft_top::thread_out_r_write() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        out_r_write = grp_dummy_proc_middle_1394_fu_75_out_r_write.read();
    } else {
        out_r_write = ap_const_logic_0;
    }
}

void fft_top::thread_xk1_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        xk1_read = grp_dummy_proc_middle_1394_fu_75_xk1_read.read();
    } else {
        xk1_read = ap_const_logic_0;
    }
}

void fft_top::thread_xk1_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        xk1_write = grp_fft_config1_s_fu_96_xk_write.read();
    } else {
        xk1_write = ap_const_logic_0;
    }
}

void fft_top::thread_xn1_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        xn1_read = grp_fft_config1_s_fu_96_xn_read.read();
    } else {
        xn1_read = ap_const_logic_0;
    }
}

void fft_top::thread_xn1_write() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        xn1_write = grp_dummy_proc_fe_1395_fu_85_xn1_write.read();
    } else {
        xn1_write = ap_const_logic_0;
    }
}

void fft_top::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, direction_ap_vld.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, fft_config1_data_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_dummy_proc_fe_1395_fu_85_ap_done.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_fft_config1_s_fu_96_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(fft_status1_data_V_empty_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(grp_dummy_proc_middle_1394_fu_75_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXX";
            break;
    }
}

}

