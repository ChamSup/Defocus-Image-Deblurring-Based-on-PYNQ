// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matrix_plus_SNR_HH_
#define _matrix_plus_SNR_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "imag380.h"
#include "real379.h"
#include "WienerDeblur_faddibs.h"

namespace ap_rtl {

struct matrix_plus_SNR : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > fft_kernel_modu2_M_s_dout;
    sc_in< sc_logic > fft_kernel_modu2_M_s_empty_n;
    sc_out< sc_logic > fft_kernel_modu2_M_s_read;
    sc_out< sc_lv<32> > G1_M_real_din;
    sc_in< sc_logic > G1_M_real_full_n;
    sc_out< sc_logic > G1_M_real_write;
    sc_in< sc_lv<32> > fft_kernel_modu2_M_1_dout;
    sc_in< sc_logic > fft_kernel_modu2_M_1_empty_n;
    sc_out< sc_logic > fft_kernel_modu2_M_1_read;
    sc_out< sc_lv<32> > G1_M_imag_din;
    sc_in< sc_logic > G1_M_imag_full_n;
    sc_out< sc_logic > G1_M_imag_write;
    sc_signal< sc_lv<32> > ap_var_for_const0;


    // Module declarations
    matrix_plus_SNR(sc_module_name name);
    SC_HAS_PROCESS(matrix_plus_SNR);

    ~matrix_plus_SNR();

    sc_trace_file* mVcdFile;

    imag380* StgValue_28_imag380_fu_70;
    real379* StgValue_33_real379_fu_77;
    WienerDeblur_faddibs<1,5,32,32,32>* WienerDeblur_faddibs_U136;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > fft_kernel_modu2_M_s_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond_fu_102_p2;
    sc_signal< sc_logic > StgValue_33_real379_fu_77_complex_float_M_real_blk_n;
    sc_signal< sc_logic > G1_M_real_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > fft_kernel_modu2_M_1_blk_n;
    sc_signal< sc_logic > StgValue_28_imag380_fu_70_complex_float_M_imag_blk_n;
    sc_signal< sc_logic > G1_M_imag_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<9> > r_1_fu_96_p2;
    sc_signal< sc_lv<9> > r_1_reg_117;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > c_1_fu_108_p2;
    sc_signal< sc_lv<9> > c_1_reg_125;
    sc_signal< bool > ap_block_state3;
    sc_signal< sc_lv<32> > fft_kernel_modu2_M_2_reg_130;
    sc_signal< sc_lv<32> > fft_kernel_modu2_M_3_reg_135;
    sc_signal< sc_logic > StgValue_28_imag380_fu_70_ap_start;
    sc_signal< sc_logic > StgValue_28_imag380_fu_70_ap_done;
    sc_signal< sc_logic > StgValue_28_imag380_fu_70_ap_idle;
    sc_signal< sc_logic > StgValue_28_imag380_fu_70_ap_ready;
    sc_signal< sc_lv<32> > StgValue_28_imag380_fu_70_complex_float_M_imag_din;
    sc_signal< sc_logic > StgValue_28_imag380_fu_70_complex_float_M_imag_write;
    sc_signal< sc_logic > StgValue_33_real379_fu_77_ap_start;
    sc_signal< sc_logic > StgValue_33_real379_fu_77_ap_done;
    sc_signal< sc_logic > StgValue_33_real379_fu_77_ap_idle;
    sc_signal< sc_logic > StgValue_33_real379_fu_77_ap_ready;
    sc_signal< sc_lv<32> > StgValue_33_real379_fu_77_complex_float_M_real_din;
    sc_signal< sc_logic > StgValue_33_real379_fu_77_complex_float_M_real_write;
    sc_signal< sc_lv<9> > r_reg_48;
    sc_signal< sc_lv<9> > c_reg_59;
    sc_signal< sc_lv<1> > exitcond1_fu_90_p2;
    sc_signal< sc_lv<32> > grp_fu_84_p2;
    sc_signal< sc_logic > grp_fu_84_ce;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<9> ap_const_lv9_100;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_G1_M_imag_blk_n();
    void thread_G1_M_imag_din();
    void thread_G1_M_imag_write();
    void thread_G1_M_real_blk_n();
    void thread_G1_M_real_din();
    void thread_G1_M_real_write();
    void thread_StgValue_28_imag380_fu_70_ap_start();
    void thread_StgValue_33_real379_fu_77_ap_start();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_state3();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_1_fu_108_p2();
    void thread_exitcond1_fu_90_p2();
    void thread_exitcond_fu_102_p2();
    void thread_fft_kernel_modu2_M_1_blk_n();
    void thread_fft_kernel_modu2_M_1_read();
    void thread_fft_kernel_modu2_M_s_blk_n();
    void thread_fft_kernel_modu2_M_s_read();
    void thread_grp_fu_84_ce();
    void thread_r_1_fu_96_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
