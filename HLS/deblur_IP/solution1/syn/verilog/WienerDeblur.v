// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="WienerDeblur,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.890000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=3268,HLS_SYN_DSP=233,HLS_SYN_FF=85673,HLS_SYN_LUT=146473,HLS_VERSION=2018_3}" *)

module WienerDeblur (
        ap_clk,
        ap_rst_n,
        in_stream_TDATA,
        in_stream_TVALID,
        in_stream_TREADY,
        in_stream_TUSER,
        in_stream_TLAST,
        out_stream_TDATA,
        out_stream_TVALID,
        out_stream_TREADY,
        out_stream_TUSER,
        out_stream_TLAST,
        s_axi_CONTROL_BUS_AWVALID,
        s_axi_CONTROL_BUS_AWREADY,
        s_axi_CONTROL_BUS_AWADDR,
        s_axi_CONTROL_BUS_WVALID,
        s_axi_CONTROL_BUS_WREADY,
        s_axi_CONTROL_BUS_WDATA,
        s_axi_CONTROL_BUS_WSTRB,
        s_axi_CONTROL_BUS_ARVALID,
        s_axi_CONTROL_BUS_ARREADY,
        s_axi_CONTROL_BUS_ARADDR,
        s_axi_CONTROL_BUS_RVALID,
        s_axi_CONTROL_BUS_RREADY,
        s_axi_CONTROL_BUS_RDATA,
        s_axi_CONTROL_BUS_RRESP,
        s_axi_CONTROL_BUS_BVALID,
        s_axi_CONTROL_BUS_BREADY,
        s_axi_CONTROL_BUS_BRESP,
        interrupt,
        AXI_LITE_clk,
        ap_rst_n_AXI_LITE_clk
);

parameter    ap_ST_fsm_state1 = 101'd1;
parameter    ap_ST_fsm_state2 = 101'd2;
parameter    ap_ST_fsm_state3 = 101'd4;
parameter    ap_ST_fsm_state4 = 101'd8;
parameter    ap_ST_fsm_pp0_stage0 = 101'd16;
parameter    ap_ST_fsm_pp0_stage1 = 101'd32;
parameter    ap_ST_fsm_pp0_stage2 = 101'd64;
parameter    ap_ST_fsm_pp0_stage3 = 101'd128;
parameter    ap_ST_fsm_state10 = 101'd256;
parameter    ap_ST_fsm_state11 = 101'd512;
parameter    ap_ST_fsm_state12 = 101'd1024;
parameter    ap_ST_fsm_state13 = 101'd2048;
parameter    ap_ST_fsm_state14 = 101'd4096;
parameter    ap_ST_fsm_state15 = 101'd8192;
parameter    ap_ST_fsm_state16 = 101'd16384;
parameter    ap_ST_fsm_state17 = 101'd32768;
parameter    ap_ST_fsm_state18 = 101'd65536;
parameter    ap_ST_fsm_state19 = 101'd131072;
parameter    ap_ST_fsm_state20 = 101'd262144;
parameter    ap_ST_fsm_state21 = 101'd524288;
parameter    ap_ST_fsm_state22 = 101'd1048576;
parameter    ap_ST_fsm_state23 = 101'd2097152;
parameter    ap_ST_fsm_state24 = 101'd4194304;
parameter    ap_ST_fsm_state25 = 101'd8388608;
parameter    ap_ST_fsm_state26 = 101'd16777216;
parameter    ap_ST_fsm_state27 = 101'd33554432;
parameter    ap_ST_fsm_state28 = 101'd67108864;
parameter    ap_ST_fsm_state29 = 101'd134217728;
parameter    ap_ST_fsm_state30 = 101'd268435456;
parameter    ap_ST_fsm_state31 = 101'd536870912;
parameter    ap_ST_fsm_state32 = 101'd1073741824;
parameter    ap_ST_fsm_state33 = 101'd2147483648;
parameter    ap_ST_fsm_state34 = 101'd4294967296;
parameter    ap_ST_fsm_state35 = 101'd8589934592;
parameter    ap_ST_fsm_state36 = 101'd17179869184;
parameter    ap_ST_fsm_state37 = 101'd34359738368;
parameter    ap_ST_fsm_state38 = 101'd68719476736;
parameter    ap_ST_fsm_state39 = 101'd137438953472;
parameter    ap_ST_fsm_state40 = 101'd274877906944;
parameter    ap_ST_fsm_state41 = 101'd549755813888;
parameter    ap_ST_fsm_state42 = 101'd1099511627776;
parameter    ap_ST_fsm_state43 = 101'd2199023255552;
parameter    ap_ST_fsm_state44 = 101'd4398046511104;
parameter    ap_ST_fsm_state45 = 101'd8796093022208;
parameter    ap_ST_fsm_state46 = 101'd17592186044416;
parameter    ap_ST_fsm_state47 = 101'd35184372088832;
parameter    ap_ST_fsm_state48 = 101'd70368744177664;
parameter    ap_ST_fsm_state49 = 101'd140737488355328;
parameter    ap_ST_fsm_state50 = 101'd281474976710656;
parameter    ap_ST_fsm_state51 = 101'd562949953421312;
parameter    ap_ST_fsm_state52 = 101'd1125899906842624;
parameter    ap_ST_fsm_state53 = 101'd2251799813685248;
parameter    ap_ST_fsm_state54 = 101'd4503599627370496;
parameter    ap_ST_fsm_state55 = 101'd9007199254740992;
parameter    ap_ST_fsm_state56 = 101'd18014398509481984;
parameter    ap_ST_fsm_state57 = 101'd36028797018963968;
parameter    ap_ST_fsm_state58 = 101'd72057594037927936;
parameter    ap_ST_fsm_state59 = 101'd144115188075855872;
parameter    ap_ST_fsm_state60 = 101'd288230376151711744;
parameter    ap_ST_fsm_state61 = 101'd576460752303423488;
parameter    ap_ST_fsm_state62 = 101'd1152921504606846976;
parameter    ap_ST_fsm_state63 = 101'd2305843009213693952;
parameter    ap_ST_fsm_state64 = 101'd4611686018427387904;
parameter    ap_ST_fsm_state65 = 101'd9223372036854775808;
parameter    ap_ST_fsm_state66 = 101'd18446744073709551616;
parameter    ap_ST_fsm_state67 = 101'd36893488147419103232;
parameter    ap_ST_fsm_state68 = 101'd73786976294838206464;
parameter    ap_ST_fsm_state69 = 101'd147573952589676412928;
parameter    ap_ST_fsm_state70 = 101'd295147905179352825856;
parameter    ap_ST_fsm_state71 = 101'd590295810358705651712;
parameter    ap_ST_fsm_state72 = 101'd1180591620717411303424;
parameter    ap_ST_fsm_state73 = 101'd2361183241434822606848;
parameter    ap_ST_fsm_state74 = 101'd4722366482869645213696;
parameter    ap_ST_fsm_state75 = 101'd9444732965739290427392;
parameter    ap_ST_fsm_state76 = 101'd18889465931478580854784;
parameter    ap_ST_fsm_state77 = 101'd37778931862957161709568;
parameter    ap_ST_fsm_state78 = 101'd75557863725914323419136;
parameter    ap_ST_fsm_state79 = 101'd151115727451828646838272;
parameter    ap_ST_fsm_state80 = 101'd302231454903657293676544;
parameter    ap_ST_fsm_state81 = 101'd604462909807314587353088;
parameter    ap_ST_fsm_state82 = 101'd1208925819614629174706176;
parameter    ap_ST_fsm_state83 = 101'd2417851639229258349412352;
parameter    ap_ST_fsm_state84 = 101'd4835703278458516698824704;
parameter    ap_ST_fsm_state85 = 101'd9671406556917033397649408;
parameter    ap_ST_fsm_state86 = 101'd19342813113834066795298816;
parameter    ap_ST_fsm_state87 = 101'd38685626227668133590597632;
parameter    ap_ST_fsm_state88 = 101'd77371252455336267181195264;
parameter    ap_ST_fsm_state89 = 101'd154742504910672534362390528;
parameter    ap_ST_fsm_state90 = 101'd309485009821345068724781056;
parameter    ap_ST_fsm_state91 = 101'd618970019642690137449562112;
parameter    ap_ST_fsm_state92 = 101'd1237940039285380274899124224;
parameter    ap_ST_fsm_state93 = 101'd2475880078570760549798248448;
parameter    ap_ST_fsm_state94 = 101'd4951760157141521099596496896;
parameter    ap_ST_fsm_state95 = 101'd9903520314283042199192993792;
parameter    ap_ST_fsm_state96 = 101'd19807040628566084398385987584;
parameter    ap_ST_fsm_state97 = 101'd39614081257132168796771975168;
parameter    ap_ST_fsm_pp1_stage0 = 101'd79228162514264337593543950336;
parameter    ap_ST_fsm_pp1_stage1 = 101'd158456325028528675187087900672;
parameter    ap_ST_fsm_pp1_stage2 = 101'd316912650057057350374175801344;
parameter    ap_ST_fsm_pp1_stage3 = 101'd633825300114114700748351602688;
parameter    ap_ST_fsm_state104 = 101'd1267650600228229401496703205376;
parameter    C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] in_stream_TDATA;
input   in_stream_TVALID;
output   in_stream_TREADY;
input  [0:0] in_stream_TUSER;
input  [0:0] in_stream_TLAST;
output  [31:0] out_stream_TDATA;
output   out_stream_TVALID;
input   out_stream_TREADY;
output  [0:0] out_stream_TUSER;
output  [0:0] out_stream_TLAST;
input   s_axi_CONTROL_BUS_AWVALID;
output   s_axi_CONTROL_BUS_AWREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_AWADDR;
input   s_axi_CONTROL_BUS_WVALID;
output   s_axi_CONTROL_BUS_WREADY;
input  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_WDATA;
input  [C_S_AXI_CONTROL_BUS_WSTRB_WIDTH - 1:0] s_axi_CONTROL_BUS_WSTRB;
input   s_axi_CONTROL_BUS_ARVALID;
output   s_axi_CONTROL_BUS_ARREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_ARADDR;
output   s_axi_CONTROL_BUS_RVALID;
input   s_axi_CONTROL_BUS_RREADY;
output  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_RDATA;
output  [1:0] s_axi_CONTROL_BUS_RRESP;
output   s_axi_CONTROL_BUS_BVALID;
input   s_axi_CONTROL_BUS_BREADY;
output  [1:0] s_axi_CONTROL_BUS_BRESP;
output   interrupt;
input   AXI_LITE_clk;
input   ap_rst_n_AXI_LITE_clk;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [100:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [31:0] INPUT_data_V_0_data_out;
wire    INPUT_data_V_0_vld_in;
wire    INPUT_data_V_0_vld_out;
wire    INPUT_data_V_0_ack_in;
reg    INPUT_data_V_0_ack_out;
reg   [31:0] INPUT_data_V_0_payload_A;
reg   [31:0] INPUT_data_V_0_payload_B;
reg    INPUT_data_V_0_sel_rd;
reg    INPUT_data_V_0_sel_wr;
wire    INPUT_data_V_0_sel;
wire    INPUT_data_V_0_load_A;
wire    INPUT_data_V_0_load_B;
reg   [1:0] INPUT_data_V_0_state;
wire    INPUT_data_V_0_state_cmp_full;
wire    INPUT_last_V_0_vld_in;
reg    INPUT_last_V_0_ack_out;
reg   [1:0] INPUT_last_V_0_state;
reg   [31:0] OUTPUT_data_V_1_data_out;
reg    OUTPUT_data_V_1_vld_in;
wire    OUTPUT_data_V_1_vld_out;
wire    OUTPUT_data_V_1_ack_in;
wire    OUTPUT_data_V_1_ack_out;
reg   [31:0] OUTPUT_data_V_1_payload_A;
reg   [31:0] OUTPUT_data_V_1_payload_B;
reg    OUTPUT_data_V_1_sel_rd;
reg    OUTPUT_data_V_1_sel_wr;
wire    OUTPUT_data_V_1_sel;
wire    OUTPUT_data_V_1_load_A;
wire    OUTPUT_data_V_1_load_B;
reg   [1:0] OUTPUT_data_V_1_state;
wire    OUTPUT_data_V_1_state_cmp_full;
reg   [0:0] OUTPUT_user_V_1_data_out;
reg    OUTPUT_user_V_1_vld_in;
wire    OUTPUT_user_V_1_vld_out;
wire    OUTPUT_user_V_1_ack_in;
wire    OUTPUT_user_V_1_ack_out;
reg   [0:0] OUTPUT_user_V_1_payload_A;
reg   [0:0] OUTPUT_user_V_1_payload_B;
reg    OUTPUT_user_V_1_sel_rd;
reg    OUTPUT_user_V_1_sel_wr;
wire    OUTPUT_user_V_1_sel;
wire    OUTPUT_user_V_1_load_A;
wire    OUTPUT_user_V_1_load_B;
reg   [1:0] OUTPUT_user_V_1_state;
wire    OUTPUT_user_V_1_state_cmp_full;
reg   [0:0] OUTPUT_last_V_1_data_out;
reg    OUTPUT_last_V_1_vld_in;
wire    OUTPUT_last_V_1_vld_out;
wire    OUTPUT_last_V_1_ack_in;
wire    OUTPUT_last_V_1_ack_out;
reg   [0:0] OUTPUT_last_V_1_payload_A;
reg   [0:0] OUTPUT_last_V_1_payload_B;
reg    OUTPUT_last_V_1_sel_rd;
reg    OUTPUT_last_V_1_sel_wr;
wire    OUTPUT_last_V_1_sel;
wire    OUTPUT_last_V_1_load_A;
wire    OUTPUT_last_V_1_load_B;
reg   [1:0] OUTPUT_last_V_1_state;
wire    OUTPUT_last_V_1_state_cmp_full;
wire   [31:0] rows_V;
wire   [31:0] cols_V;
reg   [0:0] guard_variable_for_W;
reg    in_stream_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] tmp_56_reg_2447;
reg    out_stream_TDATA_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond_flatten_reg_2857;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_pp1_stage1;
reg   [0:0] exitcond_flatten_reg_2857_pp1_iter1_reg;
reg    ap_rst_n_AXI_LITE_clk_inv;
reg   [30:0] r_reg_857;
reg   [61:0] indvar_flatten_reg_1110;
reg   [31:0] i_op_assign_12_reg_1121;
reg   [29:0] c12_reg_1132;
wire   [31:0] grp_fu_1345_p2;
reg   [31:0] reg_1354;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    grp_real379_fu_1320_complex_float_M_real_blk_n;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state63;
reg   [31:0] reg_1360;
wire    ap_CS_fsm_state33;
wire   [31:0] middle_M_real_dout;
wire    middle_M_real_empty_n;
reg    middle_M_real_read;
wire   [0:0] exitcond3_fu_1585_p2;
wire   [31:0] middle_M_imag_dout;
wire    middle_M_imag_empty_n;
reg    middle_M_imag_read;
reg    ap_block_state33;
wire    ap_CS_fsm_state54;
wire   [0:0] exitcond_fu_1700_p2;
reg    ap_block_state54;
reg   [31:0] reg_1365;
reg   [31:0] kernel_M_real_din;
wire    kernel_M_real_full_n;
reg    kernel_M_real_write;
wire   [0:0] guard_variable_for_W_1_load_fu_1370_p1;
reg   [31:0] kernel_M_imag_din;
wire    kernel_M_imag_full_n;
reg    kernel_M_imag_write;
reg    ap_block_state1;
reg   [0:0] guard_variable_for_W_1_reg_2401;
wire   [7:0] p_sum_fu_1374_p2;
wire    ap_CS_fsm_state2;
reg    ap_block_state2;
wire   [7:0] p_sum1_fu_1386_p2;
reg   [7:0] p_sum1_reg_2413;
wire    ap_CS_fsm_state3;
wire   [7:0] tmp_53_fu_1392_p2;
wire    ap_CS_fsm_state4;
reg    ap_block_state4;
wire   [0:0] tmp_54_fu_1398_p2;
wire   [0:0] tmp_55_fu_1404_p2;
wire   [29:0] col_packets_fu_1416_p4;
wire   [30:0] col_packets_cast_fu_1429_p1;
wire   [31:0] packets_fu_1433_p2;
wire   [0:0] tmp_56_fu_1442_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state5_pp0_stage0_iter0;
reg   [7:0] src_bw_data_stream_0_din;
wire    src_bw_data_stream_0_full_n;
reg    src_bw_data_stream_0_write;
reg    ap_block_state9_pp0_stage0_iter1;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [30:0] r_4_fu_1447_p2;
reg   [30:0] r_4_reg_2451;
reg   [7:0] tmp_3_reg_2456;
reg    ap_block_state6_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
reg   [7:0] tmp_5_reg_2461;
reg   [7:0] tmp_7_reg_2466;
wire   [31:0] r_5_fu_1497_p2;
reg   [31:0] r_5_reg_2474;
wire    ap_CS_fsm_state11;
wire   [31:0] c_fu_1508_p2;
reg   [31:0] c_reg_2482;
wire    ap_CS_fsm_state12;
wire   [7:0] src_bw_data_stream_0_dout;
wire    src_bw_data_stream_0_empty_n;
reg    src_bw_data_stream_0_read;
wire   [0:0] exitcond9_fu_1503_p2;
reg    ap_block_state12;
reg   [7:0] tmp_63_reg_2487;
wire    ap_CS_fsm_state13;
wire   [31:0] grp_fu_1351_p1;
reg   [31:0] tmp_64_reg_2497;
wire    ap_CS_fsm_state18;
wire   [31:0] r_6_fu_1523_p2;
reg   [31:0] r_6_reg_2505;
wire    ap_CS_fsm_state20;
wire   [31:0] c_4_fu_1534_p2;
reg   [31:0] c_4_reg_2513;
wire    ap_CS_fsm_state21;
wire   [31:0] xn1_M_real_dout;
wire    xn1_M_real_empty_n;
reg    xn1_M_real_read;
wire   [0:0] exitcond10_fu_1529_p2;
wire   [31:0] xn1_M_imag_dout;
wire    xn1_M_imag_empty_n;
reg    xn1_M_imag_read;
reg    ap_block_state21;
reg   [31:0] xn1_M_real_read_reg_2518;
reg   [31:0] xn1_M_imag_read_reg_2523;
wire   [31:0] c_5_fu_1545_p2;
reg   [31:0] c_5_reg_2531;
wire    ap_CS_fsm_state25;
wire   [63:0] out1_dout;
wire    out1_empty_n;
reg    out1_read;
wire   [0:0] exitcond11_fu_1540_p2;
reg    ap_block_state25;
wire   [31:0] tmp_74_fu_1551_p1;
reg   [31:0] tmp_74_reg_2536;
wire   [31:0] out1_M_real_load_fu_1555_p1;
wire    ap_CS_fsm_state26;
reg   [31:0] out1_M_imag_load_ne_reg_2546;
wire   [31:0] out1_M_imag_load_fu_1569_p1;
wire    ap_CS_fsm_state27;
wire   [8:0] c_7_fu_1579_p2;
reg   [8:0] c_7_reg_2559;
wire    ap_CS_fsm_state32;
wire   [8:0] r_7_fu_1591_p2;
reg   [8:0] r_7_reg_2567;
wire   [8:0] r_8_fu_1603_p2;
reg   [8:0] r_8_reg_2575;
wire    ap_CS_fsm_state37;
wire   [63:0] out2_dout;
wire    out2_empty_n;
reg    out2_read;
wire   [0:0] exitcond6_fu_1597_p2;
reg    ap_block_state37;
wire   [31:0] tmp_75_fu_1609_p1;
reg   [31:0] tmp_75_reg_2580;
wire   [31:0] out2_M_real_load_fu_1613_p1;
wire    ap_CS_fsm_state38;
reg   [31:0] out2_M_imag_load_ne_reg_2590;
wire   [31:0] out2_M_imag_load_fu_1627_p1;
wire    ap_CS_fsm_state39;
wire   [8:0] r_10_fu_1637_p2;
reg   [8:0] r_10_reg_2603;
wire    ap_CS_fsm_state45;
wire   [8:0] c_6_fu_1649_p2;
reg   [8:0] c_6_reg_2611;
wire    ap_CS_fsm_state46;
wire   [31:0] kernel_M_real_dout;
wire    kernel_M_real_empty_n;
reg    kernel_M_real_read;
wire   [0:0] exitcond5_fu_1643_p2;
wire   [31:0] kernel_M_imag_dout;
wire    kernel_M_imag_empty_n;
reg    kernel_M_imag_read;
reg    ap_block_state46;
reg   [31:0] kernel_M_real_read_reg_2616;
reg   [31:0] kernel_M_imag_read_reg_2621;
wire   [31:0] c_8_fu_1660_p2;
reg   [31:0] c_8_reg_2629;
wire    ap_CS_fsm_state50;
wire   [63:0] out3_dout;
wire    out3_empty_n;
reg    out3_read;
wire   [0:0] exitcond14_fu_1655_p2;
reg    ap_block_state50;
wire   [31:0] tmp_77_fu_1666_p1;
reg   [31:0] tmp_77_reg_2634;
reg   [31:0] out3_M_imag_load_ne_reg_2639;
wire    ap_CS_fsm_state51;
reg    ap_block_state51;
wire   [8:0] c_9_fu_1694_p2;
reg   [8:0] c_9_reg_2647;
wire    ap_CS_fsm_state53;
wire   [8:0] r_9_fu_1706_p2;
reg   [8:0] r_9_reg_2655;
wire   [31:0] r_14_fu_1717_p2;
reg   [31:0] r_14_reg_2663;
wire    ap_CS_fsm_state58;
wire   [63:0] out4_dout;
wire    out4_empty_n;
reg    out4_read;
wire   [0:0] exitcond17_fu_1712_p2;
reg    ap_block_state58;
wire   [31:0] tmp_80_fu_1723_p1;
reg   [31:0] tmp_80_reg_2668;
wire   [31:0] out4_M_real_load_fu_1727_p1;
wire    ap_CS_fsm_state59;
reg   [31:0] out4_M_imag_load_ne_reg_2678;
wire   [31:0] out4_M_imag_load_fu_1741_p1;
wire    ap_CS_fsm_state60;
wire   [31:0] r_13_fu_1750_p2;
reg   [31:0] r_13_reg_2691;
wire    ap_CS_fsm_state78;
wire   [31:0] c_13_fu_1761_p2;
reg   [31:0] c_13_reg_2699;
wire    ap_CS_fsm_state79;
wire   [31:0] xk1_M_real_dout;
wire    xk1_M_real_empty_n;
reg    xk1_M_real_read;
wire   [0:0] exitcond16_fu_1756_p2;
wire   [31:0] xk1_M_imag_dout;
wire    xk1_M_imag_empty_n;
reg    xk1_M_imag_read;
reg    ap_block_state79;
reg   [31:0] xk1_M_real_read_reg_2704;
reg   [31:0] xk1_M_imag_read_reg_2709;
wire   [31:0] c_16_fu_1772_p2;
reg   [31:0] c_16_reg_2717;
wire    ap_CS_fsm_state83;
wire   [63:0] out5_dout;
wire    out5_empty_n;
reg    out5_read;
wire   [0:0] exitcond19_fu_1767_p2;
reg    ap_block_state83;
wire   [31:0] tmp_87_fu_1778_p1;
reg   [31:0] tmp_87_reg_2722;
reg   [31:0] out5_M_imag_load_ne_reg_2727;
wire    ap_CS_fsm_state84;
reg    ap_block_state84;
wire   [31:0] c_12_fu_1805_p2;
reg   [31:0] c_12_reg_2735;
wire    ap_CS_fsm_state86;
wire   [31:0] r_16_fu_1816_p2;
reg   [31:0] r_16_reg_2743;
wire    ap_CS_fsm_state87;
wire   [31:0] middle2_M_real_dout;
wire    middle2_M_real_empty_n;
reg    middle2_M_real_read;
wire   [0:0] exitcond18_fu_1811_p2;
wire   [31:0] middle2_M_imag_dout;
wire    middle2_M_imag_empty_n;
reg    middle2_M_imag_read;
reg    ap_block_state87;
reg   [31:0] middle2_M_real_read_reg_2748;
reg   [31:0] middle2_M_imag_read_reg_2753;
wire   [31:0] r_18_fu_1827_p2;
reg   [31:0] r_18_reg_2761;
wire    ap_CS_fsm_state91;
wire   [63:0] out6_dout;
wire    out6_empty_n;
reg    out6_read;
wire   [0:0] exitcond21_fu_1822_p2;
reg    ap_block_state91;
wire   [31:0] tmp_112_fu_1833_p1;
reg   [31:0] tmp_112_reg_2766;
reg   [31:0] out6_M_imag_load_ne_reg_2771;
wire    ap_CS_fsm_state92;
reg    ap_block_state92;
wire   [0:0] exitcond15_fu_1855_p2;
wire    ap_CS_fsm_state94;
wire   [31:0] r_15_fu_1860_p2;
reg   [31:0] r_15_reg_2780;
wire   [30:0] tmp_71_fu_1866_p2;
wire   [32:0] ret_V_fu_1874_p2;
wire   [61:0] bound_fu_1886_p2;
wire   [31:0] c_17_fu_1897_p2;
reg   [31:0] c_17_reg_2804;
wire    ap_CS_fsm_state95;
wire   [31:0] xk2_M_real_dout;
wire    xk2_M_real_empty_n;
reg    xk2_M_real_read;
wire   [0:0] exitcond20_fu_1892_p2;
wire   [31:0] xk2_M_imag_dout;
wire    xk2_M_imag_empty_n;
reg    xk2_M_imag_read;
reg    ap_block_state95;
reg   [0:0] p_Result_s_reg_2809;
wire   [22:0] tmp_V_8_fu_1925_p1;
reg   [22:0] tmp_V_8_reg_2814;
wire   [0:0] isNeg_fu_1939_p3;
reg   [0:0] isNeg_reg_2819;
wire  signed [8:0] ush_fu_1957_p3;
reg  signed [8:0] ush_reg_2824;
wire   [31:0] p_Val2_108_fu_2035_p3;
reg   [31:0] p_Val2_108_reg_2835;
wire    ap_CS_fsm_state96;
wire   [7:0] tmp_105_fu_2042_p1;
reg   [7:0] tmp_105_reg_2840;
wire   [0:0] exitcond_flatten_fu_2238_p2;
wire    ap_block_state98_pp1_stage0_iter0;
wire   [7:0] res_data_stream_0_V_dout;
wire    res_data_stream_0_V_empty_n;
reg    res_data_stream_0_V_read;
reg    ap_block_state102_pp1_stage0_iter1;
reg    ap_block_state102_io;
reg    ap_block_pp1_stage0_11001;
wire   [61:0] indvar_flatten_next_fu_2243_p2;
reg   [61:0] indvar_flatten_next_reg_2861;
reg    ap_enable_reg_pp1_iter0;
wire   [29:0] c14_mid2_fu_2260_p3;
reg   [29:0] c14_mid2_reg_2866;
wire   [31:0] tmp_87_mid2_v_fu_2285_p3;
reg   [31:0] tmp_87_mid2_v_reg_2871;
wire   [0:0] out_stream_user_V_tm_fu_2325_p2;
reg   [0:0] out_stream_user_V_tm_reg_2876;
wire   [0:0] out_stream_last_V_tm_fu_2336_p2;
reg   [0:0] out_stream_last_V_tm_reg_2881;
reg   [7:0] tmp_95_reg_2886;
reg    ap_block_state99_pp1_stage1_iter0;
wire    ap_block_state103_pp1_stage1_iter1;
reg    ap_block_state103_io;
reg    ap_block_pp1_stage1_11001;
reg   [7:0] tmp_96_reg_2891;
wire    ap_CS_fsm_pp1_stage2;
reg    ap_block_state100_pp1_stage2_iter0;
reg    ap_block_pp1_stage2_11001;
reg   [7:0] tmp_99_reg_2896;
wire    ap_CS_fsm_pp1_stage3;
reg    ap_block_state101_pp1_stage3_iter0;
reg    ap_block_pp1_stage3_11001;
wire   [29:0] c_1_fu_2342_p2;
reg   [29:0] c_1_reg_2901;
wire   [31:0] p_Result_29_fu_2347_p5;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg    ap_block_state8_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_subdone;
wire    ap_CS_fsm_pp0_stage3;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state98;
reg    ap_block_pp1_stage3_subdone;
reg    ap_block_pp1_stage1_subdone;
wire    grp_matrix_modulus_fu_1143_ap_start;
wire    grp_matrix_modulus_fu_1143_ap_done;
wire    grp_matrix_modulus_fu_1143_ap_idle;
wire    grp_matrix_modulus_fu_1143_ap_ready;
wire    grp_matrix_modulus_fu_1143_fft_kernel_M_real_read;
wire    grp_matrix_modulus_fu_1143_fft_kernel_M_imag_read;
wire   [31:0] grp_matrix_modulus_fu_1143_fft_kernel_modu_M_r_din;
wire    grp_matrix_modulus_fu_1143_fft_kernel_modu_M_r_write;
wire   [31:0] grp_matrix_modulus_fu_1143_fft_kernel_modu_M_i_din;
wire    grp_matrix_modulus_fu_1143_fft_kernel_modu_M_i_write;
wire    grp_fft_top_fu_1179_ap_start;
wire    grp_fft_top_fu_1179_ap_done;
wire    grp_fft_top_fu_1179_ap_idle;
wire    grp_fft_top_fu_1179_ap_ready;
reg    grp_fft_top_fu_1179_direction;
wire    grp_fft_top_fu_1179_direction_ap_ack;
reg   [63:0] grp_fft_top_fu_1179_in_r_dout;
reg    grp_fft_top_fu_1179_in_r_empty_n;
wire    grp_fft_top_fu_1179_in_r_read;
wire   [63:0] grp_fft_top_fu_1179_out_r_din;
reg    grp_fft_top_fu_1179_out_r_full_n;
wire    grp_fft_top_fu_1179_out_r_write;
wire    grp_matrix_div_1_fu_1204_ap_start;
wire    grp_matrix_div_1_fu_1204_ap_done;
wire    grp_matrix_div_1_fu_1204_ap_idle;
wire    grp_matrix_div_1_fu_1204_ap_ready;
wire    grp_matrix_div_1_fu_1204_fft_kernel_modu2_M_s_read;
wire    grp_matrix_div_1_fu_1204_fft_kernel_modu2_M_1_read;
wire    grp_matrix_div_1_fu_1204_G1_M_real_read;
wire   [31:0] grp_matrix_div_1_fu_1204_G1_M_real_din;
wire    grp_matrix_div_1_fu_1204_G1_M_real_write;
wire    grp_matrix_div_1_fu_1204_G1_M_imag_read;
wire   [31:0] grp_matrix_div_1_fu_1204_G1_M_imag_din;
wire    grp_matrix_div_1_fu_1204_G1_M_imag_write;
wire    grp_matrix_div_fu_1216_ap_start;
wire    grp_matrix_div_fu_1216_ap_done;
wire    grp_matrix_div_fu_1216_ap_idle;
wire    grp_matrix_div_fu_1216_ap_ready;
wire    grp_matrix_div_fu_1216_G1_M_real_read;
wire    grp_matrix_div_fu_1216_G1_M_imag_read;
wire    grp_matrix_div_fu_1216_fft_kernel_M_real_read;
wire    grp_matrix_div_fu_1216_fft_kernel_M_imag_read;
wire   [31:0] grp_matrix_div_fu_1216_G_M_real_din;
wire    grp_matrix_div_fu_1216_G_M_real_write;
wire   [31:0] grp_matrix_div_fu_1216_G_M_imag_din;
wire    grp_matrix_div_fu_1216_G_M_imag_write;
wire    grp_KernelMaker_fu_1232_ap_start;
wire    grp_KernelMaker_fu_1232_ap_done;
wire    grp_KernelMaker_fu_1232_ap_idle;
wire    grp_KernelMaker_fu_1232_ap_ready;
wire   [31:0] grp_KernelMaker_fu_1232_kernel_M_real_din;
wire    grp_KernelMaker_fu_1232_kernel_M_real_write;
wire   [31:0] grp_KernelMaker_fu_1232_kernel_M_imag_din;
wire    grp_KernelMaker_fu_1232_kernel_M_imag_write;
wire    grp_InnerProd_1_fu_1240_ap_start;
wire    grp_InnerProd_1_fu_1240_ap_done;
wire    grp_InnerProd_1_fu_1240_ap_idle;
wire    grp_InnerProd_1_fu_1240_ap_ready;
wire    grp_InnerProd_1_fu_1240_fft_kernel_modu_M_r_read;
wire    grp_InnerProd_1_fu_1240_fft_kernel_modu_M_i_read;
wire   [31:0] grp_InnerProd_1_fu_1240_fft_kernel_modu2_M_s_din;
wire    grp_InnerProd_1_fu_1240_fft_kernel_modu2_M_s_write;
wire   [31:0] grp_InnerProd_1_fu_1240_fft_kernel_modu2_M_1_din;
wire    grp_InnerProd_1_fu_1240_fft_kernel_modu2_M_1_write;
wire    grp_InnerProd381_fu_1252_ap_start;
wire    grp_InnerProd381_fu_1252_ap_done;
wire    grp_InnerProd381_fu_1252_ap_idle;
wire    grp_InnerProd381_fu_1252_ap_ready;
wire    grp_InnerProd381_fu_1252_gauss_blur_M_real_read;
wire    grp_InnerProd381_fu_1252_gauss_blur_M_imag_read;
wire    grp_InnerProd381_fu_1252_G_M_real_read;
wire    grp_InnerProd381_fu_1252_G_M_imag_read;
wire   [31:0] grp_InnerProd381_fu_1252_xk1_M_real_din;
wire    grp_InnerProd381_fu_1252_xk1_M_real_write;
wire   [31:0] grp_InnerProd381_fu_1252_xk1_M_imag_din;
wire    grp_InnerProd381_fu_1252_xk1_M_imag_write;
wire    grp_InnerProd382_fu_1268_ap_start;
wire    grp_InnerProd382_fu_1268_ap_done;
wire    grp_InnerProd382_fu_1268_ap_idle;
wire    grp_InnerProd382_fu_1268_ap_ready;
wire   [31:0] grp_InnerProd382_fu_1268_gauss_blur_M_real_din;
wire    grp_InnerProd382_fu_1268_gauss_blur_M_real_write;
wire   [31:0] grp_InnerProd382_fu_1268_gauss_blur_M_imag_din;
wire    grp_InnerProd382_fu_1268_gauss_blur_M_imag_write;
wire    grp_InnerProd382_fu_1268_xk1_M_real_read;
wire    grp_InnerProd382_fu_1268_xk1_M_imag_read;
wire    grp_InnerProd382_fu_1268_fft_kernel_M_real_read;
wire    grp_InnerProd382_fu_1268_fft_kernel_M_imag_read;
wire    grp_matrix_plus_SNR_fu_1284_ap_start;
wire    grp_matrix_plus_SNR_fu_1284_ap_done;
wire    grp_matrix_plus_SNR_fu_1284_ap_idle;
wire    grp_matrix_plus_SNR_fu_1284_ap_ready;
wire    grp_matrix_plus_SNR_fu_1284_fft_kernel_modu2_M_s_read;
wire   [31:0] grp_matrix_plus_SNR_fu_1284_G1_M_real_din;
wire    grp_matrix_plus_SNR_fu_1284_G1_M_real_write;
wire    grp_matrix_plus_SNR_fu_1284_fft_kernel_modu2_M_1_read;
wire   [31:0] grp_matrix_plus_SNR_fu_1284_G1_M_imag_din;
wire    grp_matrix_plus_SNR_fu_1284_G1_M_imag_write;
reg    grp_real_1_fu_1296_ap_start;
wire    grp_real_1_fu_1296_ap_done;
wire    grp_real_1_fu_1296_ap_idle;
wire    grp_real_1_fu_1296_ap_ready;
reg   [63:0] grp_real_1_fu_1296_complex_float_s_dout;
reg    grp_real_1_fu_1296_complex_float_s_empty_n;
wire    grp_real_1_fu_1296_complex_float_s_read;
wire   [63:0] grp_real_1_fu_1296_complex_float_s_din;
reg    grp_real_1_fu_1296_complex_float_s_full_n;
wire    grp_real_1_fu_1296_complex_float_s_write;
reg   [31:0] grp_real_1_fu_1296_p_val;
wire    grp_real_1_fu_1296_complex_float_s_i_blk_n;
wire    grp_real_1_fu_1296_complex_float_s_o_blk_n;
reg    grp_imag_1_fu_1308_ap_start;
wire    grp_imag_1_fu_1308_ap_done;
wire    grp_imag_1_fu_1308_ap_idle;
wire    grp_imag_1_fu_1308_ap_ready;
reg   [63:0] grp_imag_1_fu_1308_complex_float_s_dout;
reg    grp_imag_1_fu_1308_complex_float_s_empty_n;
wire    grp_imag_1_fu_1308_complex_float_s_read;
wire   [63:0] grp_imag_1_fu_1308_complex_float_s_din;
reg    grp_imag_1_fu_1308_complex_float_s_full_n;
wire    grp_imag_1_fu_1308_complex_float_s_write;
reg   [31:0] grp_imag_1_fu_1308_p_val;
wire    grp_imag_1_fu_1308_complex_float_s_i_blk_n;
wire    grp_imag_1_fu_1308_complex_float_s_o_blk_n;
reg    grp_real379_fu_1320_ap_start;
wire    grp_real379_fu_1320_ap_done;
wire    grp_real379_fu_1320_ap_idle;
wire    grp_real379_fu_1320_ap_ready;
wire   [31:0] grp_real379_fu_1320_complex_float_M_real_din;
reg    grp_real379_fu_1320_complex_float_M_real_full_n;
wire    grp_real379_fu_1320_complex_float_M_real_write;
reg   [31:0] grp_real379_fu_1320_p_val;
reg    grp_imag380_fu_1332_ap_start;
wire    grp_imag380_fu_1332_ap_done;
wire    grp_imag380_fu_1332_ap_idle;
wire    grp_imag380_fu_1332_ap_ready;
wire   [31:0] grp_imag380_fu_1332_complex_float_M_imag_din;
reg    grp_imag380_fu_1332_complex_float_M_imag_full_n;
wire    grp_imag380_fu_1332_complex_float_M_imag_write;
reg   [31:0] grp_imag380_fu_1332_p_val;
wire    grp_imag380_fu_1332_complex_float_M_imag_blk_n;
reg   [7:0] p_rec1_reg_823;
wire   [0:0] tmp_s_fu_1380_p2;
reg   [7:0] p_rec2_reg_834;
reg   [7:0] tmp_52_reg_846;
reg   [30:0] ap_phi_mux_r_phi_fu_861_p4;
wire    ap_block_pp0_stage0;
reg   [31:0] i_op_assign_reg_868;
wire    ap_CS_fsm_state10;
reg   [31:0] i_op_assign_2_reg_879;
wire    ap_CS_fsm_state19;
reg    ap_block_state19;
wire   [0:0] exitcond7_fu_1492_p2;
reg   [31:0] i_op_assign_3_reg_890;
reg   [31:0] i_op_assign_4_reg_901;
wire    ap_CS_fsm_state23;
wire   [0:0] exitcond8_fu_1518_p2;
reg   [31:0] i_op_assign_5_reg_912;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state31;
reg   [8:0] c5_reg_923;
reg   [8:0] r6_reg_934;
wire    ap_CS_fsm_state35;
wire   [0:0] exitcond1_fu_1573_p2;
reg   [8:0] r7_reg_945;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state43;
reg   [8:0] r8_reg_956;
wire    ap_CS_fsm_state44;
reg   [8:0] c9_reg_967;
wire    ap_CS_fsm_state48;
wire   [0:0] exitcond2_fu_1631_p2;
reg   [31:0] i_op_assign_6_reg_978;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state52;
reg   [8:0] c6_reg_989;
reg   [8:0] r9_reg_1000;
wire    ap_CS_fsm_state56;
wire   [0:0] exitcond4_fu_1688_p2;
reg   [31:0] i_op_assign_7_reg_1011;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state64;
reg   [31:0] i_op_assign_8_reg_1022;
wire    ap_CS_fsm_state77;
reg   [31:0] i_op_assign_9_reg_1033;
wire    ap_CS_fsm_state81;
wire   [0:0] exitcond12_fu_1745_p2;
reg   [31:0] i_op_assign_10_reg_1044;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state85;
reg   [31:0] i_op_assign_s_reg_1055;
reg   [31:0] i_op_assign_11_reg_1066;
wire    ap_CS_fsm_state89;
wire   [0:0] exitcond13_fu_1800_p2;
reg   [31:0] i_op_assign_13_reg_1077;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state93;
reg   [31:0] i_op_assign_1_reg_1088;
reg   [31:0] i_op_assign_14_reg_1099;
wire    ap_CS_fsm_state97;
wire   [7:0] res_data_stream_0_V_din;
wire    res_data_stream_0_V_full_n;
reg    res_data_stream_0_V_write;
reg   [61:0] ap_phi_mux_indvar_flatten_phi_fu_1114_p4;
reg   [31:0] ap_phi_mux_i_op_assign_12_phi_fu_1125_p4;
reg   [29:0] ap_phi_mux_c12_phi_fu_1136_p4;
reg    grp_matrix_modulus_fu_1143_ap_start_reg;
wire    ap_CS_fsm_state66;
wire   [31:0] fft_kernel_M_real_dout;
wire    fft_kernel_M_real_empty_n;
reg    fft_kernel_M_real_read;
wire    ap_CS_fsm_state67;
wire   [31:0] fft_kernel_M_imag_dout;
wire    fft_kernel_M_imag_empty_n;
reg    fft_kernel_M_imag_read;
wire    fft_kernel_modu_M_r_full_n;
reg    fft_kernel_modu_M_r_write;
wire    fft_kernel_modu_M_i_full_n;
reg    fft_kernel_modu_M_i_write;
reg    grp_fft_top_fu_1179_ap_start_reg;
reg    ap_block_state21_ignore_call0;
reg    ap_block_state33_ignore_call0;
reg    ap_block_state46_ignore_call0;
reg    ap_block_state54_ignore_call0;
reg    ap_block_state79_ignore_call0;
reg    ap_block_state87_ignore_call0;
wire   [63:0] in1_dout;
wire    in1_empty_n;
reg    in1_read;
wire   [63:0] in2_dout;
wire    in2_empty_n;
reg    in2_read;
wire   [63:0] in3_dout;
wire    in3_empty_n;
reg    in3_read;
wire   [63:0] in4_dout;
wire    in4_empty_n;
reg    in4_read;
wire   [63:0] in5_dout;
wire    in5_empty_n;
reg    in5_read;
wire   [63:0] in6_dout;
wire    in6_empty_n;
reg    in6_read;
wire   [63:0] out1_din;
wire    out1_full_n;
reg    out1_write;
wire   [63:0] out2_din;
wire    out2_full_n;
reg    out2_write;
wire   [63:0] out3_din;
wire    out3_full_n;
reg    out3_write;
wire   [63:0] out4_din;
wire    out4_full_n;
reg    out4_write;
wire   [63:0] out5_din;
wire    out5_full_n;
reg    out5_write;
wire   [63:0] out6_din;
wire    out6_full_n;
reg    out6_write;
reg    grp_matrix_div_1_fu_1204_ap_start_reg;
wire    ap_CS_fsm_state72;
wire   [31:0] fft_kernel_modu2_M_s_dout;
wire    fft_kernel_modu2_M_s_empty_n;
reg    fft_kernel_modu2_M_s_read;
wire    ap_CS_fsm_state73;
wire   [31:0] fft_kernel_modu2_M_1_dout;
wire    fft_kernel_modu2_M_1_empty_n;
reg    fft_kernel_modu2_M_1_read;
wire   [31:0] G1_M_real_dout;
wire    G1_M_real_empty_n;
reg    G1_M_real_read;
reg   [31:0] G1_M_real_din;
wire    G1_M_real_full_n;
reg    G1_M_real_write;
wire   [31:0] G1_M_imag_dout;
wire    G1_M_imag_empty_n;
reg    G1_M_imag_read;
reg   [31:0] G1_M_imag_din;
wire    G1_M_imag_full_n;
reg    G1_M_imag_write;
reg    grp_matrix_div_fu_1216_ap_start_reg;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state75;
wire    G_M_real_full_n;
reg    G_M_real_write;
wire    G_M_imag_full_n;
reg    G_M_imag_write;
reg    grp_KernelMaker_fu_1232_ap_start_reg;
reg    grp_InnerProd_1_fu_1240_ap_start_reg;
wire    ap_CS_fsm_state68;
wire   [31:0] fft_kernel_modu_M_r_dout;
wire    fft_kernel_modu_M_r_empty_n;
reg    fft_kernel_modu_M_r_read;
wire    ap_CS_fsm_state69;
wire   [31:0] fft_kernel_modu_M_i_dout;
wire    fft_kernel_modu_M_i_empty_n;
reg    fft_kernel_modu_M_i_read;
wire   [31:0] fft_kernel_modu2_M_s_din;
wire    fft_kernel_modu2_M_s_full_n;
reg    fft_kernel_modu2_M_s_write;
wire   [31:0] fft_kernel_modu2_M_1_din;
wire    fft_kernel_modu2_M_1_full_n;
reg    fft_kernel_modu2_M_1_write;
reg    grp_InnerProd381_fu_1252_ap_start_reg;
wire    ap_CS_fsm_state76;
wire   [31:0] gauss_blur_M_real_dout;
wire    gauss_blur_M_real_empty_n;
reg    gauss_blur_M_real_read;
wire   [31:0] gauss_blur_M_imag_dout;
wire    gauss_blur_M_imag_empty_n;
reg    gauss_blur_M_imag_read;
wire   [31:0] G_M_real_dout;
wire    G_M_real_empty_n;
reg    G_M_real_read;
wire   [31:0] G_M_imag_dout;
wire    G_M_imag_empty_n;
reg    G_M_imag_read;
reg   [31:0] xk1_M_real_din;
wire    xk1_M_real_full_n;
reg    xk1_M_real_write;
reg   [31:0] xk1_M_imag_din;
wire    xk1_M_imag_full_n;
reg    xk1_M_imag_write;
reg    grp_InnerProd382_fu_1268_ap_start_reg;
wire    ap_CS_fsm_state65;
wire    gauss_blur_M_real_full_n;
reg    gauss_blur_M_real_write;
wire    gauss_blur_M_imag_full_n;
reg    gauss_blur_M_imag_write;
reg    grp_matrix_plus_SNR_fu_1284_ap_start_reg;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state88;
reg   [63:0] in1_din;
wire    in1_full_n;
reg    in1_write;
reg   [63:0] in2_din;
wire    in2_full_n;
reg    in2_write;
reg   [63:0] in3_din;
wire    in3_full_n;
reg    in3_write;
reg   [63:0] in4_din;
wire    in4_full_n;
reg    in4_write;
reg   [63:0] in5_din;
wire    in5_full_n;
reg    in5_write;
reg   [63:0] in6_din;
wire    in6_full_n;
reg    in6_write;
wire   [31:0] xn1_M_real_din;
wire    xn1_M_real_full_n;
reg    xn1_M_real_write;
wire   [31:0] middle_M_real_din;
wire    middle_M_real_full_n;
reg    middle_M_real_write;
wire   [31:0] fft_kernel_M_real_din;
wire    fft_kernel_M_real_full_n;
reg    fft_kernel_M_real_write;
wire   [31:0] middle2_M_real_din;
wire    middle2_M_real_full_n;
reg    middle2_M_real_write;
wire   [31:0] xk2_M_real_din;
wire    xk2_M_real_full_n;
reg    xk2_M_real_write;
wire   [31:0] out3_M_real_load_fu_1670_p1;
wire   [31:0] out5_M_real_load_fu_1782_p1;
wire   [31:0] out6_M_real_load_fu_1837_p1;
wire   [31:0] xn1_M_imag_din;
wire    xn1_M_imag_full_n;
reg    xn1_M_imag_write;
wire   [31:0] middle_M_imag_din;
wire    middle_M_imag_full_n;
reg    middle_M_imag_write;
wire   [31:0] fft_kernel_M_imag_din;
wire    fft_kernel_M_imag_full_n;
reg    fft_kernel_M_imag_write;
wire   [31:0] middle2_M_imag_din;
wire    middle2_M_imag_full_n;
reg    middle2_M_imag_write;
wire   [31:0] xk2_M_imag_din;
wire    xk2_M_imag_full_n;
reg    xk2_M_imag_write;
wire   [31:0] out3_M_imag_load_fu_1684_p1;
wire   [31:0] out5_M_imag_load_fu_1796_p1;
wire   [31:0] out6_M_imag_load_fu_1851_p1;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_block_state7_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_pp0_stage3_11001;
wire   [7:0] tmp_61_fu_1457_p1;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage2_01001;
reg    ap_block_pp0_stage3_01001;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp1_stage0_01001;
reg   [31:0] grp_fu_1345_p0;
reg   [31:0] grp_fu_1345_p1;
wire   [31:0] grp_fu_1351_p0;
wire   [29:0] packets_fu_1433_p0;
wire  signed [31:0] packets_fu_1433_p1;
wire   [31:0] r_cast_fu_1438_p1;
wire  signed [31:0] exitcond7_fu_1492_p1;
wire  signed [31:0] exitcond8_fu_1518_p1;
wire  signed [31:0] exitcond17_fu_1712_p1;
wire  signed [31:0] exitcond12_fu_1745_p1;
wire  signed [31:0] exitcond18_fu_1811_p1;
wire  signed [31:0] exitcond21_fu_1822_p1;
wire  signed [31:0] exitcond15_fu_1855_p1;
wire  signed [31:0] lhs_V_cast_fu_1871_p0;
wire   [32:0] lhs_V_cast_fu_1871_p1;
wire  signed [31:0] cast_fu_1880_p0;
wire   [31:0] bound_fu_1886_p0;
wire   [29:0] bound_fu_1886_p1;
wire   [31:0] p_Val2_101_fu_1903_p1;
wire   [7:0] tmp_V_fu_1915_p4;
wire   [8:0] tmp_i_i_i_i_cast4_fu_1929_p1;
wire   [8:0] sh_assign_fu_1933_p2;
wire   [7:0] tmp_i_i_i_fu_1947_p2;
wire  signed [8:0] tmp_i_i_i_cast_fu_1953_p1;
wire   [24:0] mantissa_V_fu_1965_p4;
wire  signed [31:0] sh_assign_16_cast_fu_1978_p1;
wire  signed [24:0] sh_assign_16_cast_ca_fu_1981_p1;
wire   [78:0] mantissa_V_7_cast5_fu_1974_p1;
wire   [78:0] tmp_i_i_i_438_fu_1984_p1;
wire   [24:0] r_V_fu_1988_p2;
wire   [0:0] tmp_104_fu_2000_p3;
wire   [78:0] r_V_42_fu_1994_p2;
wire   [31:0] tmp_93_fu_2008_p1;
wire   [31:0] tmp_94_fu_2012_p4;
wire   [31:0] p_Val2_107_fu_2022_p3;
wire   [31:0] result_V_4_fu_2029_p2;
wire   [0:0] abscond_fu_2175_p2;
wire   [7:0] tmp_76_fu_2180_p2;
wire   [32:0] tmp_127_cast_fu_2229_p1;
wire   [0:0] tmp_90_fu_2255_p2;
wire   [31:0] r_1_fu_2249_p2;
wire   [32:0] tmp_127_cast_mid1_fu_2268_p1;
wire   [0:0] tmp_72_fu_2233_p2;
wire   [0:0] tmp_74_mid1_fu_2272_p2;
wire   [29:0] tmp_92_fu_2293_p1;
wire   [1:0] tmp_88_fu_2307_p4;
wire   [29:0] tmp_86_fu_2301_p2;
wire   [31:0] tmp_89_fu_2317_p3;
wire   [30:0] c14_cast_mid2_cast_fu_2297_p1;
wire   [0:0] tmp_74_mid2_fu_2277_p3;
wire   [0:0] tmp_91_fu_2331_p2;
wire    ap_block_pp1_stage3;
reg    grp_fu_1345_ce;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state104;
reg    ap_block_state104;
reg   [100:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp1_stage2_subdone;
wire    G1_M_imag_fifo_U_ap_dummy_ce;
wire    G1_M_real_fifo_U_ap_dummy_ce;
wire    fft_kernel_M_imag_fifo_U_ap_dummy_ce;
wire    fft_kernel_M_real_fifo_U_ap_dummy_ce;
wire    fft_kernel_modu2_M_1_fifo_U_ap_dummy_ce;
wire    fft_kernel_modu2_M_s_fifo_U_ap_dummy_ce;
wire    in1_fifo_U_ap_dummy_ce;
wire    in2_fifo_U_ap_dummy_ce;
wire    in3_fifo_U_ap_dummy_ce;
wire    in4_fifo_U_ap_dummy_ce;
wire    in5_fifo_U_ap_dummy_ce;
wire    in6_fifo_U_ap_dummy_ce;
wire    kernel_M_imag_fifo_U_ap_dummy_ce;
wire    kernel_M_real_fifo_U_ap_dummy_ce;
wire    middle_M_imag_fifo_U_ap_dummy_ce;
wire    middle_M_real_fifo_U_ap_dummy_ce;
wire    middle2_M_imag_fifo_U_ap_dummy_ce;
wire    middle2_M_real_fifo_U_ap_dummy_ce;
wire    out1_fifo_U_ap_dummy_ce;
wire    out2_fifo_U_ap_dummy_ce;
wire    out3_fifo_U_ap_dummy_ce;
wire    out4_fifo_U_ap_dummy_ce;
wire    out5_fifo_U_ap_dummy_ce;
wire    out6_fifo_U_ap_dummy_ce;
wire    xk1_M_imag_fifo_U_ap_dummy_ce;
wire    xk1_M_real_fifo_U_ap_dummy_ce;
wire    xk2_M_imag_fifo_U_ap_dummy_ce;
wire    xk2_M_real_fifo_U_ap_dummy_ce;
wire    xn1_M_imag_fifo_U_ap_dummy_ce;
wire    xn1_M_real_fifo_U_ap_dummy_ce;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [61:0] bound_fu_1886_p00;
wire   [61:0] bound_fu_1886_p10;
wire   [31:0] packets_fu_1433_p00;
reg    ap_condition_2468;
reg    ap_condition_2473;
reg    ap_condition_2478;
reg    ap_condition_2483;

// power-on initialization
initial begin
#0 ap_CS_fsm = 101'd1;
#0 INPUT_data_V_0_sel_rd = 1'b0;
#0 INPUT_data_V_0_sel_wr = 1'b0;
#0 INPUT_data_V_0_state = 2'd0;
#0 INPUT_last_V_0_state = 2'd0;
#0 OUTPUT_data_V_1_sel_rd = 1'b0;
#0 OUTPUT_data_V_1_sel_wr = 1'b0;
#0 OUTPUT_data_V_1_state = 2'd0;
#0 OUTPUT_user_V_1_sel_rd = 1'b0;
#0 OUTPUT_user_V_1_sel_wr = 1'b0;
#0 OUTPUT_user_V_1_state = 2'd0;
#0 OUTPUT_last_V_1_sel_rd = 1'b0;
#0 OUTPUT_last_V_1_sel_wr = 1'b0;
#0 OUTPUT_last_V_1_state = 2'd0;
#0 guard_variable_for_W = 1'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 grp_matrix_modulus_fu_1143_ap_start_reg = 1'b0;
#0 grp_fft_top_fu_1179_ap_start_reg = 1'b0;
#0 grp_matrix_div_1_fu_1204_ap_start_reg = 1'b0;
#0 grp_matrix_div_fu_1216_ap_start_reg = 1'b0;
#0 grp_KernelMaker_fu_1232_ap_start_reg = 1'b0;
#0 grp_InnerProd_1_fu_1240_ap_start_reg = 1'b0;
#0 grp_InnerProd381_fu_1252_ap_start_reg = 1'b0;
#0 grp_InnerProd382_fu_1268_ap_start_reg = 1'b0;
#0 grp_matrix_plus_SNR_fu_1284_ap_start_reg = 1'b0;
end

WienerDeblur_CONTROL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_BUS_DATA_WIDTH ))
WienerDeblur_CONTROL_BUS_s_axi_U(
    .AWVALID(s_axi_CONTROL_BUS_AWVALID),
    .AWREADY(s_axi_CONTROL_BUS_AWREADY),
    .AWADDR(s_axi_CONTROL_BUS_AWADDR),
    .WVALID(s_axi_CONTROL_BUS_WVALID),
    .WREADY(s_axi_CONTROL_BUS_WREADY),
    .WDATA(s_axi_CONTROL_BUS_WDATA),
    .WSTRB(s_axi_CONTROL_BUS_WSTRB),
    .ARVALID(s_axi_CONTROL_BUS_ARVALID),
    .ARREADY(s_axi_CONTROL_BUS_ARREADY),
    .ARADDR(s_axi_CONTROL_BUS_ARADDR),
    .RVALID(s_axi_CONTROL_BUS_RVALID),
    .RREADY(s_axi_CONTROL_BUS_RREADY),
    .RDATA(s_axi_CONTROL_BUS_RDATA),
    .RRESP(s_axi_CONTROL_BUS_RRESP),
    .BVALID(s_axi_CONTROL_BUS_BVALID),
    .BREADY(s_axi_CONTROL_BUS_BREADY),
    .BRESP(s_axi_CONTROL_BUS_BRESP),
    .ACLK(AXI_LITE_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .rows_V(rows_V),
    .cols_V(cols_V),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .clk(ap_clk),
    .rst(ap_rst_n_AXI_LITE_clk_inv)
);

matrix_modulus grp_matrix_modulus_fu_1143(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_matrix_modulus_fu_1143_ap_start),
    .ap_done(grp_matrix_modulus_fu_1143_ap_done),
    .ap_idle(grp_matrix_modulus_fu_1143_ap_idle),
    .ap_ready(grp_matrix_modulus_fu_1143_ap_ready),
    .fft_kernel_M_real_dout(fft_kernel_M_real_dout),
    .fft_kernel_M_real_empty_n(fft_kernel_M_real_empty_n),
    .fft_kernel_M_real_read(grp_matrix_modulus_fu_1143_fft_kernel_M_real_read),
    .fft_kernel_M_imag_dout(fft_kernel_M_imag_dout),
    .fft_kernel_M_imag_empty_n(fft_kernel_M_imag_empty_n),
    .fft_kernel_M_imag_read(grp_matrix_modulus_fu_1143_fft_kernel_M_imag_read),
    .fft_kernel_modu_M_r_din(grp_matrix_modulus_fu_1143_fft_kernel_modu_M_r_din),
    .fft_kernel_modu_M_r_full_n(fft_kernel_modu_M_r_full_n),
    .fft_kernel_modu_M_r_write(grp_matrix_modulus_fu_1143_fft_kernel_modu_M_r_write),
    .fft_kernel_modu_M_i_din(grp_matrix_modulus_fu_1143_fft_kernel_modu_M_i_din),
    .fft_kernel_modu_M_i_full_n(fft_kernel_modu_M_i_full_n),
    .fft_kernel_modu_M_i_write(grp_matrix_modulus_fu_1143_fft_kernel_modu_M_i_write)
);

fft_top grp_fft_top_fu_1179(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_fft_top_fu_1179_ap_start),
    .ap_done(grp_fft_top_fu_1179_ap_done),
    .ap_idle(grp_fft_top_fu_1179_ap_idle),
    .ap_ready(grp_fft_top_fu_1179_ap_ready),
    .direction(grp_fft_top_fu_1179_direction),
    .direction_ap_vld(1'b1),
    .direction_ap_ack(grp_fft_top_fu_1179_direction_ap_ack),
    .in_r_dout(grp_fft_top_fu_1179_in_r_dout),
    .in_r_empty_n(grp_fft_top_fu_1179_in_r_empty_n),
    .in_r_read(grp_fft_top_fu_1179_in_r_read),
    .out_r_din(grp_fft_top_fu_1179_out_r_din),
    .out_r_full_n(grp_fft_top_fu_1179_out_r_full_n),
    .out_r_write(grp_fft_top_fu_1179_out_r_write)
);

matrix_div_1 grp_matrix_div_1_fu_1204(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_matrix_div_1_fu_1204_ap_start),
    .ap_done(grp_matrix_div_1_fu_1204_ap_done),
    .ap_idle(grp_matrix_div_1_fu_1204_ap_idle),
    .ap_ready(grp_matrix_div_1_fu_1204_ap_ready),
    .fft_kernel_modu2_M_s_dout(fft_kernel_modu2_M_s_dout),
    .fft_kernel_modu2_M_s_empty_n(fft_kernel_modu2_M_s_empty_n),
    .fft_kernel_modu2_M_s_read(grp_matrix_div_1_fu_1204_fft_kernel_modu2_M_s_read),
    .fft_kernel_modu2_M_1_dout(fft_kernel_modu2_M_1_dout),
    .fft_kernel_modu2_M_1_empty_n(fft_kernel_modu2_M_1_empty_n),
    .fft_kernel_modu2_M_1_read(grp_matrix_div_1_fu_1204_fft_kernel_modu2_M_1_read),
    .G1_M_real_dout(G1_M_real_dout),
    .G1_M_real_empty_n(G1_M_real_empty_n),
    .G1_M_real_read(grp_matrix_div_1_fu_1204_G1_M_real_read),
    .G1_M_real_din(grp_matrix_div_1_fu_1204_G1_M_real_din),
    .G1_M_real_full_n(G1_M_real_full_n),
    .G1_M_real_write(grp_matrix_div_1_fu_1204_G1_M_real_write),
    .G1_M_imag_dout(G1_M_imag_dout),
    .G1_M_imag_empty_n(G1_M_imag_empty_n),
    .G1_M_imag_read(grp_matrix_div_1_fu_1204_G1_M_imag_read),
    .G1_M_imag_din(grp_matrix_div_1_fu_1204_G1_M_imag_din),
    .G1_M_imag_full_n(G1_M_imag_full_n),
    .G1_M_imag_write(grp_matrix_div_1_fu_1204_G1_M_imag_write)
);

matrix_div grp_matrix_div_fu_1216(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_matrix_div_fu_1216_ap_start),
    .ap_done(grp_matrix_div_fu_1216_ap_done),
    .ap_idle(grp_matrix_div_fu_1216_ap_idle),
    .ap_ready(grp_matrix_div_fu_1216_ap_ready),
    .G1_M_real_dout(G1_M_real_dout),
    .G1_M_real_empty_n(G1_M_real_empty_n),
    .G1_M_real_read(grp_matrix_div_fu_1216_G1_M_real_read),
    .G1_M_imag_dout(G1_M_imag_dout),
    .G1_M_imag_empty_n(G1_M_imag_empty_n),
    .G1_M_imag_read(grp_matrix_div_fu_1216_G1_M_imag_read),
    .fft_kernel_M_real_dout(fft_kernel_M_real_dout),
    .fft_kernel_M_real_empty_n(fft_kernel_M_real_empty_n),
    .fft_kernel_M_real_read(grp_matrix_div_fu_1216_fft_kernel_M_real_read),
    .fft_kernel_M_imag_dout(fft_kernel_M_imag_dout),
    .fft_kernel_M_imag_empty_n(fft_kernel_M_imag_empty_n),
    .fft_kernel_M_imag_read(grp_matrix_div_fu_1216_fft_kernel_M_imag_read),
    .G_M_real_din(grp_matrix_div_fu_1216_G_M_real_din),
    .G_M_real_full_n(G_M_real_full_n),
    .G_M_real_write(grp_matrix_div_fu_1216_G_M_real_write),
    .G_M_imag_din(grp_matrix_div_fu_1216_G_M_imag_din),
    .G_M_imag_full_n(G_M_imag_full_n),
    .G_M_imag_write(grp_matrix_div_fu_1216_G_M_imag_write)
);

KernelMaker grp_KernelMaker_fu_1232(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_KernelMaker_fu_1232_ap_start),
    .ap_done(grp_KernelMaker_fu_1232_ap_done),
    .ap_idle(grp_KernelMaker_fu_1232_ap_idle),
    .ap_ready(grp_KernelMaker_fu_1232_ap_ready),
    .kernel_M_real_din(grp_KernelMaker_fu_1232_kernel_M_real_din),
    .kernel_M_real_full_n(kernel_M_real_full_n),
    .kernel_M_real_write(grp_KernelMaker_fu_1232_kernel_M_real_write),
    .kernel_M_imag_din(grp_KernelMaker_fu_1232_kernel_M_imag_din),
    .kernel_M_imag_full_n(kernel_M_imag_full_n),
    .kernel_M_imag_write(grp_KernelMaker_fu_1232_kernel_M_imag_write)
);

InnerProd_1 grp_InnerProd_1_fu_1240(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_InnerProd_1_fu_1240_ap_start),
    .ap_done(grp_InnerProd_1_fu_1240_ap_done),
    .ap_idle(grp_InnerProd_1_fu_1240_ap_idle),
    .ap_ready(grp_InnerProd_1_fu_1240_ap_ready),
    .fft_kernel_modu_M_r_dout(fft_kernel_modu_M_r_dout),
    .fft_kernel_modu_M_r_empty_n(fft_kernel_modu_M_r_empty_n),
    .fft_kernel_modu_M_r_read(grp_InnerProd_1_fu_1240_fft_kernel_modu_M_r_read),
    .fft_kernel_modu_M_i_dout(fft_kernel_modu_M_i_dout),
    .fft_kernel_modu_M_i_empty_n(fft_kernel_modu_M_i_empty_n),
    .fft_kernel_modu_M_i_read(grp_InnerProd_1_fu_1240_fft_kernel_modu_M_i_read),
    .fft_kernel_modu2_M_s_din(grp_InnerProd_1_fu_1240_fft_kernel_modu2_M_s_din),
    .fft_kernel_modu2_M_s_full_n(fft_kernel_modu2_M_s_full_n),
    .fft_kernel_modu2_M_s_write(grp_InnerProd_1_fu_1240_fft_kernel_modu2_M_s_write),
    .fft_kernel_modu2_M_1_din(grp_InnerProd_1_fu_1240_fft_kernel_modu2_M_1_din),
    .fft_kernel_modu2_M_1_full_n(fft_kernel_modu2_M_1_full_n),
    .fft_kernel_modu2_M_1_write(grp_InnerProd_1_fu_1240_fft_kernel_modu2_M_1_write)
);

InnerProd381 grp_InnerProd381_fu_1252(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_InnerProd381_fu_1252_ap_start),
    .ap_done(grp_InnerProd381_fu_1252_ap_done),
    .ap_idle(grp_InnerProd381_fu_1252_ap_idle),
    .ap_ready(grp_InnerProd381_fu_1252_ap_ready),
    .gauss_blur_M_real_dout(gauss_blur_M_real_dout),
    .gauss_blur_M_real_empty_n(gauss_blur_M_real_empty_n),
    .gauss_blur_M_real_read(grp_InnerProd381_fu_1252_gauss_blur_M_real_read),
    .gauss_blur_M_imag_dout(gauss_blur_M_imag_dout),
    .gauss_blur_M_imag_empty_n(gauss_blur_M_imag_empty_n),
    .gauss_blur_M_imag_read(grp_InnerProd381_fu_1252_gauss_blur_M_imag_read),
    .G_M_real_dout(G_M_real_dout),
    .G_M_real_empty_n(G_M_real_empty_n),
    .G_M_real_read(grp_InnerProd381_fu_1252_G_M_real_read),
    .G_M_imag_dout(G_M_imag_dout),
    .G_M_imag_empty_n(G_M_imag_empty_n),
    .G_M_imag_read(grp_InnerProd381_fu_1252_G_M_imag_read),
    .xk1_M_real_din(grp_InnerProd381_fu_1252_xk1_M_real_din),
    .xk1_M_real_full_n(xk1_M_real_full_n),
    .xk1_M_real_write(grp_InnerProd381_fu_1252_xk1_M_real_write),
    .xk1_M_imag_din(grp_InnerProd381_fu_1252_xk1_M_imag_din),
    .xk1_M_imag_full_n(xk1_M_imag_full_n),
    .xk1_M_imag_write(grp_InnerProd381_fu_1252_xk1_M_imag_write)
);

InnerProd382 grp_InnerProd382_fu_1268(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_InnerProd382_fu_1268_ap_start),
    .ap_done(grp_InnerProd382_fu_1268_ap_done),
    .ap_idle(grp_InnerProd382_fu_1268_ap_idle),
    .ap_ready(grp_InnerProd382_fu_1268_ap_ready),
    .gauss_blur_M_real_din(grp_InnerProd382_fu_1268_gauss_blur_M_real_din),
    .gauss_blur_M_real_full_n(gauss_blur_M_real_full_n),
    .gauss_blur_M_real_write(grp_InnerProd382_fu_1268_gauss_blur_M_real_write),
    .gauss_blur_M_imag_din(grp_InnerProd382_fu_1268_gauss_blur_M_imag_din),
    .gauss_blur_M_imag_full_n(gauss_blur_M_imag_full_n),
    .gauss_blur_M_imag_write(grp_InnerProd382_fu_1268_gauss_blur_M_imag_write),
    .xk1_M_real_dout(xk1_M_real_dout),
    .xk1_M_real_empty_n(xk1_M_real_empty_n),
    .xk1_M_real_read(grp_InnerProd382_fu_1268_xk1_M_real_read),
    .xk1_M_imag_dout(xk1_M_imag_dout),
    .xk1_M_imag_empty_n(xk1_M_imag_empty_n),
    .xk1_M_imag_read(grp_InnerProd382_fu_1268_xk1_M_imag_read),
    .fft_kernel_M_real_dout(fft_kernel_M_real_dout),
    .fft_kernel_M_real_empty_n(fft_kernel_M_real_empty_n),
    .fft_kernel_M_real_read(grp_InnerProd382_fu_1268_fft_kernel_M_real_read),
    .fft_kernel_M_imag_dout(fft_kernel_M_imag_dout),
    .fft_kernel_M_imag_empty_n(fft_kernel_M_imag_empty_n),
    .fft_kernel_M_imag_read(grp_InnerProd382_fu_1268_fft_kernel_M_imag_read)
);

matrix_plus_SNR grp_matrix_plus_SNR_fu_1284(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_matrix_plus_SNR_fu_1284_ap_start),
    .ap_done(grp_matrix_plus_SNR_fu_1284_ap_done),
    .ap_idle(grp_matrix_plus_SNR_fu_1284_ap_idle),
    .ap_ready(grp_matrix_plus_SNR_fu_1284_ap_ready),
    .fft_kernel_modu2_M_s_dout(fft_kernel_modu2_M_s_dout),
    .fft_kernel_modu2_M_s_empty_n(fft_kernel_modu2_M_s_empty_n),
    .fft_kernel_modu2_M_s_read(grp_matrix_plus_SNR_fu_1284_fft_kernel_modu2_M_s_read),
    .G1_M_real_din(grp_matrix_plus_SNR_fu_1284_G1_M_real_din),
    .G1_M_real_full_n(G1_M_real_full_n),
    .G1_M_real_write(grp_matrix_plus_SNR_fu_1284_G1_M_real_write),
    .fft_kernel_modu2_M_1_dout(fft_kernel_modu2_M_1_dout),
    .fft_kernel_modu2_M_1_empty_n(fft_kernel_modu2_M_1_empty_n),
    .fft_kernel_modu2_M_1_read(grp_matrix_plus_SNR_fu_1284_fft_kernel_modu2_M_1_read),
    .G1_M_imag_din(grp_matrix_plus_SNR_fu_1284_G1_M_imag_din),
    .G1_M_imag_full_n(G1_M_imag_full_n),
    .G1_M_imag_write(grp_matrix_plus_SNR_fu_1284_G1_M_imag_write)
);

real_1 grp_real_1_fu_1296(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_real_1_fu_1296_ap_start),
    .ap_done(grp_real_1_fu_1296_ap_done),
    .ap_idle(grp_real_1_fu_1296_ap_idle),
    .ap_ready(grp_real_1_fu_1296_ap_ready),
    .complex_float_s_dout(grp_real_1_fu_1296_complex_float_s_dout),
    .complex_float_s_empty_n(grp_real_1_fu_1296_complex_float_s_empty_n),
    .complex_float_s_read(grp_real_1_fu_1296_complex_float_s_read),
    .complex_float_s_din(grp_real_1_fu_1296_complex_float_s_din),
    .complex_float_s_full_n(grp_real_1_fu_1296_complex_float_s_full_n),
    .complex_float_s_write(grp_real_1_fu_1296_complex_float_s_write),
    .p_val(grp_real_1_fu_1296_p_val),
    .complex_float_s_i_blk_n(grp_real_1_fu_1296_complex_float_s_i_blk_n),
    .complex_float_s_o_blk_n(grp_real_1_fu_1296_complex_float_s_o_blk_n)
);

imag_1 grp_imag_1_fu_1308(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_imag_1_fu_1308_ap_start),
    .ap_done(grp_imag_1_fu_1308_ap_done),
    .ap_idle(grp_imag_1_fu_1308_ap_idle),
    .ap_ready(grp_imag_1_fu_1308_ap_ready),
    .complex_float_s_dout(grp_imag_1_fu_1308_complex_float_s_dout),
    .complex_float_s_empty_n(grp_imag_1_fu_1308_complex_float_s_empty_n),
    .complex_float_s_read(grp_imag_1_fu_1308_complex_float_s_read),
    .complex_float_s_din(grp_imag_1_fu_1308_complex_float_s_din),
    .complex_float_s_full_n(grp_imag_1_fu_1308_complex_float_s_full_n),
    .complex_float_s_write(grp_imag_1_fu_1308_complex_float_s_write),
    .p_val(grp_imag_1_fu_1308_p_val),
    .complex_float_s_i_blk_n(grp_imag_1_fu_1308_complex_float_s_i_blk_n),
    .complex_float_s_o_blk_n(grp_imag_1_fu_1308_complex_float_s_o_blk_n)
);

real379 grp_real379_fu_1320(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_real379_fu_1320_ap_start),
    .ap_done(grp_real379_fu_1320_ap_done),
    .ap_idle(grp_real379_fu_1320_ap_idle),
    .ap_ready(grp_real379_fu_1320_ap_ready),
    .complex_float_M_real_din(grp_real379_fu_1320_complex_float_M_real_din),
    .complex_float_M_real_full_n(grp_real379_fu_1320_complex_float_M_real_full_n),
    .complex_float_M_real_write(grp_real379_fu_1320_complex_float_M_real_write),
    .p_val(grp_real379_fu_1320_p_val),
    .complex_float_M_real_blk_n(grp_real379_fu_1320_complex_float_M_real_blk_n)
);

imag380 grp_imag380_fu_1332(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_imag380_fu_1332_ap_start),
    .ap_done(grp_imag380_fu_1332_ap_done),
    .ap_idle(grp_imag380_fu_1332_ap_idle),
    .ap_ready(grp_imag380_fu_1332_ap_ready),
    .complex_float_M_imag_din(grp_imag380_fu_1332_complex_float_M_imag_din),
    .complex_float_M_imag_full_n(grp_imag380_fu_1332_complex_float_M_imag_full_n),
    .complex_float_M_imag_write(grp_imag380_fu_1332_complex_float_M_imag_write),
    .p_val(grp_imag380_fu_1332_p_val),
    .complex_float_M_imag_blk_n(grp_imag380_fu_1332_complex_float_M_imag_blk_n)
);

WienerDeblur_fmuljbC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
WienerDeblur_fmuljbC_U181(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1345_p0),
    .din1(grp_fu_1345_p1),
    .ce(grp_fu_1345_ce),
    .dout(grp_fu_1345_p2)
);

WienerDeblur_uitoOgC #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
WienerDeblur_uitoOgC_U182(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1351_p0),
    .ce(1'b1),
    .dout(grp_fu_1351_p1)
);

fifo_w32_d65536_A G_M_imag_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_matrix_div_fu_1216_G_M_imag_din),
    .if_full_n(G_M_imag_full_n),
    .if_write(G_M_imag_write),
    .if_dout(G_M_imag_dout),
    .if_empty_n(G_M_imag_empty_n),
    .if_read(G_M_imag_read)
);

fifo_w32_d65536_A G_M_real_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_matrix_div_fu_1216_G_M_real_din),
    .if_full_n(G_M_real_full_n),
    .if_write(G_M_real_write),
    .if_dout(G_M_real_dout),
    .if_empty_n(G_M_real_empty_n),
    .if_read(G_M_real_read)
);

fifo_w32_d65536_A fft_kernel_modu_M_i_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_matrix_modulus_fu_1143_fft_kernel_modu_M_i_din),
    .if_full_n(fft_kernel_modu_M_i_full_n),
    .if_write(fft_kernel_modu_M_i_write),
    .if_dout(fft_kernel_modu_M_i_dout),
    .if_empty_n(fft_kernel_modu_M_i_empty_n),
    .if_read(fft_kernel_modu_M_i_read)
);

fifo_w32_d65536_A fft_kernel_modu_M_r_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_matrix_modulus_fu_1143_fft_kernel_modu_M_r_din),
    .if_full_n(fft_kernel_modu_M_r_full_n),
    .if_write(fft_kernel_modu_M_r_write),
    .if_dout(fft_kernel_modu_M_r_dout),
    .if_empty_n(fft_kernel_modu_M_r_empty_n),
    .if_read(fft_kernel_modu_M_r_read)
);

fifo_w32_d65536_A gauss_blur_M_imag_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_InnerProd382_fu_1268_gauss_blur_M_imag_din),
    .if_full_n(gauss_blur_M_imag_full_n),
    .if_write(gauss_blur_M_imag_write),
    .if_dout(gauss_blur_M_imag_dout),
    .if_empty_n(gauss_blur_M_imag_empty_n),
    .if_read(gauss_blur_M_imag_read)
);

fifo_w32_d65536_A gauss_blur_M_real_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_InnerProd382_fu_1268_gauss_blur_M_real_din),
    .if_full_n(gauss_blur_M_real_full_n),
    .if_write(gauss_blur_M_real_write),
    .if_dout(gauss_blur_M_real_dout),
    .if_empty_n(gauss_blur_M_real_empty_n),
    .if_read(gauss_blur_M_real_read)
);

fifo_w32_d65536_A G1_M_imag_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(G1_M_imag_din),
    .if_full_n(G1_M_imag_full_n),
    .if_write(G1_M_imag_write),
    .if_dout(G1_M_imag_dout),
    .if_empty_n(G1_M_imag_empty_n),
    .if_read(G1_M_imag_read)
);

fifo_w32_d65536_A G1_M_real_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(G1_M_real_din),
    .if_full_n(G1_M_real_full_n),
    .if_write(G1_M_real_write),
    .if_dout(G1_M_real_dout),
    .if_empty_n(G1_M_real_empty_n),
    .if_read(G1_M_real_read)
);

fifo_w32_d65536_A fft_kernel_M_imag_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_imag380_fu_1332_complex_float_M_imag_din),
    .if_full_n(fft_kernel_M_imag_full_n),
    .if_write(fft_kernel_M_imag_write),
    .if_dout(fft_kernel_M_imag_dout),
    .if_empty_n(fft_kernel_M_imag_empty_n),
    .if_read(fft_kernel_M_imag_read)
);

fifo_w32_d65536_A fft_kernel_M_real_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_real379_fu_1320_complex_float_M_real_din),
    .if_full_n(fft_kernel_M_real_full_n),
    .if_write(fft_kernel_M_real_write),
    .if_dout(fft_kernel_M_real_dout),
    .if_empty_n(fft_kernel_M_real_empty_n),
    .if_read(fft_kernel_M_real_read)
);

fifo_w32_d65536_A fft_kernel_modu2_M_1_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_InnerProd_1_fu_1240_fft_kernel_modu2_M_1_din),
    .if_full_n(fft_kernel_modu2_M_1_full_n),
    .if_write(fft_kernel_modu2_M_1_write),
    .if_dout(fft_kernel_modu2_M_1_dout),
    .if_empty_n(fft_kernel_modu2_M_1_empty_n),
    .if_read(fft_kernel_modu2_M_1_read)
);

fifo_w32_d65536_A fft_kernel_modu2_M_s_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_InnerProd_1_fu_1240_fft_kernel_modu2_M_s_din),
    .if_full_n(fft_kernel_modu2_M_s_full_n),
    .if_write(fft_kernel_modu2_M_s_write),
    .if_dout(fft_kernel_modu2_M_s_dout),
    .if_empty_n(fft_kernel_modu2_M_s_empty_n),
    .if_read(fft_kernel_modu2_M_s_read)
);

fifo_w64_d256_A_x in1_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(in1_din),
    .if_full_n(in1_full_n),
    .if_write(in1_write),
    .if_dout(in1_dout),
    .if_empty_n(in1_empty_n),
    .if_read(in1_read)
);

fifo_w64_d256_A_x in2_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(in2_din),
    .if_full_n(in2_full_n),
    .if_write(in2_write),
    .if_dout(in2_dout),
    .if_empty_n(in2_empty_n),
    .if_read(in2_read)
);

fifo_w64_d256_A_x in3_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(in3_din),
    .if_full_n(in3_full_n),
    .if_write(in3_write),
    .if_dout(in3_dout),
    .if_empty_n(in3_empty_n),
    .if_read(in3_read)
);

fifo_w64_d256_A_x in4_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(in4_din),
    .if_full_n(in4_full_n),
    .if_write(in4_write),
    .if_dout(in4_dout),
    .if_empty_n(in4_empty_n),
    .if_read(in4_read)
);

fifo_w64_d256_A_x in5_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(in5_din),
    .if_full_n(in5_full_n),
    .if_write(in5_write),
    .if_dout(in5_dout),
    .if_empty_n(in5_empty_n),
    .if_read(in5_read)
);

fifo_w64_d256_A_x in6_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(in6_din),
    .if_full_n(in6_full_n),
    .if_write(in6_write),
    .if_dout(in6_dout),
    .if_empty_n(in6_empty_n),
    .if_read(in6_read)
);

fifo_w32_d65536_A kernel_M_imag_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(kernel_M_imag_din),
    .if_full_n(kernel_M_imag_full_n),
    .if_write(kernel_M_imag_write),
    .if_dout(kernel_M_imag_dout),
    .if_empty_n(kernel_M_imag_empty_n),
    .if_read(kernel_M_imag_read)
);

fifo_w32_d65536_A kernel_M_real_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(kernel_M_real_din),
    .if_full_n(kernel_M_real_full_n),
    .if_write(kernel_M_real_write),
    .if_dout(kernel_M_real_dout),
    .if_empty_n(kernel_M_real_empty_n),
    .if_read(kernel_M_real_read)
);

fifo_w32_d65536_A middle_M_imag_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_imag380_fu_1332_complex_float_M_imag_din),
    .if_full_n(middle_M_imag_full_n),
    .if_write(middle_M_imag_write),
    .if_dout(middle_M_imag_dout),
    .if_empty_n(middle_M_imag_empty_n),
    .if_read(middle_M_imag_read)
);

fifo_w32_d65536_A middle_M_real_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_real379_fu_1320_complex_float_M_real_din),
    .if_full_n(middle_M_real_full_n),
    .if_write(middle_M_real_write),
    .if_dout(middle_M_real_dout),
    .if_empty_n(middle_M_real_empty_n),
    .if_read(middle_M_real_read)
);

fifo_w32_d65536_A middle2_M_imag_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_imag380_fu_1332_complex_float_M_imag_din),
    .if_full_n(middle2_M_imag_full_n),
    .if_write(middle2_M_imag_write),
    .if_dout(middle2_M_imag_dout),
    .if_empty_n(middle2_M_imag_empty_n),
    .if_read(middle2_M_imag_read)
);

fifo_w32_d65536_A middle2_M_real_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_real379_fu_1320_complex_float_M_real_din),
    .if_full_n(middle2_M_real_full_n),
    .if_write(middle2_M_real_write),
    .if_dout(middle2_M_real_dout),
    .if_empty_n(middle2_M_real_empty_n),
    .if_read(middle2_M_real_read)
);

fifo_w64_d256_A_x out1_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_fft_top_fu_1179_out_r_din),
    .if_full_n(out1_full_n),
    .if_write(out1_write),
    .if_dout(out1_dout),
    .if_empty_n(out1_empty_n),
    .if_read(out1_read)
);

fifo_w64_d256_A_x out2_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_fft_top_fu_1179_out_r_din),
    .if_full_n(out2_full_n),
    .if_write(out2_write),
    .if_dout(out2_dout),
    .if_empty_n(out2_empty_n),
    .if_read(out2_read)
);

fifo_w64_d256_A_x out3_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_fft_top_fu_1179_out_r_din),
    .if_full_n(out3_full_n),
    .if_write(out3_write),
    .if_dout(out3_dout),
    .if_empty_n(out3_empty_n),
    .if_read(out3_read)
);

fifo_w64_d256_A_x out4_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_fft_top_fu_1179_out_r_din),
    .if_full_n(out4_full_n),
    .if_write(out4_write),
    .if_dout(out4_dout),
    .if_empty_n(out4_empty_n),
    .if_read(out4_read)
);

fifo_w64_d256_A_x out5_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_fft_top_fu_1179_out_r_din),
    .if_full_n(out5_full_n),
    .if_write(out5_write),
    .if_dout(out5_dout),
    .if_empty_n(out5_empty_n),
    .if_read(out5_read)
);

fifo_w64_d256_A_x out6_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_fft_top_fu_1179_out_r_din),
    .if_full_n(out6_full_n),
    .if_write(out6_write),
    .if_dout(out6_dout),
    .if_empty_n(out6_empty_n),
    .if_read(out6_read)
);

fifo_w32_d65536_A xk1_M_imag_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(xk1_M_imag_din),
    .if_full_n(xk1_M_imag_full_n),
    .if_write(xk1_M_imag_write),
    .if_dout(xk1_M_imag_dout),
    .if_empty_n(xk1_M_imag_empty_n),
    .if_read(xk1_M_imag_read)
);

fifo_w32_d65536_A xk1_M_real_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(xk1_M_real_din),
    .if_full_n(xk1_M_real_full_n),
    .if_write(xk1_M_real_write),
    .if_dout(xk1_M_real_dout),
    .if_empty_n(xk1_M_real_empty_n),
    .if_read(xk1_M_real_read)
);

fifo_w32_d65536_A xk2_M_imag_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_imag380_fu_1332_complex_float_M_imag_din),
    .if_full_n(xk2_M_imag_full_n),
    .if_write(xk2_M_imag_write),
    .if_dout(xk2_M_imag_dout),
    .if_empty_n(xk2_M_imag_empty_n),
    .if_read(xk2_M_imag_read)
);

fifo_w32_d65536_A xk2_M_real_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_real379_fu_1320_complex_float_M_real_din),
    .if_full_n(xk2_M_real_full_n),
    .if_write(xk2_M_real_write),
    .if_dout(xk2_M_real_dout),
    .if_empty_n(xk2_M_real_empty_n),
    .if_read(xk2_M_real_read)
);

fifo_w32_d65536_A xn1_M_imag_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_imag380_fu_1332_complex_float_M_imag_din),
    .if_full_n(xn1_M_imag_full_n),
    .if_write(xn1_M_imag_write),
    .if_dout(xn1_M_imag_dout),
    .if_empty_n(xn1_M_imag_empty_n),
    .if_read(xn1_M_imag_read)
);

fifo_w32_d65536_A xn1_M_real_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_real379_fu_1320_complex_float_M_real_din),
    .if_full_n(xn1_M_real_full_n),
    .if_write(xn1_M_real_write),
    .if_dout(xn1_M_real_dout),
    .if_empty_n(xn1_M_real_empty_n),
    .if_read(xn1_M_real_read)
);

fifo_w8_d4_A src_bw_data_stream_0_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(src_bw_data_stream_0_din),
    .if_full_n(src_bw_data_stream_0_full_n),
    .if_write(src_bw_data_stream_0_write),
    .if_dout(src_bw_data_stream_0_dout),
    .if_empty_n(src_bw_data_stream_0_empty_n),
    .if_read(src_bw_data_stream_0_read)
);

fifo_w8_d4_A res_data_stream_0_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(res_data_stream_0_V_din),
    .if_full_n(res_data_stream_0_V_full_n),
    .if_write(res_data_stream_0_V_write),
    .if_dout(res_data_stream_0_V_dout),
    .if_empty_n(res_data_stream_0_V_empty_n),
    .if_read(res_data_stream_0_V_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        INPUT_data_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == INPUT_data_V_0_ack_out) & (1'b1 == INPUT_data_V_0_vld_out))) begin
            INPUT_data_V_0_sel_rd <= ~INPUT_data_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        INPUT_data_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == INPUT_data_V_0_ack_in) & (1'b1 == INPUT_data_V_0_vld_in))) begin
            INPUT_data_V_0_sel_wr <= ~INPUT_data_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        INPUT_data_V_0_state <= 2'd0;
    end else begin
        if ((((1'b0 == INPUT_data_V_0_vld_in) & (2'd2 == INPUT_data_V_0_state)) | ((1'b0 == INPUT_data_V_0_vld_in) & (1'b1 == INPUT_data_V_0_ack_out) & (2'd3 == INPUT_data_V_0_state)))) begin
            INPUT_data_V_0_state <= 2'd2;
        end else if ((((1'b0 == INPUT_data_V_0_ack_out) & (2'd1 == INPUT_data_V_0_state)) | ((1'b0 == INPUT_data_V_0_ack_out) & (1'b1 == INPUT_data_V_0_vld_in) & (2'd3 == INPUT_data_V_0_state)))) begin
            INPUT_data_V_0_state <= 2'd1;
        end else if (((~((1'b0 == INPUT_data_V_0_vld_in) & (1'b1 == INPUT_data_V_0_ack_out)) & ~((1'b0 == INPUT_data_V_0_ack_out) & (1'b1 == INPUT_data_V_0_vld_in)) & (2'd3 == INPUT_data_V_0_state)) | ((1'b1 == INPUT_data_V_0_ack_out) & (2'd1 == INPUT_data_V_0_state)) | ((1'b1 == INPUT_data_V_0_vld_in) & (2'd2 == INPUT_data_V_0_state)))) begin
            INPUT_data_V_0_state <= 2'd3;
        end else begin
            INPUT_data_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        INPUT_last_V_0_state <= 2'd0;
    end else begin
        if ((((1'b0 == INPUT_last_V_0_vld_in) & (2'd2 == INPUT_last_V_0_state)) | ((1'b0 == INPUT_last_V_0_vld_in) & (1'b1 == INPUT_last_V_0_ack_out) & (2'd3 == INPUT_last_V_0_state)))) begin
            INPUT_last_V_0_state <= 2'd2;
        end else if ((((1'b0 == INPUT_last_V_0_ack_out) & (2'd1 == INPUT_last_V_0_state)) | ((1'b0 == INPUT_last_V_0_ack_out) & (1'b1 == INPUT_last_V_0_vld_in) & (2'd3 == INPUT_last_V_0_state)))) begin
            INPUT_last_V_0_state <= 2'd1;
        end else if (((~((1'b0 == INPUT_last_V_0_vld_in) & (1'b1 == INPUT_last_V_0_ack_out)) & ~((1'b0 == INPUT_last_V_0_ack_out) & (1'b1 == INPUT_last_V_0_vld_in)) & (2'd3 == INPUT_last_V_0_state)) | ((1'b1 == INPUT_last_V_0_ack_out) & (2'd1 == INPUT_last_V_0_state)) | ((1'b1 == INPUT_last_V_0_vld_in) & (2'd2 == INPUT_last_V_0_state)))) begin
            INPUT_last_V_0_state <= 2'd3;
        end else begin
            INPUT_last_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == OUTPUT_data_V_1_ack_out) & (1'b1 == OUTPUT_data_V_1_vld_out))) begin
            OUTPUT_data_V_1_sel_rd <= ~OUTPUT_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == OUTPUT_data_V_1_ack_in) & (1'b1 == OUTPUT_data_V_1_vld_in))) begin
            OUTPUT_data_V_1_sel_wr <= ~OUTPUT_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_data_V_1_state <= 2'd0;
    end else begin
        if ((((1'b0 == OUTPUT_data_V_1_vld_in) & (2'd2 == OUTPUT_data_V_1_state)) | ((1'b0 == OUTPUT_data_V_1_vld_in) & (1'b1 == OUTPUT_data_V_1_ack_out) & (2'd3 == OUTPUT_data_V_1_state)))) begin
            OUTPUT_data_V_1_state <= 2'd2;
        end else if ((((1'b0 == OUTPUT_data_V_1_ack_out) & (2'd1 == OUTPUT_data_V_1_state)) | ((1'b0 == OUTPUT_data_V_1_ack_out) & (1'b1 == OUTPUT_data_V_1_vld_in) & (2'd3 == OUTPUT_data_V_1_state)))) begin
            OUTPUT_data_V_1_state <= 2'd1;
        end else if (((~((1'b0 == OUTPUT_data_V_1_vld_in) & (1'b1 == OUTPUT_data_V_1_ack_out)) & ~((1'b0 == OUTPUT_data_V_1_ack_out) & (1'b1 == OUTPUT_data_V_1_vld_in)) & (2'd3 == OUTPUT_data_V_1_state)) | ((1'b1 == OUTPUT_data_V_1_ack_out) & (2'd1 == OUTPUT_data_V_1_state)) | ((1'b1 == OUTPUT_data_V_1_vld_in) & (2'd2 == OUTPUT_data_V_1_state)))) begin
            OUTPUT_data_V_1_state <= 2'd3;
        end else begin
            OUTPUT_data_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == OUTPUT_last_V_1_ack_out) & (1'b1 == OUTPUT_last_V_1_vld_out))) begin
            OUTPUT_last_V_1_sel_rd <= ~OUTPUT_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == OUTPUT_last_V_1_ack_in) & (1'b1 == OUTPUT_last_V_1_vld_in))) begin
            OUTPUT_last_V_1_sel_wr <= ~OUTPUT_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_last_V_1_state <= 2'd0;
    end else begin
        if ((((1'b0 == OUTPUT_last_V_1_vld_in) & (2'd2 == OUTPUT_last_V_1_state)) | ((1'b0 == OUTPUT_last_V_1_vld_in) & (1'b1 == OUTPUT_last_V_1_ack_out) & (2'd3 == OUTPUT_last_V_1_state)))) begin
            OUTPUT_last_V_1_state <= 2'd2;
        end else if ((((1'b0 == OUTPUT_last_V_1_ack_out) & (2'd1 == OUTPUT_last_V_1_state)) | ((1'b0 == OUTPUT_last_V_1_ack_out) & (1'b1 == OUTPUT_last_V_1_vld_in) & (2'd3 == OUTPUT_last_V_1_state)))) begin
            OUTPUT_last_V_1_state <= 2'd1;
        end else if (((~((1'b0 == OUTPUT_last_V_1_vld_in) & (1'b1 == OUTPUT_last_V_1_ack_out)) & ~((1'b0 == OUTPUT_last_V_1_ack_out) & (1'b1 == OUTPUT_last_V_1_vld_in)) & (2'd3 == OUTPUT_last_V_1_state)) | ((1'b1 == OUTPUT_last_V_1_ack_out) & (2'd1 == OUTPUT_last_V_1_state)) | ((1'b1 == OUTPUT_last_V_1_vld_in) & (2'd2 == OUTPUT_last_V_1_state)))) begin
            OUTPUT_last_V_1_state <= 2'd3;
        end else begin
            OUTPUT_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_user_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == OUTPUT_user_V_1_ack_out) & (1'b1 == OUTPUT_user_V_1_vld_out))) begin
            OUTPUT_user_V_1_sel_rd <= ~OUTPUT_user_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_user_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == OUTPUT_user_V_1_ack_in) & (1'b1 == OUTPUT_user_V_1_vld_in))) begin
            OUTPUT_user_V_1_sel_wr <= ~OUTPUT_user_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_user_V_1_state <= 2'd0;
    end else begin
        if ((((1'b0 == OUTPUT_user_V_1_vld_in) & (2'd2 == OUTPUT_user_V_1_state)) | ((1'b0 == OUTPUT_user_V_1_vld_in) & (1'b1 == OUTPUT_user_V_1_ack_out) & (2'd3 == OUTPUT_user_V_1_state)))) begin
            OUTPUT_user_V_1_state <= 2'd2;
        end else if ((((1'b0 == OUTPUT_user_V_1_ack_out) & (2'd1 == OUTPUT_user_V_1_state)) | ((1'b0 == OUTPUT_user_V_1_ack_out) & (1'b1 == OUTPUT_user_V_1_vld_in) & (2'd3 == OUTPUT_user_V_1_state)))) begin
            OUTPUT_user_V_1_state <= 2'd1;
        end else if (((~((1'b0 == OUTPUT_user_V_1_vld_in) & (1'b1 == OUTPUT_user_V_1_ack_out)) & ~((1'b0 == OUTPUT_user_V_1_ack_out) & (1'b1 == OUTPUT_user_V_1_vld_in)) & (2'd3 == OUTPUT_user_V_1_state)) | ((1'b1 == OUTPUT_user_V_1_ack_out) & (2'd1 == OUTPUT_user_V_1_state)) | ((1'b1 == OUTPUT_user_V_1_vld_in) & (2'd2 == OUTPUT_user_V_1_state)))) begin
            OUTPUT_user_V_1_state <= 2'd3;
        end else begin
            OUTPUT_user_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~(((kernel_M_imag_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0)) | ((kernel_M_real_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & ((guard_variable_for_W_1_reg_2401 == 1'd1) | ((tmp_55_fu_1404_p2 == 1'd1) & (tmp_54_fu_1398_p2 == 1'd1))))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~(((kernel_M_imag_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0)) | ((kernel_M_real_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & ((guard_variable_for_W_1_reg_2401 == 1'd1) | ((tmp_55_fu_1404_p2 == 1'd1) & (tmp_54_fu_1398_p2 == 1'd1))))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state98) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state94) & (exitcond15_fu_1855_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_subdone)) | ((1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3_subdone)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state94) & (exitcond15_fu_1855_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_InnerProd381_fu_1252_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state76)) begin
            grp_InnerProd381_fu_1252_ap_start_reg <= 1'b1;
        end else if ((grp_InnerProd381_fu_1252_ap_ready == 1'b1)) begin
            grp_InnerProd381_fu_1252_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_InnerProd382_fu_1268_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state53) & (exitcond4_fu_1688_p2 == 1'd1))) begin
            grp_InnerProd382_fu_1268_ap_start_reg <= 1'b1;
        end else if ((grp_InnerProd382_fu_1268_ap_ready == 1'b1)) begin
            grp_InnerProd382_fu_1268_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_InnerProd_1_fu_1240_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state68)) begin
            grp_InnerProd_1_fu_1240_ap_start_reg <= 1'b1;
        end else if ((grp_InnerProd_1_fu_1240_ap_ready == 1'b1)) begin
            grp_InnerProd_1_fu_1240_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_KernelMaker_fu_1232_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state32) & (exitcond1_fu_1573_p2 == 1'd1))) begin
            grp_KernelMaker_fu_1232_ap_start_reg <= 1'b1;
        end else if ((grp_KernelMaker_fu_1232_ap_ready == 1'b1)) begin
            grp_KernelMaker_fu_1232_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_fft_top_fu_1179_ap_start_reg <= 1'b0;
    end else begin
        if (((~(((kernel_M_imag_empty_n == 1'b0) & (exitcond5_fu_1643_p2 == 1'd0)) | ((kernel_M_real_empty_n == 1'b0) & (exitcond5_fu_1643_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state46) & (exitcond5_fu_1643_p2 == 1'd1)) | (~(((xn1_M_imag_empty_n == 1'b0) & (exitcond10_fu_1529_p2 == 1'd0)) | ((xn1_M_real_empty_n == 1'b0) & (exitcond10_fu_1529_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state21) & (exitcond10_fu_1529_p2 == 1'd1)) | (~(((middle_M_imag_empty_n == 1'b0) & (exitcond_fu_1700_p2 == 1'd0)) | ((middle_M_real_empty_n == 1'b0) & (exitcond_fu_1700_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state54) & (exitcond_fu_1700_p2 == 1'd1)) | (~(((middle_M_imag_empty_n == 1'b0) & (exitcond3_fu_1585_p2 == 1'd0)) | ((middle_M_real_empty_n == 1'b0) & (exitcond3_fu_1585_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state33) & (exitcond3_fu_1585_p2 == 1'd1)) | (~(((middle2_M_imag_empty_n == 1'b0) & (exitcond18_fu_1811_p2 == 1'd0)) | ((middle2_M_real_empty_n == 1'b0) & (exitcond18_fu_1811_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state87) & (exitcond18_fu_1811_p2 == 1'd1)) | (~(((xk1_M_imag_empty_n == 1'b0) & (exitcond16_fu_1756_p2 == 1'd0)) | ((xk1_M_real_empty_n == 1'b0) & (exitcond16_fu_1756_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state79) & (exitcond16_fu_1756_p2 == 1'd1)))) begin
            grp_fft_top_fu_1179_ap_start_reg <= 1'b1;
        end else if ((grp_fft_top_fu_1179_ap_ready == 1'b1)) begin
            grp_fft_top_fu_1179_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_matrix_div_1_fu_1204_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state72)) begin
            grp_matrix_div_1_fu_1204_ap_start_reg <= 1'b1;
        end else if ((grp_matrix_div_1_fu_1204_ap_ready == 1'b1)) begin
            grp_matrix_div_1_fu_1204_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_matrix_div_fu_1216_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state74)) begin
            grp_matrix_div_fu_1216_ap_start_reg <= 1'b1;
        end else if ((grp_matrix_div_fu_1216_ap_ready == 1'b1)) begin
            grp_matrix_div_fu_1216_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_matrix_modulus_fu_1143_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state66)) begin
            grp_matrix_modulus_fu_1143_ap_start_reg <= 1'b1;
        end else if ((grp_matrix_modulus_fu_1143_ap_ready == 1'b1)) begin
            grp_matrix_modulus_fu_1143_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_matrix_plus_SNR_fu_1284_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state70)) begin
            grp_matrix_plus_SNR_fu_1284_ap_start_reg <= 1'b1;
        end else if ((grp_matrix_plus_SNR_fu_1284_ap_ready == 1'b1)) begin
            grp_matrix_plus_SNR_fu_1284_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten_reg_2857 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        c12_reg_1132 <= c_1_reg_2901;
    end else if (((1'b1 == ap_CS_fsm_state94) & (exitcond15_fu_1855_p2 == 1'd1))) begin
        c12_reg_1132 <= 30'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (exitcond8_fu_1518_p2 == 1'd1))) begin
        c5_reg_923 <= 9'd0;
    end else if ((~((out2_empty_n == 1'b0) & (exitcond6_fu_1597_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state37) & (exitcond6_fu_1597_p2 == 1'd1))) begin
        c5_reg_923 <= c_7_reg_2559;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (exitcond2_fu_1631_p2 == 1'd1))) begin
        c6_reg_989 <= 9'd0;
    end else if ((~((out4_empty_n == 1'b0) & (exitcond17_fu_1712_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state58) & (exitcond17_fu_1712_p2 == 1'd1))) begin
        c6_reg_989 <= c_9_reg_2647;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (exitcond2_fu_1631_p2 == 1'd0))) begin
        c9_reg_967 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state48) & (grp_imag_1_fu_1308_complex_float_s_o_blk_n == 1'b1))) begin
        c9_reg_967 <= c_6_reg_2611;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state85) & (grp_imag380_fu_1332_complex_float_M_imag_blk_n == 1'b1))) begin
        i_op_assign_10_reg_1044 <= c_16_reg_2717;
    end else if (((1'b1 == ap_CS_fsm_state82) & (grp_fft_top_fu_1179_ap_done == 1'b1))) begin
        i_op_assign_10_reg_1044 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state86) & (exitcond13_fu_1800_p2 == 1'd0))) begin
        i_op_assign_11_reg_1066 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state89) & (grp_imag_1_fu_1308_complex_float_s_o_blk_n == 1'b1))) begin
        i_op_assign_11_reg_1066 <= r_16_reg_2743;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten_reg_2857 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i_op_assign_12_reg_1121 <= tmp_87_mid2_v_reg_2871;
    end else if (((1'b1 == ap_CS_fsm_state94) & (exitcond15_fu_1855_p2 == 1'd1))) begin
        i_op_assign_12_reg_1121 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state93) & (grp_imag380_fu_1332_complex_float_M_imag_blk_n == 1'b1))) begin
        i_op_assign_13_reg_1077 <= r_18_reg_2761;
    end else if (((1'b1 == ap_CS_fsm_state90) & (grp_fft_top_fu_1179_ap_done == 1'b1))) begin
        i_op_assign_13_reg_1077 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state94) & (exitcond15_fu_1855_p2 == 1'd0))) begin
        i_op_assign_14_reg_1099 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state97) & (res_data_stream_0_V_full_n == 1'b1))) begin
        i_op_assign_14_reg_1099 <= c_17_reg_2804;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state86) & (exitcond13_fu_1800_p2 == 1'd1))) begin
        i_op_assign_1_reg_1088 <= 32'd0;
    end else if ((~(((xk2_M_imag_empty_n == 1'b0) & (exitcond20_fu_1892_p2 == 1'd0)) | ((xk2_M_real_empty_n == 1'b0) & (exitcond20_fu_1892_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state95) & (exitcond20_fu_1892_p2 == 1'd1))) begin
        i_op_assign_1_reg_1088 <= r_15_reg_2780;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (exitcond7_fu_1492_p2 == 1'd0))) begin
        i_op_assign_2_reg_879 <= 32'd0;
    end else if ((~((grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b0) | (grp_imag380_fu_1332_complex_float_M_imag_blk_n == 1'b0)) & (1'b1 == ap_CS_fsm_state19))) begin
        i_op_assign_2_reg_879 <= c_reg_2482;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (exitcond7_fu_1492_p2 == 1'd1))) begin
        i_op_assign_3_reg_890 <= 32'd0;
    end else if ((~((out1_empty_n == 1'b0) & (exitcond11_fu_1540_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state25) & (exitcond11_fu_1540_p2 == 1'd1))) begin
        i_op_assign_3_reg_890 <= r_6_reg_2505;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (exitcond8_fu_1518_p2 == 1'd0))) begin
        i_op_assign_4_reg_901 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state23) & (grp_imag_1_fu_1308_complex_float_s_o_blk_n == 1'b1))) begin
        i_op_assign_4_reg_901 <= c_4_reg_2513;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & (grp_imag380_fu_1332_complex_float_M_imag_blk_n == 1'b1))) begin
        i_op_assign_5_reg_912 <= c_5_reg_2531;
    end else if (((1'b1 == ap_CS_fsm_state24) & (grp_fft_top_fu_1179_ap_done == 1'b1))) begin
        i_op_assign_5_reg_912 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state52) & (grp_imag380_fu_1332_complex_float_M_imag_blk_n == 1'b1))) begin
        i_op_assign_6_reg_978 <= c_8_reg_2629;
    end else if (((1'b1 == ap_CS_fsm_state49) & (grp_fft_top_fu_1179_ap_done == 1'b1))) begin
        i_op_assign_6_reg_978 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state64) & (grp_imag380_fu_1332_complex_float_M_imag_blk_n == 1'b1))) begin
        i_op_assign_7_reg_1011 <= r_14_reg_2663;
    end else if (((1'b1 == ap_CS_fsm_state57) & (grp_fft_top_fu_1179_ap_done == 1'b1))) begin
        i_op_assign_7_reg_1011 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out5_empty_n == 1'b0) & (exitcond19_fu_1767_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state83) & (exitcond19_fu_1767_p2 == 1'd1))) begin
        i_op_assign_8_reg_1022 <= r_13_reg_2691;
    end else if (((1'b1 == ap_CS_fsm_state77) & (grp_InnerProd381_fu_1252_ap_done == 1'b1))) begin
        i_op_assign_8_reg_1022 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) & (exitcond12_fu_1745_p2 == 1'd0))) begin
        i_op_assign_9_reg_1033 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state81) & (grp_imag_1_fu_1308_complex_float_s_o_blk_n == 1'b1))) begin
        i_op_assign_9_reg_1033 <= c_13_reg_2699;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_op_assign_reg_868 <= 32'd0;
    end else if ((~((src_bw_data_stream_0_empty_n == 1'b0) & (exitcond9_fu_1503_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state12) & (exitcond9_fu_1503_p2 == 1'd1))) begin
        i_op_assign_reg_868 <= r_5_reg_2474;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) & (exitcond12_fu_1745_p2 == 1'd1))) begin
        i_op_assign_s_reg_1055 <= 32'd0;
    end else if ((~((out6_empty_n == 1'b0) & (exitcond21_fu_1822_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state91) & (exitcond21_fu_1822_p2 == 1'd1))) begin
        i_op_assign_s_reg_1055 <= c_12_reg_2735;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten_reg_2857 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten_reg_1110 <= indvar_flatten_next_reg_2861;
    end else if (((1'b1 == ap_CS_fsm_state94) & (exitcond15_fu_1855_p2 == 1'd1))) begin
        indvar_flatten_reg_1110 <= 62'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((kernel_M_imag_full_n == 1'b0) | (kernel_M_real_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_1380_p2 == 1'd0))) begin
        p_rec1_reg_823 <= p_sum_fu_1374_p2;
    end else if ((~((ap_start == 1'b0) | ((kernel_M_imag_full_n == 1'b0) & (guard_variable_for_W == 1'd0)) | ((kernel_M_real_full_n == 1'b0) & (guard_variable_for_W == 1'd0))) & (1'b1 == ap_CS_fsm_state1) & (guard_variable_for_W == 1'd0))) begin
        p_rec1_reg_823 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((kernel_M_imag_full_n == 1'b0) | (kernel_M_real_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_1380_p2 == 1'd1))) begin
        p_rec2_reg_834 <= 8'd0;
    end else if ((~(((kernel_M_imag_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0)) | ((kernel_M_real_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (tmp_54_fu_1398_p2 == 1'd1) & (tmp_55_fu_1404_p2 == 1'd0) & (guard_variable_for_W_1_reg_2401 == 1'd0))) begin
        p_rec2_reg_834 <= p_sum1_reg_2413;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) & (exitcond1_fu_1573_p2 == 1'd0))) begin
        r6_reg_934 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state35) & (grp_imag_1_fu_1308_complex_float_s_o_blk_n == 1'b1))) begin
        r6_reg_934 <= r_7_reg_2567;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state43) & (grp_imag380_fu_1332_complex_float_M_imag_blk_n == 1'b1))) begin
        r7_reg_945 <= r_8_reg_2575;
    end else if (((1'b1 == ap_CS_fsm_state36) & (grp_fft_top_fu_1179_ap_done == 1'b1))) begin
        r7_reg_945 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out3_empty_n == 1'b0) & (exitcond14_fu_1655_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state50) & (exitcond14_fu_1655_p2 == 1'd1))) begin
        r8_reg_956 <= r_10_reg_2603;
    end else if (((1'b1 == ap_CS_fsm_state44) & (grp_KernelMaker_fu_1232_ap_done == 1'b1))) begin
        r8_reg_956 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) & (exitcond4_fu_1688_p2 == 1'd0))) begin
        r9_reg_1000 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state56) & (grp_imag_1_fu_1308_complex_float_s_o_blk_n == 1'b1))) begin
        r9_reg_1000 <= r_9_reg_2655;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_56_reg_2447 == 1'd1))) begin
        r_reg_857 <= r_4_reg_2451;
    end else if ((~(((kernel_M_imag_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0)) | ((kernel_M_real_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & ((guard_variable_for_W_1_reg_2401 == 1'd1) | ((tmp_55_fu_1404_p2 == 1'd1) & (tmp_54_fu_1398_p2 == 1'd1))))) begin
        r_reg_857 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((kernel_M_imag_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0)) | ((kernel_M_real_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (tmp_54_fu_1398_p2 == 1'd0) & (guard_variable_for_W_1_reg_2401 == 1'd0))) begin
        tmp_52_reg_846 <= tmp_53_fu_1392_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_52_reg_846 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == INPUT_data_V_0_load_A)) begin
        INPUT_data_V_0_payload_A <= in_stream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == INPUT_data_V_0_load_B)) begin
        INPUT_data_V_0_payload_B <= in_stream_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == OUTPUT_data_V_1_load_A)) begin
        OUTPUT_data_V_1_payload_A <= p_Result_29_fu_2347_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == OUTPUT_data_V_1_load_B)) begin
        OUTPUT_data_V_1_payload_B <= p_Result_29_fu_2347_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == OUTPUT_last_V_1_load_A)) begin
        OUTPUT_last_V_1_payload_A <= out_stream_last_V_tm_reg_2881;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == OUTPUT_last_V_1_load_B)) begin
        OUTPUT_last_V_1_payload_B <= out_stream_last_V_tm_reg_2881;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == OUTPUT_user_V_1_load_A)) begin
        OUTPUT_user_V_1_payload_A <= out_stream_user_V_tm_reg_2876;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == OUTPUT_user_V_1_load_B)) begin
        OUTPUT_user_V_1_payload_B <= out_stream_user_V_tm_reg_2876;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten_fu_2238_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        c14_mid2_reg_2866 <= c14_mid2_fu_2260_p3;
        out_stream_last_V_tm_reg_2881 <= out_stream_last_V_tm_fu_2336_p2;
        out_stream_user_V_tm_reg_2876 <= out_stream_user_V_tm_fu_2325_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        c_12_reg_2735 <= c_12_fu_1805_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((xk1_M_imag_empty_n == 1'b0) & (exitcond16_fu_1756_p2 == 1'd0)) | ((xk1_M_real_empty_n == 1'b0) & (exitcond16_fu_1756_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state79))) begin
        c_13_reg_2699 <= c_13_fu_1761_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out5_empty_n == 1'b0) & (exitcond19_fu_1767_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state83))) begin
        c_16_reg_2717 <= c_16_fu_1772_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((xk2_M_imag_empty_n == 1'b0) & (exitcond20_fu_1892_p2 == 1'd0)) | ((xk2_M_real_empty_n == 1'b0) & (exitcond20_fu_1892_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state95))) begin
        c_17_reg_2804 <= c_17_fu_1897_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten_reg_2857 == 1'd0) & (1'b0 == ap_block_pp1_stage3_11001))) begin
        c_1_reg_2901 <= c_1_fu_2342_p2;
        tmp_99_reg_2896 <= res_data_stream_0_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((xn1_M_imag_empty_n == 1'b0) & (exitcond10_fu_1529_p2 == 1'd0)) | ((xn1_M_real_empty_n == 1'b0) & (exitcond10_fu_1529_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state21))) begin
        c_4_reg_2513 <= c_4_fu_1534_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out1_empty_n == 1'b0) & (exitcond11_fu_1540_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state25))) begin
        c_5_reg_2531 <= c_5_fu_1545_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((kernel_M_imag_empty_n == 1'b0) & (exitcond5_fu_1643_p2 == 1'd0)) | ((kernel_M_real_empty_n == 1'b0) & (exitcond5_fu_1643_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state46))) begin
        c_6_reg_2611 <= c_6_fu_1649_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        c_7_reg_2559 <= c_7_fu_1579_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out3_empty_n == 1'b0) & (exitcond14_fu_1655_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state50))) begin
        c_8_reg_2629 <= c_8_fu_1660_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        c_9_reg_2647 <= c_9_fu_1694_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((src_bw_data_stream_0_empty_n == 1'b0) & (exitcond9_fu_1503_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state12))) begin
        c_reg_2482 <= c_fu_1508_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        exitcond_flatten_reg_2857 <= exitcond_flatten_fu_2238_p2;
        exitcond_flatten_reg_2857_pp1_iter1_reg <= exitcond_flatten_reg_2857;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((kernel_M_imag_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0)) | ((kernel_M_real_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (tmp_55_fu_1404_p2 == 1'd1) & (tmp_54_fu_1398_p2 == 1'd1) & (guard_variable_for_W_1_reg_2401 == 1'd0))) begin
        guard_variable_for_W <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | ((kernel_M_imag_full_n == 1'b0) & (guard_variable_for_W == 1'd0)) | ((kernel_M_real_full_n == 1'b0) & (guard_variable_for_W == 1'd0))) & (1'b1 == ap_CS_fsm_state1))) begin
        guard_variable_for_W_1_reg_2401 <= guard_variable_for_W;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten_next_reg_2861 <= indvar_flatten_next_fu_2243_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((xk2_M_imag_empty_n == 1'b0) & (exitcond20_fu_1892_p2 == 1'd0)) | ((xk2_M_real_empty_n == 1'b0) & (exitcond20_fu_1892_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state95) & (exitcond20_fu_1892_p2 == 1'd0))) begin
        isNeg_reg_2819 <= sh_assign_fu_1933_p2[32'd8];
        p_Result_s_reg_2809 <= p_Val2_101_fu_1903_p1[32'd31];
        tmp_V_8_reg_2814 <= tmp_V_8_fu_1925_p1;
        ush_reg_2824 <= ush_fu_1957_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((kernel_M_imag_empty_n == 1'b0) & (exitcond5_fu_1643_p2 == 1'd0)) | ((kernel_M_real_empty_n == 1'b0) & (exitcond5_fu_1643_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state46) & (exitcond5_fu_1643_p2 == 1'd0))) begin
        kernel_M_imag_read_reg_2621 <= kernel_M_imag_dout;
        kernel_M_real_read_reg_2616 <= kernel_M_real_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((middle2_M_imag_empty_n == 1'b0) & (exitcond18_fu_1811_p2 == 1'd0)) | ((middle2_M_real_empty_n == 1'b0) & (exitcond18_fu_1811_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state87) & (exitcond18_fu_1811_p2 == 1'd0))) begin
        middle2_M_imag_read_reg_2753 <= middle2_M_imag_dout;
        middle2_M_real_read_reg_2748 <= middle2_M_real_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((out1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
        out1_M_imag_load_ne_reg_2546 <= {{out1_dout[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((out2_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
        out2_M_imag_load_ne_reg_2590 <= {{out2_dout[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((out3_empty_n == 1'b0) | (grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b0)) & (1'b1 == ap_CS_fsm_state51))) begin
        out3_M_imag_load_ne_reg_2639 <= {{out3_dout[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state59) & (out4_empty_n == 1'b1))) begin
        out4_M_imag_load_ne_reg_2678 <= {{out4_dout[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b0) | (out5_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state84))) begin
        out5_M_imag_load_ne_reg_2727 <= {{out5_dout[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b0) | (out6_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state92))) begin
        out6_M_imag_load_ne_reg_2771 <= {{out6_dout[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        p_Val2_108_reg_2835 <= p_Val2_108_fu_2035_p3;
        tmp_105_reg_2840 <= tmp_105_fu_2042_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        p_sum1_reg_2413 <= p_sum1_fu_1386_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        r_10_reg_2603 <= r_10_fu_1637_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        r_13_reg_2691 <= r_13_fu_1750_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out4_empty_n == 1'b0) & (exitcond17_fu_1712_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state58))) begin
        r_14_reg_2663 <= r_14_fu_1717_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        r_15_reg_2780 <= r_15_fu_1860_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((middle2_M_imag_empty_n == 1'b0) & (exitcond18_fu_1811_p2 == 1'd0)) | ((middle2_M_real_empty_n == 1'b0) & (exitcond18_fu_1811_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state87))) begin
        r_16_reg_2743 <= r_16_fu_1816_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out6_empty_n == 1'b0) & (exitcond21_fu_1822_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state91))) begin
        r_18_reg_2761 <= r_18_fu_1827_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        r_4_reg_2451 <= r_4_fu_1447_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        r_5_reg_2474 <= r_5_fu_1497_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        r_6_reg_2505 <= r_6_fu_1523_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((middle_M_imag_empty_n == 1'b0) & (exitcond3_fu_1585_p2 == 1'd0)) | ((middle_M_real_empty_n == 1'b0) & (exitcond3_fu_1585_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state33))) begin
        r_7_reg_2567 <= r_7_fu_1591_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out2_empty_n == 1'b0) & (exitcond6_fu_1597_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state37))) begin
        r_8_reg_2575 <= r_8_fu_1603_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((middle_M_imag_empty_n == 1'b0) & (exitcond_fu_1700_p2 == 1'd0)) | ((middle_M_real_empty_n == 1'b0) & (exitcond_fu_1700_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state54))) begin
        r_9_reg_2655 <= r_9_fu_1706_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state29) | ((grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b1) & (1'b1 == ap_CS_fsm_state63)) | ((grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b1) & (1'b1 == ap_CS_fsm_state42)) | ((grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b1) & (1'b1 == ap_CS_fsm_state30)))) begin
        reg_1354 <= grp_fu_1345_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~(((middle_M_imag_empty_n == 1'b0) & (exitcond_fu_1700_p2 == 1'd0)) | ((middle_M_real_empty_n == 1'b0) & (exitcond_fu_1700_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state54) & (exitcond_fu_1700_p2 == 1'd0)) | (~(((middle_M_imag_empty_n == 1'b0) & (exitcond3_fu_1585_p2 == 1'd0)) | ((middle_M_real_empty_n == 1'b0) & (exitcond3_fu_1585_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state33) & (exitcond3_fu_1585_p2 == 1'd0)))) begin
        reg_1360 <= middle_M_real_dout;
        reg_1365 <= middle_M_imag_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out6_empty_n == 1'b0) & (exitcond21_fu_1822_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state91) & (exitcond21_fu_1822_p2 == 1'd0))) begin
        tmp_112_reg_2766 <= tmp_112_fu_1833_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_56_reg_2447 == 1'd1))) begin
        tmp_3_reg_2456 <= {{INPUT_data_V_0_data_out[15:8]}};
        tmp_5_reg_2461 <= {{INPUT_data_V_0_data_out[23:16]}};
        tmp_7_reg_2466 <= {{INPUT_data_V_0_data_out[31:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_56_reg_2447 <= tmp_56_fu_1442_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((src_bw_data_stream_0_empty_n == 1'b0) & (exitcond9_fu_1503_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state12) & (exitcond9_fu_1503_p2 == 1'd0))) begin
        tmp_63_reg_2487 <= src_bw_data_stream_0_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_64_reg_2497 <= grp_fu_1351_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out1_empty_n == 1'b0) & (exitcond11_fu_1540_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state25) & (exitcond11_fu_1540_p2 == 1'd0))) begin
        tmp_74_reg_2536 <= tmp_74_fu_1551_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out2_empty_n == 1'b0) & (exitcond6_fu_1597_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state37) & (exitcond6_fu_1597_p2 == 1'd0))) begin
        tmp_75_reg_2580 <= tmp_75_fu_1609_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out3_empty_n == 1'b0) & (exitcond14_fu_1655_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state50) & (exitcond14_fu_1655_p2 == 1'd0))) begin
        tmp_77_reg_2634 <= tmp_77_fu_1666_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out4_empty_n == 1'b0) & (exitcond17_fu_1712_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state58) & (exitcond17_fu_1712_p2 == 1'd0))) begin
        tmp_80_reg_2668 <= tmp_80_fu_1723_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten_fu_2238_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_87_mid2_v_reg_2871 <= tmp_87_mid2_v_fu_2285_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out5_empty_n == 1'b0) & (exitcond19_fu_1767_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state83) & (exitcond19_fu_1767_p2 == 1'd0))) begin
        tmp_87_reg_2722 <= tmp_87_fu_1778_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten_reg_2857 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        tmp_95_reg_2886 <= res_data_stream_0_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten_reg_2857 == 1'd0) & (1'b0 == ap_block_pp1_stage2_11001))) begin
        tmp_96_reg_2891 <= res_data_stream_0_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((xk1_M_imag_empty_n == 1'b0) & (exitcond16_fu_1756_p2 == 1'd0)) | ((xk1_M_real_empty_n == 1'b0) & (exitcond16_fu_1756_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state79) & (exitcond16_fu_1756_p2 == 1'd0))) begin
        xk1_M_imag_read_reg_2709 <= xk1_M_imag_dout;
        xk1_M_real_read_reg_2704 <= xk1_M_real_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((xn1_M_imag_empty_n == 1'b0) & (exitcond10_fu_1529_p2 == 1'd0)) | ((xn1_M_real_empty_n == 1'b0) & (exitcond10_fu_1529_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state21) & (exitcond10_fu_1529_p2 == 1'd0))) begin
        xn1_M_imag_read_reg_2523 <= xn1_M_imag_dout;
        xn1_M_real_read_reg_2518 <= xn1_M_real_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        G1_M_imag_din = grp_matrix_plus_SNR_fu_1284_G1_M_imag_din;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        G1_M_imag_din = grp_matrix_div_1_fu_1204_G1_M_imag_din;
    end else begin
        G1_M_imag_din = grp_matrix_plus_SNR_fu_1284_G1_M_imag_din;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        G1_M_imag_read = grp_matrix_div_fu_1216_G1_M_imag_read;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        G1_M_imag_read = grp_matrix_div_1_fu_1204_G1_M_imag_read;
    end else begin
        G1_M_imag_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        G1_M_imag_write = grp_matrix_plus_SNR_fu_1284_G1_M_imag_write;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        G1_M_imag_write = grp_matrix_div_1_fu_1204_G1_M_imag_write;
    end else begin
        G1_M_imag_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        G1_M_real_din = grp_matrix_plus_SNR_fu_1284_G1_M_real_din;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        G1_M_real_din = grp_matrix_div_1_fu_1204_G1_M_real_din;
    end else begin
        G1_M_real_din = grp_matrix_plus_SNR_fu_1284_G1_M_real_din;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        G1_M_real_read = grp_matrix_div_fu_1216_G1_M_real_read;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        G1_M_real_read = grp_matrix_div_1_fu_1204_G1_M_real_read;
    end else begin
        G1_M_real_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        G1_M_real_write = grp_matrix_plus_SNR_fu_1284_G1_M_real_write;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        G1_M_real_write = grp_matrix_div_1_fu_1204_G1_M_real_write;
    end else begin
        G1_M_real_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        G_M_imag_read = grp_InnerProd381_fu_1252_G_M_imag_read;
    end else begin
        G_M_imag_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        G_M_imag_write = grp_matrix_div_fu_1216_G_M_imag_write;
    end else begin
        G_M_imag_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        G_M_real_read = grp_InnerProd381_fu_1252_G_M_real_read;
    end else begin
        G_M_real_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        G_M_real_write = grp_matrix_div_fu_1216_G_M_real_write;
    end else begin
        G_M_real_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_56_reg_2447 == 1'd1))) begin
        INPUT_data_V_0_ack_out = 1'b1;
    end else begin
        INPUT_data_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == INPUT_data_V_0_sel)) begin
        INPUT_data_V_0_data_out = INPUT_data_V_0_payload_B;
    end else begin
        INPUT_data_V_0_data_out = INPUT_data_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_56_reg_2447 == 1'd1))) begin
        INPUT_last_V_0_ack_out = 1'b1;
    end else begin
        INPUT_last_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == OUTPUT_data_V_1_sel)) begin
        OUTPUT_data_V_1_data_out = OUTPUT_data_V_1_payload_B;
    end else begin
        OUTPUT_data_V_1_data_out = OUTPUT_data_V_1_payload_A;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten_reg_2857 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        OUTPUT_data_V_1_vld_in = 1'b1;
    end else begin
        OUTPUT_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == OUTPUT_last_V_1_sel)) begin
        OUTPUT_last_V_1_data_out = OUTPUT_last_V_1_payload_B;
    end else begin
        OUTPUT_last_V_1_data_out = OUTPUT_last_V_1_payload_A;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten_reg_2857 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        OUTPUT_last_V_1_vld_in = 1'b1;
    end else begin
        OUTPUT_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == OUTPUT_user_V_1_sel)) begin
        OUTPUT_user_V_1_data_out = OUTPUT_user_V_1_payload_B;
    end else begin
        OUTPUT_user_V_1_data_out = OUTPUT_user_V_1_payload_A;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten_reg_2857 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        OUTPUT_user_V_1_vld_in = 1'b1;
    end else begin
        OUTPUT_user_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_56_fu_1442_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_2238_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state98 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state98 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == OUTPUT_last_V_1_ack_in) | (1'b0 == OUTPUT_user_V_1_ack_in) | (1'b0 == OUTPUT_data_V_1_ack_in)) & (OUTPUT_last_V_1_state[1'd0] == 1'b0) & (OUTPUT_user_V_1_state[1'd0] == 1'b0) & (OUTPUT_data_V_1_state[1'd0] == 1'b0) & (1'b1 == ap_CS_fsm_state104))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten_reg_2857 == 1'd0))) begin
        ap_phi_mux_c12_phi_fu_1136_p4 = c_1_reg_2901;
    end else begin
        ap_phi_mux_c12_phi_fu_1136_p4 = c12_reg_1132;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten_reg_2857 == 1'd0))) begin
        ap_phi_mux_i_op_assign_12_phi_fu_1125_p4 = tmp_87_mid2_v_reg_2871;
    end else begin
        ap_phi_mux_i_op_assign_12_phi_fu_1125_p4 = i_op_assign_12_reg_1121;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten_reg_2857 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_1114_p4 = indvar_flatten_next_reg_2861;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_1114_p4 = indvar_flatten_reg_1110;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (tmp_56_reg_2447 == 1'd1))) begin
        ap_phi_mux_r_phi_fu_861_p4 = r_4_reg_2451;
    end else begin
        ap_phi_mux_r_phi_fu_861_p4 = r_reg_857;
    end
end

always @ (*) begin
    if ((~((1'b0 == OUTPUT_last_V_1_ack_in) | (1'b0 == OUTPUT_user_V_1_ack_in) | (1'b0 == OUTPUT_data_V_1_ack_in)) & (OUTPUT_last_V_1_state[1'd0] == 1'b0) & (OUTPUT_user_V_1_state[1'd0] == 1'b0) & (OUTPUT_data_V_1_state[1'd0] == 1'b0) & (1'b1 == ap_CS_fsm_state104))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        fft_kernel_M_imag_read = grp_InnerProd382_fu_1268_fft_kernel_M_imag_read;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        fft_kernel_M_imag_read = grp_matrix_div_fu_1216_fft_kernel_M_imag_read;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        fft_kernel_M_imag_read = grp_matrix_modulus_fu_1143_fft_kernel_M_imag_read;
    end else begin
        fft_kernel_M_imag_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        fft_kernel_M_imag_write = grp_imag380_fu_1332_complex_float_M_imag_write;
    end else begin
        fft_kernel_M_imag_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        fft_kernel_M_real_read = grp_InnerProd382_fu_1268_fft_kernel_M_real_read;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        fft_kernel_M_real_read = grp_matrix_div_fu_1216_fft_kernel_M_real_read;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        fft_kernel_M_real_read = grp_matrix_modulus_fu_1143_fft_kernel_M_real_read;
    end else begin
        fft_kernel_M_real_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        fft_kernel_M_real_write = grp_real379_fu_1320_complex_float_M_real_write;
    end else begin
        fft_kernel_M_real_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        fft_kernel_modu2_M_1_read = grp_matrix_plus_SNR_fu_1284_fft_kernel_modu2_M_1_read;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        fft_kernel_modu2_M_1_read = grp_matrix_div_1_fu_1204_fft_kernel_modu2_M_1_read;
    end else begin
        fft_kernel_modu2_M_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        fft_kernel_modu2_M_1_write = grp_InnerProd_1_fu_1240_fft_kernel_modu2_M_1_write;
    end else begin
        fft_kernel_modu2_M_1_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        fft_kernel_modu2_M_s_read = grp_matrix_plus_SNR_fu_1284_fft_kernel_modu2_M_s_read;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        fft_kernel_modu2_M_s_read = grp_matrix_div_1_fu_1204_fft_kernel_modu2_M_s_read;
    end else begin
        fft_kernel_modu2_M_s_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        fft_kernel_modu2_M_s_write = grp_InnerProd_1_fu_1240_fft_kernel_modu2_M_s_write;
    end else begin
        fft_kernel_modu2_M_s_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        fft_kernel_modu_M_i_read = grp_InnerProd_1_fu_1240_fft_kernel_modu_M_i_read;
    end else begin
        fft_kernel_modu_M_i_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        fft_kernel_modu_M_i_write = grp_matrix_modulus_fu_1143_fft_kernel_modu_M_i_write;
    end else begin
        fft_kernel_modu_M_i_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        fft_kernel_modu_M_r_read = grp_InnerProd_1_fu_1240_fft_kernel_modu_M_r_read;
    end else begin
        fft_kernel_modu_M_r_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        fft_kernel_modu_M_r_write = grp_matrix_modulus_fu_1143_fft_kernel_modu_M_r_write;
    end else begin
        fft_kernel_modu_M_r_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        gauss_blur_M_imag_read = grp_InnerProd381_fu_1252_gauss_blur_M_imag_read;
    end else begin
        gauss_blur_M_imag_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        gauss_blur_M_imag_write = grp_InnerProd382_fu_1268_gauss_blur_M_imag_write;
    end else begin
        gauss_blur_M_imag_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        gauss_blur_M_real_read = grp_InnerProd381_fu_1252_gauss_blur_M_real_read;
    end else begin
        gauss_blur_M_real_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        gauss_blur_M_real_write = grp_InnerProd382_fu_1268_gauss_blur_M_real_write;
    end else begin
        gauss_blur_M_real_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state82))) begin
        grp_fft_top_fu_1179_direction = 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fft_top_fu_1179_direction = 1'd0;
    end else begin
        grp_fft_top_fu_1179_direction = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fft_top_fu_1179_in_r_dout = in6_dout;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        grp_fft_top_fu_1179_in_r_dout = in5_dout;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        grp_fft_top_fu_1179_in_r_dout = in4_dout;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fft_top_fu_1179_in_r_dout = in3_dout;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fft_top_fu_1179_in_r_dout = in2_dout;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fft_top_fu_1179_in_r_dout = in1_dout;
    end else begin
        grp_fft_top_fu_1179_in_r_dout = in6_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fft_top_fu_1179_in_r_empty_n = in6_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        grp_fft_top_fu_1179_in_r_empty_n = in5_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        grp_fft_top_fu_1179_in_r_empty_n = in4_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fft_top_fu_1179_in_r_empty_n = in3_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fft_top_fu_1179_in_r_empty_n = in2_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fft_top_fu_1179_in_r_empty_n = in1_empty_n;
    end else begin
        grp_fft_top_fu_1179_in_r_empty_n = in6_empty_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fft_top_fu_1179_out_r_full_n = out6_full_n;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        grp_fft_top_fu_1179_out_r_full_n = out5_full_n;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        grp_fft_top_fu_1179_out_r_full_n = out4_full_n;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fft_top_fu_1179_out_r_full_n = out3_full_n;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fft_top_fu_1179_out_r_full_n = out2_full_n;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fft_top_fu_1179_out_r_full_n = out1_full_n;
    end else begin
        grp_fft_top_fu_1179_out_r_full_n = out6_full_n;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state60) | ((out2_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state38)) | ((out1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state26)) | ((grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b1) & (1'b1 == ap_CS_fsm_state63)) | ((grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b1) & (1'b1 == ap_CS_fsm_state42)) | ((grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b1) & (1'b1 == ap_CS_fsm_state30)) | ((1'b1 == ap_CS_fsm_state59) & (out4_empty_n == 1'b1)))) begin
        grp_fu_1345_ce = 1'b1;
    end else begin
        grp_fu_1345_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_fu_1345_p0 = out4_M_imag_load_fu_1741_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_1345_p0 = out4_M_real_load_fu_1727_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_1345_p0 = out2_M_imag_load_fu_1627_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_1345_p0 = out2_M_real_load_fu_1613_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_1345_p0 = out1_M_imag_load_fu_1569_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_1345_p0 = out1_M_real_load_fu_1555_p1;
    end else begin
        grp_fu_1345_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59))) begin
        grp_fu_1345_p1 = 32'd1056964608;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_fu_1345_p1 = 32'd998244352;
    end else begin
        grp_fu_1345_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state31) | ((grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b1) & (1'b1 == ap_CS_fsm_state19)))) begin
        grp_imag380_fu_1332_ap_start = 1'b1;
    end else begin
        grp_imag380_fu_1332_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_imag380_fu_1332_complex_float_M_imag_full_n = xk2_M_imag_full_n;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_imag380_fu_1332_complex_float_M_imag_full_n = middle2_M_imag_full_n;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_imag380_fu_1332_complex_float_M_imag_full_n = fft_kernel_M_imag_full_n;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_imag380_fu_1332_complex_float_M_imag_full_n = xk1_M_imag_full_n;
    end else if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_imag380_fu_1332_complex_float_M_imag_full_n = middle_M_imag_full_n;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_imag380_fu_1332_complex_float_M_imag_full_n = xn1_M_imag_full_n;
    end else begin
        grp_imag380_fu_1332_complex_float_M_imag_full_n = xk2_M_imag_full_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_imag380_fu_1332_p_val = out6_M_imag_load_fu_1851_p1;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_imag380_fu_1332_p_val = out5_M_imag_load_fu_1796_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        grp_imag380_fu_1332_p_val = out3_M_imag_load_fu_1684_p1;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_imag380_fu_1332_p_val = reg_1354;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_imag380_fu_1332_p_val = 32'd0;
    end else begin
        grp_imag380_fu_1332_p_val = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_imag_1_fu_1308_ap_start = 1'b1;
    end else begin
        grp_imag_1_fu_1308_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        grp_imag_1_fu_1308_complex_float_s_dout = in6_dout;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_imag_1_fu_1308_complex_float_s_dout = in5_dout;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_imag_1_fu_1308_complex_float_s_dout = in4_dout;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_imag_1_fu_1308_complex_float_s_dout = in3_dout;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_imag_1_fu_1308_complex_float_s_dout = in2_dout;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_imag_1_fu_1308_complex_float_s_dout = in1_dout;
    end else begin
        grp_imag_1_fu_1308_complex_float_s_dout = in6_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        grp_imag_1_fu_1308_complex_float_s_empty_n = in6_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_imag_1_fu_1308_complex_float_s_empty_n = in5_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_imag_1_fu_1308_complex_float_s_empty_n = in4_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_imag_1_fu_1308_complex_float_s_empty_n = in3_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_imag_1_fu_1308_complex_float_s_empty_n = in2_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_imag_1_fu_1308_complex_float_s_empty_n = in1_empty_n;
    end else begin
        grp_imag_1_fu_1308_complex_float_s_empty_n = in6_empty_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        grp_imag_1_fu_1308_complex_float_s_full_n = in6_full_n;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_imag_1_fu_1308_complex_float_s_full_n = in5_full_n;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_imag_1_fu_1308_complex_float_s_full_n = in4_full_n;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_imag_1_fu_1308_complex_float_s_full_n = in3_full_n;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_imag_1_fu_1308_complex_float_s_full_n = in2_full_n;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_imag_1_fu_1308_complex_float_s_full_n = in1_full_n;
    end else begin
        grp_imag_1_fu_1308_complex_float_s_full_n = in6_full_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        grp_imag_1_fu_1308_p_val = middle2_M_imag_read_reg_2753;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_imag_1_fu_1308_p_val = xk1_M_imag_read_reg_2709;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_imag_1_fu_1308_p_val = kernel_M_imag_read_reg_2621;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_imag_1_fu_1308_p_val = reg_1365;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_imag_1_fu_1308_p_val = xn1_M_imag_read_reg_2523;
    end else begin
        grp_imag_1_fu_1308_p_val = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state30) | ((1'b1 == ap_CS_fsm_state19) & (grp_imag380_fu_1332_complex_float_M_imag_blk_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state92) & (out6_empty_n == 1'b1)) | ((1'b1 == ap_CS_fsm_state84) & (out5_empty_n == 1'b1)) | ((out3_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state51)))) begin
        grp_real379_fu_1320_ap_start = 1'b1;
    end else begin
        grp_real379_fu_1320_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        grp_real379_fu_1320_complex_float_M_real_full_n = xk2_M_real_full_n;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        grp_real379_fu_1320_complex_float_M_real_full_n = middle2_M_real_full_n;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_real379_fu_1320_complex_float_M_real_full_n = fft_kernel_M_real_full_n;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_real379_fu_1320_complex_float_M_real_full_n = xk1_M_real_full_n;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state51))) begin
        grp_real379_fu_1320_complex_float_M_real_full_n = middle_M_real_full_n;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_real379_fu_1320_complex_float_M_real_full_n = xn1_M_real_full_n;
    end else begin
        grp_real379_fu_1320_complex_float_M_real_full_n = xk2_M_real_full_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        grp_real379_fu_1320_p_val = out6_M_real_load_fu_1837_p1;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        grp_real379_fu_1320_p_val = out5_M_real_load_fu_1782_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_real379_fu_1320_p_val = out3_M_real_load_fu_1670_p1;
    end else if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_real379_fu_1320_p_val = reg_1354;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_real379_fu_1320_p_val = tmp_64_reg_2497;
    end else begin
        grp_real379_fu_1320_p_val = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_real_1_fu_1296_ap_start = 1'b1;
    end else begin
        grp_real_1_fu_1296_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_real_1_fu_1296_complex_float_s_dout = in6_dout;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_real_1_fu_1296_complex_float_s_dout = in5_dout;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_real_1_fu_1296_complex_float_s_dout = in4_dout;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_real_1_fu_1296_complex_float_s_dout = in3_dout;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_real_1_fu_1296_complex_float_s_dout = in2_dout;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_real_1_fu_1296_complex_float_s_dout = in1_dout;
    end else begin
        grp_real_1_fu_1296_complex_float_s_dout = in6_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_real_1_fu_1296_complex_float_s_empty_n = in6_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_real_1_fu_1296_complex_float_s_empty_n = in5_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_real_1_fu_1296_complex_float_s_empty_n = in4_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_real_1_fu_1296_complex_float_s_empty_n = in3_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_real_1_fu_1296_complex_float_s_empty_n = in2_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_real_1_fu_1296_complex_float_s_empty_n = in1_empty_n;
    end else begin
        grp_real_1_fu_1296_complex_float_s_empty_n = in6_empty_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_real_1_fu_1296_complex_float_s_full_n = in6_full_n;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_real_1_fu_1296_complex_float_s_full_n = in5_full_n;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_real_1_fu_1296_complex_float_s_full_n = in4_full_n;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_real_1_fu_1296_complex_float_s_full_n = in3_full_n;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_real_1_fu_1296_complex_float_s_full_n = in2_full_n;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_real_1_fu_1296_complex_float_s_full_n = in1_full_n;
    end else begin
        grp_real_1_fu_1296_complex_float_s_full_n = in6_full_n;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_real_1_fu_1296_p_val = middle2_M_real_read_reg_2748;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_real_1_fu_1296_p_val = xk1_M_real_read_reg_2704;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_real_1_fu_1296_p_val = kernel_M_real_read_reg_2616;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_real_1_fu_1296_p_val = reg_1360;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_real_1_fu_1296_p_val = xn1_M_real_read_reg_2518;
    end else begin
        grp_real_1_fu_1296_p_val = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        in1_din = grp_imag_1_fu_1308_complex_float_s_din;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        in1_din = grp_real_1_fu_1296_complex_float_s_din;
    end else begin
        in1_din = grp_imag_1_fu_1308_complex_float_s_din;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        in1_read = grp_imag_1_fu_1308_complex_float_s_read;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        in1_read = grp_real_1_fu_1296_complex_float_s_read;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        in1_read = grp_fft_top_fu_1179_in_r_read;
    end else begin
        in1_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        in1_write = grp_imag_1_fu_1308_complex_float_s_write;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        in1_write = grp_real_1_fu_1296_complex_float_s_write;
    end else begin
        in1_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        in2_din = grp_imag_1_fu_1308_complex_float_s_din;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        in2_din = grp_real_1_fu_1296_complex_float_s_din;
    end else begin
        in2_din = grp_imag_1_fu_1308_complex_float_s_din;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        in2_read = grp_imag_1_fu_1308_complex_float_s_read;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        in2_read = grp_real_1_fu_1296_complex_float_s_read;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        in2_read = grp_fft_top_fu_1179_in_r_read;
    end else begin
        in2_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        in2_write = grp_imag_1_fu_1308_complex_float_s_write;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        in2_write = grp_real_1_fu_1296_complex_float_s_write;
    end else begin
        in2_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        in3_din = grp_imag_1_fu_1308_complex_float_s_din;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        in3_din = grp_real_1_fu_1296_complex_float_s_din;
    end else begin
        in3_din = grp_imag_1_fu_1308_complex_float_s_din;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        in3_read = grp_imag_1_fu_1308_complex_float_s_read;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        in3_read = grp_real_1_fu_1296_complex_float_s_read;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        in3_read = grp_fft_top_fu_1179_in_r_read;
    end else begin
        in3_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        in3_write = grp_imag_1_fu_1308_complex_float_s_write;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        in3_write = grp_real_1_fu_1296_complex_float_s_write;
    end else begin
        in3_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        in4_din = grp_imag_1_fu_1308_complex_float_s_din;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        in4_din = grp_real_1_fu_1296_complex_float_s_din;
    end else begin
        in4_din = grp_imag_1_fu_1308_complex_float_s_din;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        in4_read = grp_imag_1_fu_1308_complex_float_s_read;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        in4_read = grp_real_1_fu_1296_complex_float_s_read;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        in4_read = grp_fft_top_fu_1179_in_r_read;
    end else begin
        in4_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        in4_write = grp_imag_1_fu_1308_complex_float_s_write;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        in4_write = grp_real_1_fu_1296_complex_float_s_write;
    end else begin
        in4_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        in5_din = grp_imag_1_fu_1308_complex_float_s_din;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        in5_din = grp_real_1_fu_1296_complex_float_s_din;
    end else begin
        in5_din = grp_imag_1_fu_1308_complex_float_s_din;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        in5_read = grp_imag_1_fu_1308_complex_float_s_read;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        in5_read = grp_real_1_fu_1296_complex_float_s_read;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        in5_read = grp_fft_top_fu_1179_in_r_read;
    end else begin
        in5_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        in5_write = grp_imag_1_fu_1308_complex_float_s_write;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        in5_write = grp_real_1_fu_1296_complex_float_s_write;
    end else begin
        in5_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        in6_din = grp_imag_1_fu_1308_complex_float_s_din;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        in6_din = grp_real_1_fu_1296_complex_float_s_din;
    end else begin
        in6_din = grp_imag_1_fu_1308_complex_float_s_din;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        in6_read = grp_imag_1_fu_1308_complex_float_s_read;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        in6_read = grp_real_1_fu_1296_complex_float_s_read;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        in6_read = grp_fft_top_fu_1179_in_r_read;
    end else begin
        in6_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        in6_write = grp_imag_1_fu_1308_complex_float_s_write;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        in6_write = grp_real_1_fu_1296_complex_float_s_write;
    end else begin
        in6_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_56_reg_2447 == 1'd1))) begin
        in_stream_TDATA_blk_n = INPUT_data_V_0_state[1'd0];
    end else begin
        in_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((kernel_M_imag_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0)) | ((kernel_M_real_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (guard_variable_for_W_1_reg_2401 == 1'd0)) | (~((kernel_M_imag_full_n == 1'b0) | (kernel_M_real_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((ap_start == 1'b0) | ((kernel_M_imag_full_n == 1'b0) & (guard_variable_for_W == 1'd0)) | ((kernel_M_real_full_n == 1'b0) & (guard_variable_for_W == 1'd0))) & (1'b1 == ap_CS_fsm_state1) & (guard_variable_for_W == 1'd0)))) begin
        kernel_M_imag_din = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        kernel_M_imag_din = grp_KernelMaker_fu_1232_kernel_M_imag_din;
    end else begin
        kernel_M_imag_din = grp_KernelMaker_fu_1232_kernel_M_imag_din;
    end
end

always @ (*) begin
    if ((~(((kernel_M_imag_empty_n == 1'b0) & (exitcond5_fu_1643_p2 == 1'd0)) | ((kernel_M_real_empty_n == 1'b0) & (exitcond5_fu_1643_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state46) & (exitcond5_fu_1643_p2 == 1'd0))) begin
        kernel_M_imag_read = 1'b1;
    end else begin
        kernel_M_imag_read = 1'b0;
    end
end

always @ (*) begin
    if (((~(((kernel_M_imag_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0)) | ((kernel_M_real_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (guard_variable_for_W_1_reg_2401 == 1'd0)) | (~((kernel_M_imag_full_n == 1'b0) | (kernel_M_real_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((ap_start == 1'b0) | ((kernel_M_imag_full_n == 1'b0) & (guard_variable_for_W == 1'd0)) | ((kernel_M_real_full_n == 1'b0) & (guard_variable_for_W == 1'd0))) & (1'b1 == ap_CS_fsm_state1) & (guard_variable_for_W == 1'd0)))) begin
        kernel_M_imag_write = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        kernel_M_imag_write = grp_KernelMaker_fu_1232_kernel_M_imag_write;
    end else begin
        kernel_M_imag_write = 1'b0;
    end
end

always @ (*) begin
    if (((~(((kernel_M_imag_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0)) | ((kernel_M_real_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (guard_variable_for_W_1_reg_2401 == 1'd0)) | (~((kernel_M_imag_full_n == 1'b0) | (kernel_M_real_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((ap_start == 1'b0) | ((kernel_M_imag_full_n == 1'b0) & (guard_variable_for_W == 1'd0)) | ((kernel_M_real_full_n == 1'b0) & (guard_variable_for_W == 1'd0))) & (1'b1 == ap_CS_fsm_state1) & (guard_variable_for_W == 1'd0)))) begin
        kernel_M_real_din = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        kernel_M_real_din = grp_KernelMaker_fu_1232_kernel_M_real_din;
    end else begin
        kernel_M_real_din = grp_KernelMaker_fu_1232_kernel_M_real_din;
    end
end

always @ (*) begin
    if ((~(((kernel_M_imag_empty_n == 1'b0) & (exitcond5_fu_1643_p2 == 1'd0)) | ((kernel_M_real_empty_n == 1'b0) & (exitcond5_fu_1643_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state46) & (exitcond5_fu_1643_p2 == 1'd0))) begin
        kernel_M_real_read = 1'b1;
    end else begin
        kernel_M_real_read = 1'b0;
    end
end

always @ (*) begin
    if (((~(((kernel_M_imag_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0)) | ((kernel_M_real_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (guard_variable_for_W_1_reg_2401 == 1'd0)) | (~((kernel_M_imag_full_n == 1'b0) | (kernel_M_real_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((ap_start == 1'b0) | ((kernel_M_imag_full_n == 1'b0) & (guard_variable_for_W == 1'd0)) | ((kernel_M_real_full_n == 1'b0) & (guard_variable_for_W == 1'd0))) & (1'b1 == ap_CS_fsm_state1) & (guard_variable_for_W == 1'd0)))) begin
        kernel_M_real_write = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        kernel_M_real_write = grp_KernelMaker_fu_1232_kernel_M_real_write;
    end else begin
        kernel_M_real_write = 1'b0;
    end
end

always @ (*) begin
    if ((~(((middle2_M_imag_empty_n == 1'b0) & (exitcond18_fu_1811_p2 == 1'd0)) | ((middle2_M_real_empty_n == 1'b0) & (exitcond18_fu_1811_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state87) & (exitcond18_fu_1811_p2 == 1'd0))) begin
        middle2_M_imag_read = 1'b1;
    end else begin
        middle2_M_imag_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        middle2_M_imag_write = grp_imag380_fu_1332_complex_float_M_imag_write;
    end else begin
        middle2_M_imag_write = 1'b0;
    end
end

always @ (*) begin
    if ((~(((middle2_M_imag_empty_n == 1'b0) & (exitcond18_fu_1811_p2 == 1'd0)) | ((middle2_M_real_empty_n == 1'b0) & (exitcond18_fu_1811_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state87) & (exitcond18_fu_1811_p2 == 1'd0))) begin
        middle2_M_real_read = 1'b1;
    end else begin
        middle2_M_real_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        middle2_M_real_write = grp_real379_fu_1320_complex_float_M_real_write;
    end else begin
        middle2_M_real_write = 1'b0;
    end
end

always @ (*) begin
    if (((~(((middle_M_imag_empty_n == 1'b0) & (exitcond_fu_1700_p2 == 1'd0)) | ((middle_M_real_empty_n == 1'b0) & (exitcond_fu_1700_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state54) & (exitcond_fu_1700_p2 == 1'd0)) | (~(((middle_M_imag_empty_n == 1'b0) & (exitcond3_fu_1585_p2 == 1'd0)) | ((middle_M_real_empty_n == 1'b0) & (exitcond3_fu_1585_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state33) & (exitcond3_fu_1585_p2 == 1'd0)))) begin
        middle_M_imag_read = 1'b1;
    end else begin
        middle_M_imag_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state31))) begin
        middle_M_imag_write = grp_imag380_fu_1332_complex_float_M_imag_write;
    end else begin
        middle_M_imag_write = 1'b0;
    end
end

always @ (*) begin
    if (((~(((middle_M_imag_empty_n == 1'b0) & (exitcond_fu_1700_p2 == 1'd0)) | ((middle_M_real_empty_n == 1'b0) & (exitcond_fu_1700_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state54) & (exitcond_fu_1700_p2 == 1'd0)) | (~(((middle_M_imag_empty_n == 1'b0) & (exitcond3_fu_1585_p2 == 1'd0)) | ((middle_M_real_empty_n == 1'b0) & (exitcond3_fu_1585_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state33) & (exitcond3_fu_1585_p2 == 1'd0)))) begin
        middle_M_real_read = 1'b1;
    end else begin
        middle_M_real_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state51))) begin
        middle_M_real_write = grp_real379_fu_1320_complex_float_M_real_write;
    end else begin
        middle_M_real_write = 1'b0;
    end
end

always @ (*) begin
    if ((((out1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state26)) | (~((out1_empty_n == 1'b0) & (exitcond11_fu_1540_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state25) & (exitcond11_fu_1540_p2 == 1'd0)))) begin
        out1_read = 1'b1;
    end else begin
        out1_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        out1_write = grp_fft_top_fu_1179_out_r_write;
    end else begin
        out1_write = 1'b0;
    end
end

always @ (*) begin
    if ((((out2_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state38)) | (~((out2_empty_n == 1'b0) & (exitcond6_fu_1597_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state37) & (exitcond6_fu_1597_p2 == 1'd0)))) begin
        out2_read = 1'b1;
    end else begin
        out2_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        out2_write = grp_fft_top_fu_1179_out_r_write;
    end else begin
        out2_write = 1'b0;
    end
end

always @ (*) begin
    if (((~((out3_empty_n == 1'b0) & (exitcond14_fu_1655_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state50) & (exitcond14_fu_1655_p2 == 1'd0)) | (~((out3_empty_n == 1'b0) | (grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b0)) & (1'b1 == ap_CS_fsm_state51)))) begin
        out3_read = 1'b1;
    end else begin
        out3_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        out3_write = grp_fft_top_fu_1179_out_r_write;
    end else begin
        out3_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state59) & (out4_empty_n == 1'b1)) | (~((out4_empty_n == 1'b0) & (exitcond17_fu_1712_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state58) & (exitcond17_fu_1712_p2 == 1'd0)))) begin
        out4_read = 1'b1;
    end else begin
        out4_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        out4_write = grp_fft_top_fu_1179_out_r_write;
    end else begin
        out4_write = 1'b0;
    end
end

always @ (*) begin
    if (((~((grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b0) | (out5_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state84)) | (~((out5_empty_n == 1'b0) & (exitcond19_fu_1767_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state83) & (exitcond19_fu_1767_p2 == 1'd0)))) begin
        out5_read = 1'b1;
    end else begin
        out5_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        out5_write = grp_fft_top_fu_1179_out_r_write;
    end else begin
        out5_write = 1'b0;
    end
end

always @ (*) begin
    if (((~((grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b0) | (out6_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state92)) | (~((out6_empty_n == 1'b0) & (exitcond21_fu_1822_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state91) & (exitcond21_fu_1822_p2 == 1'd0)))) begin
        out6_read = 1'b1;
    end else begin
        out6_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        out6_write = grp_fft_top_fu_1179_out_r_write;
    end else begin
        out6_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten_reg_2857_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten_reg_2857 == 1'd0)))) begin
        out_stream_TDATA_blk_n = OUTPUT_data_V_1_state[1'd1];
    end else begin
        out_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten_reg_2857 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten_reg_2857 == 1'd0) & (1'b0 == ap_block_pp1_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten_reg_2857 == 1'd0) & (1'b0 == ap_block_pp1_stage2_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten_reg_2857 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        res_data_stream_0_V_read = 1'b1;
    end else begin
        res_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state97) & (res_data_stream_0_V_full_n == 1'b1))) begin
        res_data_stream_0_V_write = 1'b1;
    end else begin
        res_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_56_reg_2447 == 1'd1)) begin
        if ((1'b1 == ap_condition_2483)) begin
            src_bw_data_stream_0_din = tmp_7_reg_2466;
        end else if ((1'b1 == ap_condition_2478)) begin
            src_bw_data_stream_0_din = tmp_5_reg_2461;
        end else if ((1'b1 == ap_condition_2473)) begin
            src_bw_data_stream_0_din = tmp_3_reg_2456;
        end else if ((1'b1 == ap_condition_2468)) begin
            src_bw_data_stream_0_din = tmp_61_fu_1457_p1;
        end else begin
            src_bw_data_stream_0_din = 'bx;
        end
    end else begin
        src_bw_data_stream_0_din = 'bx;
    end
end

always @ (*) begin
    if ((~((src_bw_data_stream_0_empty_n == 1'b0) & (exitcond9_fu_1503_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state12) & (exitcond9_fu_1503_p2 == 1'd0))) begin
        src_bw_data_stream_0_read = 1'b1;
    end else begin
        src_bw_data_stream_0_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_56_reg_2447 == 1'd1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_56_reg_2447 == 1'd1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (tmp_56_reg_2447 == 1'd1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_56_reg_2447 == 1'd1)))) begin
        src_bw_data_stream_0_write = 1'b1;
    end else begin
        src_bw_data_stream_0_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        xk1_M_imag_din = grp_imag380_fu_1332_complex_float_M_imag_din;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        xk1_M_imag_din = grp_InnerProd381_fu_1252_xk1_M_imag_din;
    end else begin
        xk1_M_imag_din = grp_imag380_fu_1332_complex_float_M_imag_din;
    end
end

always @ (*) begin
    if ((~(((xk1_M_imag_empty_n == 1'b0) & (exitcond16_fu_1756_p2 == 1'd0)) | ((xk1_M_real_empty_n == 1'b0) & (exitcond16_fu_1756_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state79) & (exitcond16_fu_1756_p2 == 1'd0))) begin
        xk1_M_imag_read = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        xk1_M_imag_read = grp_InnerProd382_fu_1268_xk1_M_imag_read;
    end else begin
        xk1_M_imag_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        xk1_M_imag_write = grp_imag380_fu_1332_complex_float_M_imag_write;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        xk1_M_imag_write = grp_InnerProd381_fu_1252_xk1_M_imag_write;
    end else begin
        xk1_M_imag_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        xk1_M_real_din = grp_real379_fu_1320_complex_float_M_real_din;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        xk1_M_real_din = grp_InnerProd381_fu_1252_xk1_M_real_din;
    end else begin
        xk1_M_real_din = grp_real379_fu_1320_complex_float_M_real_din;
    end
end

always @ (*) begin
    if ((~(((xk1_M_imag_empty_n == 1'b0) & (exitcond16_fu_1756_p2 == 1'd0)) | ((xk1_M_real_empty_n == 1'b0) & (exitcond16_fu_1756_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state79) & (exitcond16_fu_1756_p2 == 1'd0))) begin
        xk1_M_real_read = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        xk1_M_real_read = grp_InnerProd382_fu_1268_xk1_M_real_read;
    end else begin
        xk1_M_real_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        xk1_M_real_write = grp_real379_fu_1320_complex_float_M_real_write;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        xk1_M_real_write = grp_InnerProd381_fu_1252_xk1_M_real_write;
    end else begin
        xk1_M_real_write = 1'b0;
    end
end

always @ (*) begin
    if ((~(((xk2_M_imag_empty_n == 1'b0) & (exitcond20_fu_1892_p2 == 1'd0)) | ((xk2_M_real_empty_n == 1'b0) & (exitcond20_fu_1892_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state95) & (exitcond20_fu_1892_p2 == 1'd0))) begin
        xk2_M_imag_read = 1'b1;
    end else begin
        xk2_M_imag_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        xk2_M_imag_write = grp_imag380_fu_1332_complex_float_M_imag_write;
    end else begin
        xk2_M_imag_write = 1'b0;
    end
end

always @ (*) begin
    if ((~(((xk2_M_imag_empty_n == 1'b0) & (exitcond20_fu_1892_p2 == 1'd0)) | ((xk2_M_real_empty_n == 1'b0) & (exitcond20_fu_1892_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state95) & (exitcond20_fu_1892_p2 == 1'd0))) begin
        xk2_M_real_read = 1'b1;
    end else begin
        xk2_M_real_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        xk2_M_real_write = grp_real379_fu_1320_complex_float_M_real_write;
    end else begin
        xk2_M_real_write = 1'b0;
    end
end

always @ (*) begin
    if ((~(((xn1_M_imag_empty_n == 1'b0) & (exitcond10_fu_1529_p2 == 1'd0)) | ((xn1_M_real_empty_n == 1'b0) & (exitcond10_fu_1529_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state21) & (exitcond10_fu_1529_p2 == 1'd0))) begin
        xn1_M_imag_read = 1'b1;
    end else begin
        xn1_M_imag_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        xn1_M_imag_write = grp_imag380_fu_1332_complex_float_M_imag_write;
    end else begin
        xn1_M_imag_write = 1'b0;
    end
end

always @ (*) begin
    if ((~(((xn1_M_imag_empty_n == 1'b0) & (exitcond10_fu_1529_p2 == 1'd0)) | ((xn1_M_real_empty_n == 1'b0) & (exitcond10_fu_1529_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state21) & (exitcond10_fu_1529_p2 == 1'd0))) begin
        xn1_M_real_read = 1'b1;
    end else begin
        xn1_M_real_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        xn1_M_real_write = grp_real379_fu_1320_complex_float_M_real_write;
    end else begin
        xn1_M_real_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | ((kernel_M_imag_full_n == 1'b0) & (guard_variable_for_W == 1'd0)) | ((kernel_M_real_full_n == 1'b0) & (guard_variable_for_W == 1'd0))) & (1'b1 == ap_CS_fsm_state1) & (guard_variable_for_W == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((ap_start == 1'b0) | ((kernel_M_imag_full_n == 1'b0) & (guard_variable_for_W == 1'd0)) | ((kernel_M_real_full_n == 1'b0) & (guard_variable_for_W == 1'd0))) & (1'b1 == ap_CS_fsm_state1) & (guard_variable_for_W_1_load_fu_1370_p1 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((kernel_M_imag_full_n == 1'b0) | (kernel_M_real_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_1380_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((kernel_M_imag_full_n == 1'b0) | (kernel_M_real_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_1380_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if ((~(((kernel_M_imag_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0)) | ((kernel_M_real_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & ((guard_variable_for_W_1_reg_2401 == 1'd1) | ((tmp_55_fu_1404_p2 == 1'd1) & (tmp_54_fu_1398_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~(((kernel_M_imag_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0)) | ((kernel_M_real_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (tmp_54_fu_1398_p2 == 1'd1) & (tmp_55_fu_1404_p2 == 1'd0) & (guard_variable_for_W_1_reg_2401 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~(((kernel_M_imag_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0)) | ((kernel_M_real_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (tmp_54_fu_1398_p2 == 1'd0) & (guard_variable_for_W_1_reg_2401 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_56_fu_1442_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_56_fu_1442_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (exitcond7_fu_1492_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if ((~((src_bw_data_stream_0_empty_n == 1'b0) & (exitcond9_fu_1503_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state12) & (exitcond9_fu_1503_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if ((~((src_bw_data_stream_0_empty_n == 1'b0) & (exitcond9_fu_1503_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state12) & (exitcond9_fu_1503_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if ((~((grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b0) | (grp_imag380_fu_1332_complex_float_M_imag_blk_n == 1'b0)) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (exitcond8_fu_1518_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if ((~(((xn1_M_imag_empty_n == 1'b0) & (exitcond10_fu_1529_p2 == 1'd0)) | ((xn1_M_real_empty_n == 1'b0) & (exitcond10_fu_1529_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state21) & (exitcond10_fu_1529_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else if ((~(((xn1_M_imag_empty_n == 1'b0) & (exitcond10_fu_1529_p2 == 1'd0)) | ((xn1_M_real_empty_n == 1'b0) & (exitcond10_fu_1529_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state21) & (exitcond10_fu_1529_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (grp_real_1_fu_1296_complex_float_s_o_blk_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (grp_imag_1_fu_1308_complex_float_s_o_blk_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (grp_fft_top_fu_1179_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if ((~((out1_empty_n == 1'b0) & (exitcond11_fu_1540_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state25) & (exitcond11_fu_1540_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else if ((~((out1_empty_n == 1'b0) & (exitcond11_fu_1540_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state25) & (exitcond11_fu_1540_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((out1_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if (((grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (grp_imag380_fu_1332_complex_float_M_imag_blk_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((1'b1 == ap_CS_fsm_state32) & (exitcond1_fu_1573_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state33 : begin
            if ((~(((middle_M_imag_empty_n == 1'b0) & (exitcond3_fu_1585_p2 == 1'd0)) | ((middle_M_real_empty_n == 1'b0) & (exitcond3_fu_1585_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state33) & (exitcond3_fu_1585_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else if ((~(((middle_M_imag_empty_n == 1'b0) & (exitcond3_fu_1585_p2 == 1'd0)) | ((middle_M_real_empty_n == 1'b0) & (exitcond3_fu_1585_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state33) & (exitcond3_fu_1585_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & (grp_real_1_fu_1296_complex_float_s_o_blk_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((1'b1 == ap_CS_fsm_state35) & (grp_imag_1_fu_1308_complex_float_s_o_blk_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            if (((1'b1 == ap_CS_fsm_state36) & (grp_fft_top_fu_1179_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            if ((~((out2_empty_n == 1'b0) & (exitcond6_fu_1597_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state37) & (exitcond6_fu_1597_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else if ((~((out2_empty_n == 1'b0) & (exitcond6_fu_1597_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state37) & (exitcond6_fu_1597_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            if (((out2_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            if (((grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b1) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            if (((1'b1 == ap_CS_fsm_state43) & (grp_imag380_fu_1332_complex_float_M_imag_blk_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((1'b1 == ap_CS_fsm_state44) & (grp_KernelMaker_fu_1232_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            if (((1'b1 == ap_CS_fsm_state45) & (exitcond2_fu_1631_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            if ((~(((kernel_M_imag_empty_n == 1'b0) & (exitcond5_fu_1643_p2 == 1'd0)) | ((kernel_M_real_empty_n == 1'b0) & (exitcond5_fu_1643_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state46) & (exitcond5_fu_1643_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else if ((~(((kernel_M_imag_empty_n == 1'b0) & (exitcond5_fu_1643_p2 == 1'd0)) | ((kernel_M_real_empty_n == 1'b0) & (exitcond5_fu_1643_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state46) & (exitcond5_fu_1643_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state47 : begin
            if (((1'b1 == ap_CS_fsm_state47) & (grp_real_1_fu_1296_complex_float_s_o_blk_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state48 : begin
            if (((1'b1 == ap_CS_fsm_state48) & (grp_imag_1_fu_1308_complex_float_s_o_blk_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((1'b1 == ap_CS_fsm_state49) & (grp_fft_top_fu_1179_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state50 : begin
            if ((~((out3_empty_n == 1'b0) & (exitcond14_fu_1655_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state50) & (exitcond14_fu_1655_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else if ((~((out3_empty_n == 1'b0) & (exitcond14_fu_1655_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state50) & (exitcond14_fu_1655_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state51 : begin
            if ((~((out3_empty_n == 1'b0) | (grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b0)) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            if (((1'b1 == ap_CS_fsm_state52) & (grp_imag380_fu_1332_complex_float_M_imag_blk_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            if (((1'b1 == ap_CS_fsm_state53) & (exitcond4_fu_1688_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state54 : begin
            if ((~(((middle_M_imag_empty_n == 1'b0) & (exitcond_fu_1700_p2 == 1'd0)) | ((middle_M_real_empty_n == 1'b0) & (exitcond_fu_1700_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state54) & (exitcond_fu_1700_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else if ((~(((middle_M_imag_empty_n == 1'b0) & (exitcond_fu_1700_p2 == 1'd0)) | ((middle_M_real_empty_n == 1'b0) & (exitcond_fu_1700_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state54) & (exitcond_fu_1700_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state55 : begin
            if (((1'b1 == ap_CS_fsm_state55) & (grp_real_1_fu_1296_complex_float_s_o_blk_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state56 : begin
            if (((1'b1 == ap_CS_fsm_state56) & (grp_imag_1_fu_1308_complex_float_s_o_blk_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end
        end
        ap_ST_fsm_state57 : begin
            if (((1'b1 == ap_CS_fsm_state57) & (grp_fft_top_fu_1179_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state58 : begin
            if ((~((out4_empty_n == 1'b0) & (exitcond17_fu_1712_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state58) & (exitcond17_fu_1712_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else if ((~((out4_empty_n == 1'b0) & (exitcond17_fu_1712_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state58) & (exitcond17_fu_1712_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state59 : begin
            if (((1'b1 == ap_CS_fsm_state59) & (out4_empty_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            if (((grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b1) & (1'b1 == ap_CS_fsm_state63))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state64 : begin
            if (((1'b1 == ap_CS_fsm_state64) & (grp_imag380_fu_1332_complex_float_M_imag_blk_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state65 : begin
            if (((1'b1 == ap_CS_fsm_state65) & (grp_InnerProd382_fu_1268_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            if (((1'b1 == ap_CS_fsm_state67) & (grp_matrix_modulus_fu_1143_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            if (((1'b1 == ap_CS_fsm_state69) & (grp_InnerProd_1_fu_1240_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            if (((1'b1 == ap_CS_fsm_state71) & (grp_matrix_plus_SNR_fu_1284_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            if (((1'b1 == ap_CS_fsm_state73) & (grp_matrix_div_1_fu_1204_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            if (((1'b1 == ap_CS_fsm_state75) & (grp_matrix_div_fu_1216_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            if (((1'b1 == ap_CS_fsm_state77) & (grp_InnerProd381_fu_1252_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end
        end
        ap_ST_fsm_state78 : begin
            if (((1'b1 == ap_CS_fsm_state78) & (exitcond12_fu_1745_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_state79 : begin
            if ((~(((xk1_M_imag_empty_n == 1'b0) & (exitcond16_fu_1756_p2 == 1'd0)) | ((xk1_M_real_empty_n == 1'b0) & (exitcond16_fu_1756_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state79) & (exitcond16_fu_1756_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end else if ((~(((xk1_M_imag_empty_n == 1'b0) & (exitcond16_fu_1756_p2 == 1'd0)) | ((xk1_M_real_empty_n == 1'b0) & (exitcond16_fu_1756_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state79) & (exitcond16_fu_1756_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_state80 : begin
            if (((1'b1 == ap_CS_fsm_state80) & (grp_real_1_fu_1296_complex_float_s_o_blk_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end
        end
        ap_ST_fsm_state81 : begin
            if (((1'b1 == ap_CS_fsm_state81) & (grp_imag_1_fu_1308_complex_float_s_o_blk_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end
        end
        ap_ST_fsm_state82 : begin
            if (((1'b1 == ap_CS_fsm_state82) & (grp_fft_top_fu_1179_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end
        end
        ap_ST_fsm_state83 : begin
            if ((~((out5_empty_n == 1'b0) & (exitcond19_fu_1767_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state83) & (exitcond19_fu_1767_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else if ((~((out5_empty_n == 1'b0) & (exitcond19_fu_1767_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state83) & (exitcond19_fu_1767_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end
        end
        ap_ST_fsm_state84 : begin
            if ((~((grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b0) | (out5_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state84))) begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end
        end
        ap_ST_fsm_state85 : begin
            if (((1'b1 == ap_CS_fsm_state85) & (grp_imag380_fu_1332_complex_float_M_imag_blk_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end
        end
        ap_ST_fsm_state86 : begin
            if (((1'b1 == ap_CS_fsm_state86) & (exitcond13_fu_1800_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end
        end
        ap_ST_fsm_state87 : begin
            if ((~(((middle2_M_imag_empty_n == 1'b0) & (exitcond18_fu_1811_p2 == 1'd0)) | ((middle2_M_real_empty_n == 1'b0) & (exitcond18_fu_1811_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state87) & (exitcond18_fu_1811_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state90;
            end else if ((~(((middle2_M_imag_empty_n == 1'b0) & (exitcond18_fu_1811_p2 == 1'd0)) | ((middle2_M_real_empty_n == 1'b0) & (exitcond18_fu_1811_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state87) & (exitcond18_fu_1811_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end
        end
        ap_ST_fsm_state88 : begin
            if (((1'b1 == ap_CS_fsm_state88) & (grp_real_1_fu_1296_complex_float_s_o_blk_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end
        end
        ap_ST_fsm_state89 : begin
            if (((1'b1 == ap_CS_fsm_state89) & (grp_imag_1_fu_1308_complex_float_s_o_blk_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end
        end
        ap_ST_fsm_state90 : begin
            if (((1'b1 == ap_CS_fsm_state90) & (grp_fft_top_fu_1179_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state90;
            end
        end
        ap_ST_fsm_state91 : begin
            if ((~((out6_empty_n == 1'b0) & (exitcond21_fu_1822_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state91) & (exitcond21_fu_1822_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end else if ((~((out6_empty_n == 1'b0) & (exitcond21_fu_1822_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state91) & (exitcond21_fu_1822_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end
        end
        ap_ST_fsm_state92 : begin
            if ((~((grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b0) | (out6_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state92))) begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end
        end
        ap_ST_fsm_state93 : begin
            if (((1'b1 == ap_CS_fsm_state93) & (grp_imag380_fu_1332_complex_float_M_imag_blk_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end
        end
        ap_ST_fsm_state94 : begin
            if (((1'b1 == ap_CS_fsm_state94) & (exitcond15_fu_1855_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end
        end
        ap_ST_fsm_state95 : begin
            if ((~(((xk2_M_imag_empty_n == 1'b0) & (exitcond20_fu_1892_p2 == 1'd0)) | ((xk2_M_real_empty_n == 1'b0) & (exitcond20_fu_1892_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state95) & (exitcond20_fu_1892_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end else if ((~(((xk2_M_imag_empty_n == 1'b0) & (exitcond20_fu_1892_p2 == 1'd0)) | ((xk2_M_real_empty_n == 1'b0) & (exitcond20_fu_1892_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state95) & (exitcond20_fu_1892_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            if (((1'b1 == ap_CS_fsm_state97) & (res_data_stream_0_V_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten_fu_2238_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten_fu_2238_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((~((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter0 == 1'b0)) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((1'b0 == ap_block_pp1_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_state104 : begin
            if ((~((1'b0 == OUTPUT_last_V_1_ack_in) | (1'b0 == OUTPUT_user_V_1_ack_in) | (1'b0 == OUTPUT_data_V_1_ack_in)) & (OUTPUT_last_V_1_state[1'd0] == 1'b0) & (OUTPUT_user_V_1_state[1'd0] == 1'b0) & (OUTPUT_data_V_1_state[1'd0] == 1'b0) & (1'b1 == ap_CS_fsm_state104))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign G1_M_imag_fifo_U_ap_dummy_ce = 1'b1;

assign G1_M_real_fifo_U_ap_dummy_ce = 1'b1;

assign INPUT_data_V_0_ack_in = INPUT_data_V_0_state[1'd1];

assign INPUT_data_V_0_load_A = (~INPUT_data_V_0_sel_wr & INPUT_data_V_0_state_cmp_full);

assign INPUT_data_V_0_load_B = (INPUT_data_V_0_state_cmp_full & INPUT_data_V_0_sel_wr);

assign INPUT_data_V_0_sel = INPUT_data_V_0_sel_rd;

assign INPUT_data_V_0_state_cmp_full = ((INPUT_data_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign INPUT_data_V_0_vld_in = in_stream_TVALID;

assign INPUT_data_V_0_vld_out = INPUT_data_V_0_state[1'd0];

assign INPUT_last_V_0_vld_in = in_stream_TVALID;

assign OUTPUT_data_V_1_ack_in = OUTPUT_data_V_1_state[1'd1];

assign OUTPUT_data_V_1_ack_out = out_stream_TREADY;

assign OUTPUT_data_V_1_load_A = (~OUTPUT_data_V_1_sel_wr & OUTPUT_data_V_1_state_cmp_full);

assign OUTPUT_data_V_1_load_B = (OUTPUT_data_V_1_state_cmp_full & OUTPUT_data_V_1_sel_wr);

assign OUTPUT_data_V_1_sel = OUTPUT_data_V_1_sel_rd;

assign OUTPUT_data_V_1_state_cmp_full = ((OUTPUT_data_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign OUTPUT_data_V_1_vld_out = OUTPUT_data_V_1_state[1'd0];

assign OUTPUT_last_V_1_ack_in = OUTPUT_last_V_1_state[1'd1];

assign OUTPUT_last_V_1_ack_out = out_stream_TREADY;

assign OUTPUT_last_V_1_load_A = (~OUTPUT_last_V_1_sel_wr & OUTPUT_last_V_1_state_cmp_full);

assign OUTPUT_last_V_1_load_B = (OUTPUT_last_V_1_state_cmp_full & OUTPUT_last_V_1_sel_wr);

assign OUTPUT_last_V_1_sel = OUTPUT_last_V_1_sel_rd;

assign OUTPUT_last_V_1_state_cmp_full = ((OUTPUT_last_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign OUTPUT_last_V_1_vld_out = OUTPUT_last_V_1_state[1'd0];

assign OUTPUT_user_V_1_ack_in = OUTPUT_user_V_1_state[1'd1];

assign OUTPUT_user_V_1_ack_out = out_stream_TREADY;

assign OUTPUT_user_V_1_load_A = (~OUTPUT_user_V_1_sel_wr & OUTPUT_user_V_1_state_cmp_full);

assign OUTPUT_user_V_1_load_B = (OUTPUT_user_V_1_state_cmp_full & OUTPUT_user_V_1_sel_wr);

assign OUTPUT_user_V_1_sel = OUTPUT_user_V_1_sel_rd;

assign OUTPUT_user_V_1_state_cmp_full = ((OUTPUT_user_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign OUTPUT_user_V_1_vld_out = OUTPUT_user_V_1_state[1'd0];

assign abscond_fu_2175_p2 = (($signed(p_Val2_108_reg_2835) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd98];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd95];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((src_bw_data_stream_0_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_56_reg_2447 == 1'd1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((src_bw_data_stream_0_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_56_reg_2447 == 1'd1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((src_bw_data_stream_0_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_56_reg_2447 == 1'd1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((1'b0 == INPUT_data_V_0_vld_out) & (tmp_56_reg_2447 == 1'd1)) | ((src_bw_data_stream_0_full_n == 1'b0) & (tmp_56_reg_2447 == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((1'b0 == INPUT_data_V_0_vld_out) & (tmp_56_reg_2447 == 1'd1)) | ((src_bw_data_stream_0_full_n == 1'b0) & (tmp_56_reg_2447 == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((1'b0 == INPUT_data_V_0_vld_out) & (tmp_56_reg_2447 == 1'd1)) | ((src_bw_data_stream_0_full_n == 1'b0) & (tmp_56_reg_2447 == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((src_bw_data_stream_0_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_56_reg_2447 == 1'd1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((src_bw_data_stream_0_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_56_reg_2447 == 1'd1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((src_bw_data_stream_0_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_56_reg_2447 == 1'd1));
end

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((src_bw_data_stream_0_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_56_reg_2447 == 1'd1));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((src_bw_data_stream_0_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_56_reg_2447 == 1'd1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((src_bw_data_stream_0_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_56_reg_2447 == 1'd1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((res_data_stream_0_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond_flatten_reg_2857 == 1'd0));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state102_io) | ((res_data_stream_0_V_empty_n == 1'b0) & (exitcond_flatten_reg_2857 == 1'd0))));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state102_io) | ((res_data_stream_0_V_empty_n == 1'b0) & (exitcond_flatten_reg_2857 == 1'd0))));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_11001 = (((res_data_stream_0_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten_reg_2857 == 1'd0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_block_state103_io)));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = (((res_data_stream_0_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten_reg_2857 == 1'd0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_block_state103_io)));
end

always @ (*) begin
    ap_block_pp1_stage2_11001 = ((res_data_stream_0_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten_reg_2857 == 1'd0));
end

always @ (*) begin
    ap_block_pp1_stage2_subdone = ((res_data_stream_0_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten_reg_2857 == 1'd0));
end

assign ap_block_pp1_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage3_11001 = ((res_data_stream_0_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten_reg_2857 == 1'd0));
end

always @ (*) begin
    ap_block_pp1_stage3_subdone = ((res_data_stream_0_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten_reg_2857 == 1'd0));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | ((kernel_M_imag_full_n == 1'b0) & (guard_variable_for_W == 1'd0)) | ((kernel_M_real_full_n == 1'b0) & (guard_variable_for_W == 1'd0)));
end

always @ (*) begin
    ap_block_state100_pp1_stage2_iter0 = ((res_data_stream_0_V_empty_n == 1'b0) & (exitcond_flatten_reg_2857 == 1'd0));
end

always @ (*) begin
    ap_block_state101_pp1_stage3_iter0 = ((res_data_stream_0_V_empty_n == 1'b0) & (exitcond_flatten_reg_2857 == 1'd0));
end

always @ (*) begin
    ap_block_state102_io = ((1'b0 == OUTPUT_data_V_1_ack_in) & (exitcond_flatten_reg_2857 == 1'd0));
end

always @ (*) begin
    ap_block_state102_pp1_stage0_iter1 = ((res_data_stream_0_V_empty_n == 1'b0) & (exitcond_flatten_reg_2857 == 1'd0));
end

always @ (*) begin
    ap_block_state103_io = ((1'b0 == OUTPUT_data_V_1_ack_in) & (exitcond_flatten_reg_2857_pp1_iter1_reg == 1'd0));
end

assign ap_block_state103_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state104 = ((1'b0 == OUTPUT_last_V_1_ack_in) | (1'b0 == OUTPUT_user_V_1_ack_in) | (1'b0 == OUTPUT_data_V_1_ack_in));
end

always @ (*) begin
    ap_block_state12 = ((src_bw_data_stream_0_empty_n == 1'b0) & (exitcond9_fu_1503_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state19 = ((grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b0) | (grp_imag380_fu_1332_complex_float_M_imag_blk_n == 1'b0));
end

always @ (*) begin
    ap_block_state2 = ((kernel_M_imag_full_n == 1'b0) | (kernel_M_real_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state21 = (((xn1_M_imag_empty_n == 1'b0) & (exitcond10_fu_1529_p2 == 1'd0)) | ((xn1_M_real_empty_n == 1'b0) & (exitcond10_fu_1529_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_state21_ignore_call0 = (((xn1_M_imag_empty_n == 1'b0) & (exitcond10_fu_1529_p2 == 1'd0)) | ((xn1_M_real_empty_n == 1'b0) & (exitcond10_fu_1529_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_state25 = ((out1_empty_n == 1'b0) & (exitcond11_fu_1540_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state33 = (((middle_M_imag_empty_n == 1'b0) & (exitcond3_fu_1585_p2 == 1'd0)) | ((middle_M_real_empty_n == 1'b0) & (exitcond3_fu_1585_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_state33_ignore_call0 = (((middle_M_imag_empty_n == 1'b0) & (exitcond3_fu_1585_p2 == 1'd0)) | ((middle_M_real_empty_n == 1'b0) & (exitcond3_fu_1585_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_state37 = ((out2_empty_n == 1'b0) & (exitcond6_fu_1597_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state4 = (((kernel_M_imag_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0)) | ((kernel_M_real_full_n == 1'b0) & (guard_variable_for_W_1_reg_2401 == 1'd0)));
end

always @ (*) begin
    ap_block_state46 = (((kernel_M_imag_empty_n == 1'b0) & (exitcond5_fu_1643_p2 == 1'd0)) | ((kernel_M_real_empty_n == 1'b0) & (exitcond5_fu_1643_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_state46_ignore_call0 = (((kernel_M_imag_empty_n == 1'b0) & (exitcond5_fu_1643_p2 == 1'd0)) | ((kernel_M_real_empty_n == 1'b0) & (exitcond5_fu_1643_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_state50 = ((out3_empty_n == 1'b0) & (exitcond14_fu_1655_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state51 = ((out3_empty_n == 1'b0) | (grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b0));
end

always @ (*) begin
    ap_block_state54 = (((middle_M_imag_empty_n == 1'b0) & (exitcond_fu_1700_p2 == 1'd0)) | ((middle_M_real_empty_n == 1'b0) & (exitcond_fu_1700_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_state54_ignore_call0 = (((middle_M_imag_empty_n == 1'b0) & (exitcond_fu_1700_p2 == 1'd0)) | ((middle_M_real_empty_n == 1'b0) & (exitcond_fu_1700_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_state58 = ((out4_empty_n == 1'b0) & (exitcond17_fu_1712_p2 == 1'd0));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage1_iter0 = (((1'b0 == INPUT_data_V_0_vld_out) & (tmp_56_reg_2447 == 1'd1)) | ((src_bw_data_stream_0_full_n == 1'b0) & (tmp_56_reg_2447 == 1'd1)));
end

always @ (*) begin
    ap_block_state79 = (((xk1_M_imag_empty_n == 1'b0) & (exitcond16_fu_1756_p2 == 1'd0)) | ((xk1_M_real_empty_n == 1'b0) & (exitcond16_fu_1756_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_state79_ignore_call0 = (((xk1_M_imag_empty_n == 1'b0) & (exitcond16_fu_1756_p2 == 1'd0)) | ((xk1_M_real_empty_n == 1'b0) & (exitcond16_fu_1756_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_state7_pp0_stage2_iter0 = ((src_bw_data_stream_0_full_n == 1'b0) & (tmp_56_reg_2447 == 1'd1));
end

always @ (*) begin
    ap_block_state83 = ((out5_empty_n == 1'b0) & (exitcond19_fu_1767_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state84 = ((grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b0) | (out5_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state87 = (((middle2_M_imag_empty_n == 1'b0) & (exitcond18_fu_1811_p2 == 1'd0)) | ((middle2_M_real_empty_n == 1'b0) & (exitcond18_fu_1811_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_state87_ignore_call0 = (((middle2_M_imag_empty_n == 1'b0) & (exitcond18_fu_1811_p2 == 1'd0)) | ((middle2_M_real_empty_n == 1'b0) & (exitcond18_fu_1811_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_state8_pp0_stage3_iter0 = ((src_bw_data_stream_0_full_n == 1'b0) & (tmp_56_reg_2447 == 1'd1));
end

always @ (*) begin
    ap_block_state91 = ((out6_empty_n == 1'b0) & (exitcond21_fu_1822_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state92 = ((grp_real379_fu_1320_complex_float_M_real_blk_n == 1'b0) | (out6_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state95 = (((xk2_M_imag_empty_n == 1'b0) & (exitcond20_fu_1892_p2 == 1'd0)) | ((xk2_M_real_empty_n == 1'b0) & (exitcond20_fu_1892_p2 == 1'd0)));
end

assign ap_block_state98_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state99_pp1_stage1_iter0 = ((res_data_stream_0_V_empty_n == 1'b0) & (exitcond_flatten_reg_2857 == 1'd0));
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter1 = ((src_bw_data_stream_0_full_n == 1'b0) & (tmp_56_reg_2447 == 1'd1));
end

always @ (*) begin
    ap_condition_2468 = ((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_2473 = ((1'b0 == ap_block_pp0_stage2_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_2478 = ((1'b0 == ap_block_pp0_stage3_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_2483 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_rst_n_AXI_LITE_clk_inv = ~ap_rst_n_AXI_LITE_clk;
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bound_fu_1886_p0 = bound_fu_1886_p00;

assign bound_fu_1886_p00 = $unsigned(cast_fu_1880_p0);

assign bound_fu_1886_p1 = bound_fu_1886_p10;

assign bound_fu_1886_p10 = col_packets_fu_1416_p4;

assign bound_fu_1886_p2 = (bound_fu_1886_p0 * bound_fu_1886_p1);

assign c14_cast_mid2_cast_fu_2297_p1 = c14_mid2_fu_2260_p3;

assign c14_mid2_fu_2260_p3 = ((tmp_90_fu_2255_p2[0:0] === 1'b1) ? ap_phi_mux_c12_phi_fu_1136_p4 : 30'd0);

assign c_12_fu_1805_p2 = (i_op_assign_s_reg_1055 + 32'd1);

assign c_13_fu_1761_p2 = (i_op_assign_9_reg_1033 + 32'd1);

assign c_16_fu_1772_p2 = (i_op_assign_10_reg_1044 + 32'd1);

assign c_17_fu_1897_p2 = (i_op_assign_14_reg_1099 + 32'd1);

assign c_1_fu_2342_p2 = (30'd1 + c14_mid2_reg_2866);

assign c_4_fu_1534_p2 = (i_op_assign_4_reg_901 + 32'd1);

assign c_5_fu_1545_p2 = (i_op_assign_5_reg_912 + 32'd1);

assign c_6_fu_1649_p2 = (c9_reg_967 + 9'd1);

assign c_7_fu_1579_p2 = (c5_reg_923 + 9'd1);

assign c_8_fu_1660_p2 = (i_op_assign_6_reg_978 + 32'd1);

assign c_9_fu_1694_p2 = (c6_reg_989 + 9'd1);

assign c_fu_1508_p2 = (i_op_assign_2_reg_879 + 32'd1);

assign cast_fu_1880_p0 = rows_V;

assign col_packets_cast_fu_1429_p1 = col_packets_fu_1416_p4;

assign col_packets_fu_1416_p4 = {{cols_V[31:2]}};

assign exitcond10_fu_1529_p2 = ((i_op_assign_4_reg_901 == cols_V) ? 1'b1 : 1'b0);

assign exitcond11_fu_1540_p2 = ((i_op_assign_5_reg_912 == cols_V) ? 1'b1 : 1'b0);

assign exitcond12_fu_1745_p1 = rows_V;

assign exitcond12_fu_1745_p2 = ((i_op_assign_8_reg_1022 == exitcond12_fu_1745_p1) ? 1'b1 : 1'b0);

assign exitcond13_fu_1800_p2 = ((i_op_assign_s_reg_1055 == cols_V) ? 1'b1 : 1'b0);

assign exitcond14_fu_1655_p2 = ((i_op_assign_6_reg_978 == cols_V) ? 1'b1 : 1'b0);

assign exitcond15_fu_1855_p1 = rows_V;

assign exitcond15_fu_1855_p2 = ((i_op_assign_1_reg_1088 == exitcond15_fu_1855_p1) ? 1'b1 : 1'b0);

assign exitcond16_fu_1756_p2 = ((i_op_assign_9_reg_1033 == cols_V) ? 1'b1 : 1'b0);

assign exitcond17_fu_1712_p1 = rows_V;

assign exitcond17_fu_1712_p2 = ((i_op_assign_7_reg_1011 == exitcond17_fu_1712_p1) ? 1'b1 : 1'b0);

assign exitcond18_fu_1811_p1 = rows_V;

assign exitcond18_fu_1811_p2 = ((i_op_assign_11_reg_1066 == exitcond18_fu_1811_p1) ? 1'b1 : 1'b0);

assign exitcond19_fu_1767_p2 = ((i_op_assign_10_reg_1044 == cols_V) ? 1'b1 : 1'b0);

assign exitcond1_fu_1573_p2 = ((c5_reg_923 == 9'd256) ? 1'b1 : 1'b0);

assign exitcond20_fu_1892_p2 = ((i_op_assign_14_reg_1099 == cols_V) ? 1'b1 : 1'b0);

assign exitcond21_fu_1822_p1 = rows_V;

assign exitcond21_fu_1822_p2 = ((i_op_assign_13_reg_1077 == exitcond21_fu_1822_p1) ? 1'b1 : 1'b0);

assign exitcond2_fu_1631_p2 = ((r8_reg_956 == 9'd256) ? 1'b1 : 1'b0);

assign exitcond3_fu_1585_p2 = ((r6_reg_934 == 9'd256) ? 1'b1 : 1'b0);

assign exitcond4_fu_1688_p2 = ((c6_reg_989 == 9'd256) ? 1'b1 : 1'b0);

assign exitcond5_fu_1643_p2 = ((c9_reg_967 == 9'd256) ? 1'b1 : 1'b0);

assign exitcond6_fu_1597_p2 = ((r7_reg_945 == 9'd256) ? 1'b1 : 1'b0);

assign exitcond7_fu_1492_p1 = rows_V;

assign exitcond7_fu_1492_p2 = ((i_op_assign_reg_868 == exitcond7_fu_1492_p1) ? 1'b1 : 1'b0);

assign exitcond8_fu_1518_p1 = rows_V;

assign exitcond8_fu_1518_p2 = ((i_op_assign_3_reg_890 == exitcond8_fu_1518_p1) ? 1'b1 : 1'b0);

assign exitcond9_fu_1503_p2 = ((i_op_assign_2_reg_879 == cols_V) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_2238_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_1114_p4 == bound_fu_1886_p2) ? 1'b1 : 1'b0);

assign exitcond_fu_1700_p2 = ((r9_reg_1000 == 9'd256) ? 1'b1 : 1'b0);

assign fft_kernel_M_imag_din = grp_imag380_fu_1332_complex_float_M_imag_din;

assign fft_kernel_M_imag_fifo_U_ap_dummy_ce = 1'b1;

assign fft_kernel_M_real_din = grp_real379_fu_1320_complex_float_M_real_din;

assign fft_kernel_M_real_fifo_U_ap_dummy_ce = 1'b1;

assign fft_kernel_modu2_M_1_din = grp_InnerProd_1_fu_1240_fft_kernel_modu2_M_1_din;

assign fft_kernel_modu2_M_1_fifo_U_ap_dummy_ce = 1'b1;

assign fft_kernel_modu2_M_s_din = grp_InnerProd_1_fu_1240_fft_kernel_modu2_M_s_din;

assign fft_kernel_modu2_M_s_fifo_U_ap_dummy_ce = 1'b1;

assign grp_InnerProd381_fu_1252_ap_start = grp_InnerProd381_fu_1252_ap_start_reg;

assign grp_InnerProd382_fu_1268_ap_start = grp_InnerProd382_fu_1268_ap_start_reg;

assign grp_InnerProd_1_fu_1240_ap_start = grp_InnerProd_1_fu_1240_ap_start_reg;

assign grp_KernelMaker_fu_1232_ap_start = grp_KernelMaker_fu_1232_ap_start_reg;

assign grp_fft_top_fu_1179_ap_start = grp_fft_top_fu_1179_ap_start_reg;

assign grp_fu_1351_p0 = tmp_63_reg_2487;

assign grp_matrix_div_1_fu_1204_ap_start = grp_matrix_div_1_fu_1204_ap_start_reg;

assign grp_matrix_div_fu_1216_ap_start = grp_matrix_div_fu_1216_ap_start_reg;

assign grp_matrix_modulus_fu_1143_ap_start = grp_matrix_modulus_fu_1143_ap_start_reg;

assign grp_matrix_plus_SNR_fu_1284_ap_start = grp_matrix_plus_SNR_fu_1284_ap_start_reg;

assign guard_variable_for_W_1_load_fu_1370_p1 = guard_variable_for_W;

assign in1_fifo_U_ap_dummy_ce = 1'b1;

assign in2_fifo_U_ap_dummy_ce = 1'b1;

assign in3_fifo_U_ap_dummy_ce = 1'b1;

assign in4_fifo_U_ap_dummy_ce = 1'b1;

assign in5_fifo_U_ap_dummy_ce = 1'b1;

assign in6_fifo_U_ap_dummy_ce = 1'b1;

assign in_stream_TREADY = INPUT_last_V_0_state[1'd1];

assign indvar_flatten_next_fu_2243_p2 = (ap_phi_mux_indvar_flatten_phi_fu_1114_p4 + 62'd1);

assign isNeg_fu_1939_p3 = sh_assign_fu_1933_p2[32'd8];

assign kernel_M_imag_fifo_U_ap_dummy_ce = 1'b1;

assign kernel_M_real_fifo_U_ap_dummy_ce = 1'b1;

assign lhs_V_cast_fu_1871_p0 = rows_V;

assign lhs_V_cast_fu_1871_p1 = $unsigned(lhs_V_cast_fu_1871_p0);

assign mantissa_V_7_cast5_fu_1974_p1 = mantissa_V_fu_1965_p4;

assign mantissa_V_fu_1965_p4 = {{{{1'd1}, {tmp_V_8_reg_2814}}}, {1'd0}};

assign middle2_M_imag_din = grp_imag380_fu_1332_complex_float_M_imag_din;

assign middle2_M_imag_fifo_U_ap_dummy_ce = 1'b1;

assign middle2_M_real_din = grp_real379_fu_1320_complex_float_M_real_din;

assign middle2_M_real_fifo_U_ap_dummy_ce = 1'b1;

assign middle_M_imag_din = grp_imag380_fu_1332_complex_float_M_imag_din;

assign middle_M_imag_fifo_U_ap_dummy_ce = 1'b1;

assign middle_M_real_din = grp_real379_fu_1320_complex_float_M_real_din;

assign middle_M_real_fifo_U_ap_dummy_ce = 1'b1;

assign out1_M_imag_load_fu_1569_p1 = out1_M_imag_load_ne_reg_2546;

assign out1_M_real_load_fu_1555_p1 = tmp_74_reg_2536;

assign out1_din = grp_fft_top_fu_1179_out_r_din;

assign out1_fifo_U_ap_dummy_ce = 1'b1;

assign out2_M_imag_load_fu_1627_p1 = out2_M_imag_load_ne_reg_2590;

assign out2_M_real_load_fu_1613_p1 = tmp_75_reg_2580;

assign out2_din = grp_fft_top_fu_1179_out_r_din;

assign out2_fifo_U_ap_dummy_ce = 1'b1;

assign out3_M_imag_load_fu_1684_p1 = out3_M_imag_load_ne_reg_2639;

assign out3_M_real_load_fu_1670_p1 = tmp_77_reg_2634;

assign out3_din = grp_fft_top_fu_1179_out_r_din;

assign out3_fifo_U_ap_dummy_ce = 1'b1;

assign out4_M_imag_load_fu_1741_p1 = out4_M_imag_load_ne_reg_2678;

assign out4_M_real_load_fu_1727_p1 = tmp_80_reg_2668;

assign out4_din = grp_fft_top_fu_1179_out_r_din;

assign out4_fifo_U_ap_dummy_ce = 1'b1;

assign out5_M_imag_load_fu_1796_p1 = out5_M_imag_load_ne_reg_2727;

assign out5_M_real_load_fu_1782_p1 = tmp_87_reg_2722;

assign out5_din = grp_fft_top_fu_1179_out_r_din;

assign out5_fifo_U_ap_dummy_ce = 1'b1;

assign out6_M_imag_load_fu_1851_p1 = out6_M_imag_load_ne_reg_2771;

assign out6_M_real_load_fu_1837_p1 = tmp_112_reg_2766;

assign out6_din = grp_fft_top_fu_1179_out_r_din;

assign out6_fifo_U_ap_dummy_ce = 1'b1;

assign out_stream_TDATA = OUTPUT_data_V_1_data_out;

assign out_stream_TLAST = OUTPUT_last_V_1_data_out;

assign out_stream_TUSER = OUTPUT_user_V_1_data_out;

assign out_stream_TVALID = OUTPUT_last_V_1_state[1'd0];

assign out_stream_last_V_tm_fu_2336_p2 = (tmp_91_fu_2331_p2 & tmp_74_mid2_fu_2277_p3);

assign out_stream_user_V_tm_fu_2325_p2 = ((tmp_89_fu_2317_p3 == 32'd0) ? 1'b1 : 1'b0);

assign p_Result_29_fu_2347_p5 = {{{{res_data_stream_0_V_dout}, {tmp_99_reg_2896}}, {tmp_96_reg_2891}}, {tmp_95_reg_2886}};

assign p_Val2_101_fu_1903_p1 = xk2_M_real_dout;

assign p_Val2_107_fu_2022_p3 = ((isNeg_reg_2819[0:0] === 1'b1) ? tmp_93_fu_2008_p1 : tmp_94_fu_2012_p4);

assign p_Val2_108_fu_2035_p3 = ((p_Result_s_reg_2809[0:0] === 1'b1) ? result_V_4_fu_2029_p2 : p_Val2_107_fu_2022_p3);

assign p_sum1_fu_1386_p2 = (p_rec2_reg_834 + 8'd1);

assign p_sum_fu_1374_p2 = (p_rec1_reg_823 + 8'd1);

assign packets_fu_1433_p0 = packets_fu_1433_p00;

assign packets_fu_1433_p00 = col_packets_fu_1416_p4;

assign packets_fu_1433_p1 = rows_V;

assign packets_fu_1433_p2 = ($signed({{1'b0}, {packets_fu_1433_p0}}) * $signed(packets_fu_1433_p1));

assign r_10_fu_1637_p2 = (r8_reg_956 + 9'd1);

assign r_13_fu_1750_p2 = (i_op_assign_8_reg_1022 + 32'd1);

assign r_14_fu_1717_p2 = (i_op_assign_7_reg_1011 + 32'd1);

assign r_15_fu_1860_p2 = (i_op_assign_1_reg_1088 + 32'd1);

assign r_16_fu_1816_p2 = (i_op_assign_11_reg_1066 + 32'd1);

assign r_18_fu_1827_p2 = (i_op_assign_13_reg_1077 + 32'd1);

assign r_1_fu_2249_p2 = (32'd1 + ap_phi_mux_i_op_assign_12_phi_fu_1125_p4);

assign r_4_fu_1447_p2 = (ap_phi_mux_r_phi_fu_861_p4 + 31'd1);

assign r_5_fu_1497_p2 = (i_op_assign_reg_868 + 32'd1);

assign r_6_fu_1523_p2 = (i_op_assign_3_reg_890 + 32'd1);

assign r_7_fu_1591_p2 = (r6_reg_934 + 9'd1);

assign r_8_fu_1603_p2 = (r7_reg_945 + 9'd1);

assign r_9_fu_1706_p2 = (r9_reg_1000 + 9'd1);

assign r_V_42_fu_1994_p2 = mantissa_V_7_cast5_fu_1974_p1 << tmp_i_i_i_438_fu_1984_p1;

assign r_V_fu_1988_p2 = mantissa_V_fu_1965_p4 >> sh_assign_16_cast_ca_fu_1981_p1;

assign r_cast_fu_1438_p1 = ap_phi_mux_r_phi_fu_861_p4;

assign res_data_stream_0_V_din = ((abscond_fu_2175_p2[0:0] === 1'b1) ? tmp_105_reg_2840 : tmp_76_fu_2180_p2);

assign result_V_4_fu_2029_p2 = (32'd0 - p_Val2_107_fu_2022_p3);

assign ret_V_fu_1874_p2 = ($signed(lhs_V_cast_fu_1871_p1) + $signed(33'd8589934591));

assign sh_assign_16_cast_ca_fu_1981_p1 = ush_reg_2824;

assign sh_assign_16_cast_fu_1978_p1 = ush_reg_2824;

assign sh_assign_fu_1933_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i_cast4_fu_1929_p1));

assign tmp_104_fu_2000_p3 = r_V_fu_1988_p2[32'd24];

assign tmp_105_fu_2042_p1 = p_Val2_108_fu_2035_p3[7:0];

assign tmp_112_fu_1833_p1 = out6_dout[31:0];

assign tmp_127_cast_fu_2229_p1 = ap_phi_mux_i_op_assign_12_phi_fu_1125_p4;

assign tmp_127_cast_mid1_fu_2268_p1 = r_1_fu_2249_p2;

assign tmp_53_fu_1392_p2 = (tmp_52_reg_846 + 8'd1);

assign tmp_54_fu_1398_p2 = ((tmp_52_reg_846 == 8'd255) ? 1'b1 : 1'b0);

assign tmp_55_fu_1404_p2 = ((p_rec2_reg_834 == 8'd254) ? 1'b1 : 1'b0);

assign tmp_56_fu_1442_p2 = (($signed(r_cast_fu_1438_p1) < $signed(packets_fu_1433_p2)) ? 1'b1 : 1'b0);

assign tmp_61_fu_1457_p1 = INPUT_data_V_0_data_out[7:0];

assign tmp_71_fu_1866_p2 = ($signed(col_packets_cast_fu_1429_p1) + $signed(31'd2147483647));

assign tmp_72_fu_2233_p2 = ((tmp_127_cast_fu_2229_p1 == ret_V_fu_1874_p2) ? 1'b1 : 1'b0);

assign tmp_74_fu_1551_p1 = out1_dout[31:0];

assign tmp_74_mid1_fu_2272_p2 = ((tmp_127_cast_mid1_fu_2268_p1 == ret_V_fu_1874_p2) ? 1'b1 : 1'b0);

assign tmp_74_mid2_fu_2277_p3 = ((tmp_90_fu_2255_p2[0:0] === 1'b1) ? tmp_72_fu_2233_p2 : tmp_74_mid1_fu_2272_p2);

assign tmp_75_fu_1609_p1 = out2_dout[31:0];

assign tmp_76_fu_2180_p2 = (8'd0 - tmp_105_reg_2840);

assign tmp_77_fu_1666_p1 = out3_dout[31:0];

assign tmp_80_fu_1723_p1 = out4_dout[31:0];

assign tmp_86_fu_2301_p2 = (tmp_92_fu_2293_p1 | c14_mid2_fu_2260_p3);

assign tmp_87_fu_1778_p1 = out5_dout[31:0];

assign tmp_87_mid2_v_fu_2285_p3 = ((tmp_90_fu_2255_p2[0:0] === 1'b1) ? ap_phi_mux_i_op_assign_12_phi_fu_1125_p4 : r_1_fu_2249_p2);

assign tmp_88_fu_2307_p4 = {{tmp_87_mid2_v_fu_2285_p3[31:30]}};

assign tmp_89_fu_2317_p3 = {{tmp_88_fu_2307_p4}, {tmp_86_fu_2301_p2}};

assign tmp_90_fu_2255_p2 = ((ap_phi_mux_c12_phi_fu_1136_p4 < col_packets_fu_1416_p4) ? 1'b1 : 1'b0);

assign tmp_91_fu_2331_p2 = ((c14_cast_mid2_cast_fu_2297_p1 == tmp_71_fu_1866_p2) ? 1'b1 : 1'b0);

assign tmp_92_fu_2293_p1 = tmp_87_mid2_v_fu_2285_p3[29:0];

assign tmp_93_fu_2008_p1 = tmp_104_fu_2000_p3;

assign tmp_94_fu_2012_p4 = {{r_V_42_fu_1994_p2[55:24]}};

assign tmp_V_8_fu_1925_p1 = p_Val2_101_fu_1903_p1[22:0];

assign tmp_V_fu_1915_p4 = {{p_Val2_101_fu_1903_p1[30:23]}};

assign tmp_i_i_i_438_fu_1984_p1 = $unsigned(sh_assign_16_cast_fu_1978_p1);

assign tmp_i_i_i_cast_fu_1953_p1 = $signed(tmp_i_i_i_fu_1947_p2);

assign tmp_i_i_i_fu_1947_p2 = (8'd127 - tmp_V_fu_1915_p4);

assign tmp_i_i_i_i_cast4_fu_1929_p1 = tmp_V_fu_1915_p4;

assign tmp_s_fu_1380_p2 = ((p_rec1_reg_823 == 8'd254) ? 1'b1 : 1'b0);

assign ush_fu_1957_p3 = ((isNeg_fu_1939_p3[0:0] === 1'b1) ? tmp_i_i_i_cast_fu_1953_p1 : sh_assign_fu_1933_p2);

assign xk1_M_imag_fifo_U_ap_dummy_ce = 1'b1;

assign xk1_M_real_fifo_U_ap_dummy_ce = 1'b1;

assign xk2_M_imag_din = grp_imag380_fu_1332_complex_float_M_imag_din;

assign xk2_M_imag_fifo_U_ap_dummy_ce = 1'b1;

assign xk2_M_real_din = grp_real379_fu_1320_complex_float_M_real_din;

assign xk2_M_real_fifo_U_ap_dummy_ce = 1'b1;

assign xn1_M_imag_din = grp_imag380_fu_1332_complex_float_M_imag_din;

assign xn1_M_imag_fifo_U_ap_dummy_ce = 1'b1;

assign xn1_M_real_din = grp_real379_fu_1320_complex_float_M_real_din;

assign xn1_M_real_fifo_U_ap_dummy_ce = 1'b1;

endmodule //WienerDeblur
